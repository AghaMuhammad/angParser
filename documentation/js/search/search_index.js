var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.131,1,0.833]],["body/components/AppComponent.html",[0,0.211,1,1.429,2,1.268,3,0.257,4,0.257,5,1.013,6,1.013,7,1.013,8,0.257,9,3.24,10,0.899,11,1.503,12,1.5,13,2.68,14,0.993,15,0.931,16,1.124,17,1.429,18,4.833,19,1.429,20,1.812,21,5.059,22,0.669,23,0.023,24,0.457,25,3.808,26,0.846,27,3.808,28,0.288,29,0.494,30,1.013,31,1.346,32,1.346,33,0.796,34,1.61,35,1.013,36,0.854,37,1.013,38,0.899,39,1.159,40,1.013,41,0.899,42,1.676,43,0.899,44,1.013,45,0.899,46,1.013,47,0.899,48,1.013,49,0.846,50,0.899,51,0.846,52,0.899,53,0.899,54,0.899,55,1.346,56,0.899,57,0.899,58,1.346,59,1.013,60,1.013,61,0.899,62,0.955,63,0.747,64,0.796,65,1.013,66,0.899,67,0.979,68,1.013,69,0.899,70,0.899,71,1.013,72,0.846,73,0.899,74,0.796,75,0.955,76,0.846,77,0.955,78,1.013,79,0.016,80,0.016]],["title/interfaces/Article.html",[39,0.649,81,0.737]],["body/interfaces/Article.html",[3,0.294,4,0.294,8,0.294,22,0.481,23,0.023,28,0.329,39,1.014,67,1.097,79,0.018,80,0.018,81,0.908,82,1.876,83,3.698,84,0.259,85,0.715,86,3.949,87,3.949,88,5.415,89,4.789,90,3.372,91,6.365,92,3.949,93,4.789,94,3.949,95,6.365,96,0.474,97,1.936,98,2.986,99,4.11,100,3.27]],["title/components/ArticleCommentComponent.html",[0,0.131,38,0.833]],["body/components/ArticleCommentComponent.html",[0,0.185,1,0.697,2,1.064,3,0.2,4,0.2,5,1.129,6,0.786,7,0.786,8,0.2,10,0.697,11,1.465,12,1.46,14,0.833,15,0.781,16,0.943,17,0.697,19,0.697,22,0.682,23,0.024,24,0.355,26,0.656,28,0.224,29,0.383,30,0.786,31,1.129,32,1.129,33,0.617,34,1.444,35,0.786,36,0.746,37,0.786,38,1.282,39,1.135,40,0.786,41,0.697,42,1.53,43,0.697,44,0.786,45,0.697,46,0.786,47,0.697,48,0.786,49,0.656,50,0.697,51,0.656,52,0.697,53,0.697,54,0.697,55,1.129,56,0.697,57,0.697,58,1.129,59,0.786,60,0.786,61,0.697,62,0.741,63,0.58,64,0.617,65,0.786,66,0.697,67,0.856,68,0.786,69,0.697,70,0.697,71,0.786,72,0.656,73,0.697,74,0.617,75,0.741,76,0.656,77,0.741,78,0.786,79,0.014,80,0.014,84,0.176,85,0.551,96,0.287,101,3.368,102,2.513,103,3.498,104,2.288,105,3.737,106,2.45,107,3.081,108,4.966,109,3.61,110,4.966,111,4.966,112,3.737,113,4.225,114,5.092,115,3.737,116,2.093,117,3.193,118,3.081,119,0.856,120,2.954,121,3.737,122,2.954,123,0.617,124,0.697,125,4.243,126,2.631,127,4.243,128,1.778,129,2.248,130,4.243,131,4.243,132,2.954,133,2.093,134,3.193,135,0.786,136,0.741,137,1.275,138,2.006,139,1.275,140,2.223,141,0.834,142,0.939]],["title/components/ArticleComponent.html",[0,0.131,41,0.833]],["body/components/ArticleComponent.html",[0,0.129,1,0.395,2,0.686,3,0.113,4,0.113,5,0.445,6,0.445,7,0.445,8,0.113,10,0.395,11,1.348,12,1.339,14,0.537,15,0.875,16,0.608,17,0.395,19,0.395,20,0.98,22,0.719,23,0.024,24,0.201,26,0.371,28,0.126,29,0.217,30,0.445,31,0.728,32,0.728,33,0.349,34,1.068,35,0.445,36,0.754,37,0.445,38,0.947,39,1.241,40,0.445,41,0.947,42,1.178,43,0.395,44,0.445,45,0.947,46,0.445,47,0.395,48,0.445,49,0.371,50,0.395,51,0.371,52,0.395,53,0.947,54,1.045,55,0.728,56,0.947,57,0.395,58,0.728,59,0.445,60,0.445,61,0.395,62,0.419,63,0.787,64,0.349,65,0.445,66,0.395,67,0.902,68,0.445,69,0.395,70,0.395,71,0.445,72,0.371,73,0.395,74,0.725,75,0.419,76,0.892,77,0.419,78,0.445,79,0.009,80,0.009,84,0.1,85,0.355,90,1.84,92,1.037,96,0.366,98,2.184,100,1.257,103,3.234,104,1.6,106,1.713,107,2.154,114,4.269,118,2.49,119,1.065,123,1.094,124,1.185,128,1.244,129,2.658,135,0.445,136,1.258,137,0.721,138,1.135,139,0.721,140,1.257,141,0.472,142,0.869,143,1.422,144,0.98,145,1.322,146,2.154,147,1.84,148,2.358,149,3.472,150,1.84,151,2.735,152,3.472,153,3.472,154,4.611,155,3.331,156,1.275,157,3.472,158,1.6,159,0.646,160,4.013,161,4.013,162,2.735,163,1.527,164,2.735,165,2.327,166,0.646,167,1.037,168,1.98,169,2.358,170,1.98,171,3.407,172,1.91,173,2.735,174,0.838,175,0.787,176,1.349,177,1.671,178,1.056,179,1.487,180,1.671,181,2.735,182,1.671,183,1.671,184,2.735,185,1.671,186,2.735,187,1.671,188,1.671,189,1.993,190,1.671,191,1.84,192,1.449,193,1.671,194,1.793,195,1.671,196,1.671,197,1.671,198,0.869,199,1.671,200,1.671,201,0.824,202,0.955,203,1.037,204,1.671,205,2.327,206,1.422,207,1.671,208,0.885,209,0.885,210,1.671,211,1.422,212,1.857,213,2.058,214,0.636,215,1.422,216,1.257,217,0.955,218,0.531,219,0.531,220,0.531,221,1.671,222,2.058,223,1.671,224,1.407,225,1.178,226,0.955,227,1.257,228,1.671,229,1.671,230,1.422,231,0.721,232,1.671,233,1.449,234,0.598,235,0.885,236,1.037,237,1.257,238,1.671,239,2.735,240,1.671,241,1.671,242,1.671,243,1.135,244,1.257,245,2.327,246,1.671,247,1.422,248,1.671,249,1.257,250,1.671,251,1.6,252,1.498,253,1.6,254,2.735,255,2.735,256,1.671,257,1.671,258,0.598,259,1.671,260,1.671,261,0.636,262,1.671,263,1.671,264,1.671,265,1.671,266,2.327,267,3.414,268,4.013,269,3.414,270,3.414,271,2.518,272,1.857,273,2.294,274,2.058,275,2.49,276,1.697,277,1.857]],["title/interfaces/ArticleForm.html",[81,0.737,278,2.395]],["body/interfaces/ArticleForm.html",[0,0.164,3,0.211,4,0.211,8,0.211,11,0.653,12,0.653,14,0.613,15,1.122,16,0.694,20,1.119,22,0.73,23,0.024,24,0.375,26,0.694,28,0.237,29,0.405,39,0.575,51,0.694,52,0.738,63,0.867,74,0.653,79,0.014,80,0.014,81,0.653,82,1.348,84,0.186,85,0.573,87,3.645,89,4.42,93,3.323,94,3.645,96,0.346,97,0.831,123,0.653,128,1.119,129,2.714,135,0.831,136,1.284,137,1.348,141,0.882,142,1.867,144,1.119,145,1.681,147,2.34,150,2.34,156,1.404,158,1.44,163,1.189,166,0.738,168,2.179,169,2.122,170,2.179,172,1.95,176,1.541,179,1.107,189,1.681,191,3.625,192,2.95,194,2.075,198,0.993,201,1.541,203,1.939,208,1.656,209,1.656,212,2.999,214,1.189,217,1.786,218,0.993,219,0.993,220,0.993,224,1.769,225,1.482,226,1.786,227,2.351,233,1.656,235,2.34,237,2.351,243,2.122,249,2.351,251,2.035,252,1.348,253,2.035,258,1.119,261,1.189,271,3.231,272,2.122,274,2.351,277,2.122,278,3.479,279,2.351,280,2.525,281,3.758,282,2.658,283,2.658,284,2.658,285,2.122,286,2.122,287,3.758,288,2.658,289,2.658,290,2.658,291,2.658,292,2.658,293,2.658,294,2.658,295,2.658,296,2.658,297,1.786,298,1.939,299,2.658,300,2.658,301,2.658,302,2.122,303,2.658,304,2.658,305,2.351,306,1.786]],["title/components/ArticleListComponent.html",[0,0.131,43,0.833]],["body/components/ArticleListComponent.html",[0,0.151,1,0.5,2,0.828,3,0.143,4,0.143,5,0.879,6,0.563,7,0.563,8,0.143,10,0.5,11,1.402,12,1.395,14,0.648,15,0.608,16,0.734,17,0.5,19,0.5,22,0.631,23,0.024,24,0.254,28,0.16,29,0.275,30,0.563,31,0.879,32,0.879,33,0.442,34,1.222,35,0.563,36,0.793,37,0.563,38,0.5,39,1.172,40,0.563,41,0.5,42,1.326,43,1.084,44,0.563,45,0.5,46,0.563,47,1.084,48,0.563,49,0.47,50,0.5,51,0.47,52,0.5,53,0.5,54,0.5,55,0.879,56,0.5,57,0.5,58,0.879,59,0.563,60,0.563,61,0.5,62,0.531,63,0.415,64,0.96,65,0.563,66,0.5,67,0.701,68,0.563,69,0.5,70,0.5,71,0.563,72,0.47,73,0.5,74,0.96,75,0.531,76,0.47,77,0.531,78,0.563,79,0.018,80,0.011,84,0.243,85,0.429,96,0.396,99,3.585,101,3.951,106,2.005,116,1.63,119,1.085,123,1.103,124,1.247,133,2.005,135,0.563,141,0.598,142,0.673,146,2.522,147,2.154,156,1.46,159,0.78,166,0.5,170,2.604,174,0.849,175,0.798,178,0.903,179,1.019,198,1.05,202,1.21,203,1.313,218,0.673,219,0.673,220,0.673,251,0.975,273,3.018,302,1.437,305,3.059,307,3.458,308,1.801,309,3.458,310,3.458,311,3.458,312,4.671,313,4.593,314,3.383,315,4.593,316,3.059,317,2.76,318,6.11,319,5.28,320,4.065,321,4.492,322,3.458,323,4.593,324,3.304,325,4.692,326,3.908,327,2.487,328,2.117,329,2.117,330,2.721,331,3.304,332,2.117,333,2.117,334,3.304,335,2.117,336,4.239,337,2.117,338,2.117,339,3.304,340,2.117,341,2.117,342,2.117,343,2.117,344,3.304,345,2.117,346,2.117,347,1.593,348,1.313,349,2.117,350,2.117,351,2.117,352,1.437,353,2.117,354,2.117,355,4.065,356,3.304,357,1.313,358,3.304,359,3.304,360,1.801,361,2.117,362,2.117,363,4.593,364,2.117,365,2.117,366,2.117,367,2.117,368,2.117,369,2.117,370,2.117,371,2.117,372,2.117,373,2.117,374,1.801,375,2.117,376,2.117,377,2.117,378,2.117,379,2.117,380,2.117,381,2.117,382,2.117]],["title/interfaces/ArticleListConfig.html",[81,0.737,330,1.74]],["body/interfaces/ArticleListConfig.html",[3,0.339,4,0.339,8,0.339,23,0.023,28,0.38,64,1.049,79,0.019,80,0.019,81,1.049,82,2.167,84,0.3,85,0.782,86,3.116,90,2.661,96,0.479,97,1.85,99,4.092,271,2.661,326,4.273,330,2.973,360,4.273,383,4.273,384,4.273,385,4.154,386,4.535]],["title/components/ArticleMetaComponent.html",[0,0.131,45,0.833]],["body/components/ArticleMetaComponent.html",[0,0.202,1,0.822,2,1.194,3,0.235,4,0.235,5,1.268,6,0.927,7,0.927,8,0.235,10,0.822,11,1.491,12,1.487,14,0.935,15,0.877,16,1.058,17,0.822,19,0.822,22,0.646,23,0.023,24,0.418,26,0.774,28,0.264,29,0.452,30,0.927,31,1.268,32,1.268,33,0.728,34,1.553,35,0.927,36,0.816,37,0.927,38,0.822,39,1.272,40,0.927,41,0.822,42,1.626,43,0.822,44,0.927,45,1.378,46,0.927,47,0.822,48,0.927,49,0.774,50,0.822,51,0.774,52,0.822,53,0.822,54,0.822,55,1.268,56,0.822,57,0.822,58,1.268,59,0.927,60,0.927,61,0.822,62,0.873,63,0.683,64,0.728,65,0.927,66,0.822,67,0.936,68,0.927,69,0.822,70,0.822,71,0.927,72,0.774,73,0.822,74,0.728,75,0.873,76,0.774,77,0.873,78,0.927,79,0.015,80,0.015,84,0.208,96,0.235,101,2.956,104,2.501,105,4.085,112,4.085,113,4.618,116,2.35,119,0.6,133,2.35,141,0.983,202,1.991,243,3.686,387,2.964,388,4.053,389,4.053,390,4.764,391,5.429,392,3.484,393,2.964]],["title/components/ArticlePreviewComponent.html",[0,0.131,47,0.833]],["body/components/ArticlePreviewComponent.html",[0,0.188,1,0.723,2,1.092,3,0.207,4,0.207,5,1.159,6,0.815,7,0.815,8,0.207,10,0.723,11,1.471,12,1.466,14,0.854,15,0.801,16,0.967,17,0.723,19,0.723,22,0.67,23,0.024,24,0.368,26,0.68,28,0.232,29,0.397,30,0.815,31,1.159,32,1.159,33,0.64,34,1.468,35,0.815,36,0.829,37,0.815,38,0.723,39,1.255,40,0.815,41,0.723,42,1.551,43,0.723,44,0.815,45,1.303,46,0.815,47,1.303,48,0.815,49,0.68,50,0.723,51,0.68,52,0.723,53,1.303,54,1.028,55,1.159,56,0.723,57,0.723,58,1.159,59,0.815,60,0.815,61,0.723,62,0.768,63,0.601,64,0.64,65,0.815,66,0.723,67,0.873,68,0.815,69,0.723,70,0.723,71,0.815,72,0.68,73,0.723,74,0.64,75,0.768,76,0.68,77,0.768,78,0.815,79,0.014,80,0.014,84,0.183,90,2.684,96,0.294,98,2.499,101,3.144,104,2.335,116,2.148,119,0.75,133,2.148,141,0.865,147,2.684,159,1.028,174,0.64,175,0.601,178,0.68,179,1.092,202,1.751,206,2.605,222,2.304,244,2.304,245,3.704,266,4.311,270,4.311,271,3.434,272,3.441,273,2.896,394,2.605,395,4.354,396,5.067,397,5.067,398,4.311,399,3.704,400,3.062,401,4.354,402,3.062]],["title/injectables/ArticlesService.html",[170,1.74,403,1.263]],["body/injectables/ArticlesService.html",[3,0.211,4,0.211,8,0.211,13,1.658,22,0.675,23,0.024,24,0.376,28,0.237,29,0.406,36,0.963,39,1.154,54,1.044,64,0.654,79,0.014,80,0.014,84,0.187,92,3.457,96,0.433,97,1.794,118,2.743,119,1.104,126,1.658,139,1.351,142,0.994,159,1.044,166,0.739,170,2.181,174,1.338,175,1.257,178,1.393,202,1.789,214,1.191,225,0.833,234,2.246,269,3.762,298,2.743,302,3.003,314,2.125,322,4.362,325,3.762,330,2.748,347,2.355,348,1.942,357,1.942,385,1.942,403,1.584,404,1.658,405,2.662,406,1.942,407,3.457,408,3.129,409,2.743,410,4.422,411,4.143,412,3.129,413,3.648,414,4.422,415,3.129,416,4.422,417,3.129,418,4.422,419,3.129,420,3.129,421,3.129,422,4.422,423,3.129,424,4.422,425,3.129,426,4.422,427,1.942,428,1.789,429,3.129,430,2.662,431,3.129,432,3.129,433,5.127,434,3.129,435,3.129,436,3.129,437,3.129,438,3.129,439,3.129,440,3.129,441,3.327,442,3.457,443,3.129,444,3.784,445,5.572,446,3.129,447,3.129,448,3.129,449,3.129,450,3.129]],["title/components/AuthComponent.html",[0,0.131,49,0.784]],["body/components/AuthComponent.html",[0,0.159,1,0.539,2,0.878,3,0.154,4,0.154,5,0.608,6,0.608,7,0.608,8,0.154,10,0.539,11,1.418,12,1.411,14,0.688,15,1.002,16,0.779,17,0.539,19,0.539,20,1.255,22,0.647,23,0.024,24,0.274,26,0.507,28,0.173,29,0.296,30,0.608,31,0.932,32,0.932,33,0.477,34,1.273,35,0.608,36,0.719,37,0.608,38,0.539,39,0.949,40,0.608,41,0.539,42,1.373,43,0.539,44,0.608,45,0.539,46,0.608,47,0.539,48,0.608,49,1.063,50,1.007,51,0.507,52,0.539,53,0.539,54,0.539,55,0.932,56,0.539,57,0.539,58,0.932,59,0.608,60,0.608,61,0.539,62,0.572,63,0.938,64,0.477,65,0.608,66,0.539,67,0.735,68,0.608,69,0.539,70,0.539,71,0.608,72,0.507,73,0.539,74,0.891,75,0.572,76,0.507,77,0.572,78,0.608,79,0.011,80,0.011,81,0.477,84,0.136,85,0.455,94,3.518,96,0.349,97,1.509,104,1.965,106,2.103,119,1.034,123,1.138,124,1.218,135,0.608,136,1.421,141,0.645,142,1.52,144,1.255,145,1.623,150,2.259,156,1.52,158,1.965,159,0.827,163,1.82,166,0.827,167,1.417,168,2.359,172,2.158,174,0.477,175,0.448,176,1.728,178,0.779,179,1.293,189,1.623,191,3.004,192,2.259,194,2.429,198,1.113,201,1.126,208,1.21,209,1.21,218,0.726,219,0.726,220,0.726,224,1.355,225,1.135,233,1.21,235,1.857,253,1.615,258,0.818,261,0.869,275,2.174,276,1.417,280,2.734,297,2.734,306,2.003,413,1.21,451,1.718,452,2.981,453,3.248,454,5.104,455,3.504,456,2.283,457,2.283,458,2.283,459,2.283,460,2.283,461,2.283,462,2.283,463,3.248,464,1.942,465,1.718,466,2.734,467,2.967,468,2.103,469,1.942,470,2.896,471,4.069,472,1.942,473,1.942,474,1.942,475,2.967,476,3.504,477,1.942,478,1.942,479,2.981,480,1.942,481,1.942,482,4.783,483,3.504]],["title/interfaces/AuthForm.html",[81,0.737,453,2.395]],["body/interfaces/AuthForm.html",[0,0.168,3,0.219,4,0.219,8,0.219,11,0.676,12,0.676,14,0.635,15,1.095,16,0.719,20,1.159,22,0.714,23,0.024,24,0.388,26,0.719,28,0.245,29,0.42,49,0.719,50,0.764,63,0.888,74,0.676,79,0.014,80,0.014,81,0.676,82,1.396,84,0.193,85,0.587,94,2.008,96,0.353,97,1.584,104,2.086,106,2.233,123,0.676,135,0.861,136,1.309,141,0.914,142,1.797,144,1.159,145,1.723,150,2.398,156,1.438,158,1.491,163,1.232,166,0.764,168,2.233,172,1.987,175,0.888,176,1.596,179,1.309,189,1.723,191,3.621,192,2.766,194,2.41,198,1.028,201,1.596,208,1.714,209,1.714,218,1.028,219,1.028,220,1.028,224,1.659,225,1.389,233,1.714,235,2.398,253,2.086,258,1.159,261,1.232,275,2.808,276,2.008,280,2.984,297,1.85,306,2.588,413,1.714,451,2.435,452,2.753,453,3.545,454,2.753,463,3.84,464,2.753,465,2.435,466,3.619,467,3.928,468,3.042,469,2.753,470,3.545,471,4.811,472,2.753,473,2.753,474,2.753,475,2.808,476,2.197,477,2.753,478,2.753,479,3.851,480,2.753,481,2.753]],["title/interfaces/Comment.html",[81,0.737,103,1.869]],["body/interfaces/Comment.html",[3,0.333,4,0.333,8,0.333,22,0.545,23,0.023,28,0.373,67,1.146,79,0.019,80,0.019,81,1.029,82,2.125,84,0.294,85,0.773,86,4.126,87,4.126,88,5.658,96,0.449,97,1.893,100,3.705,103,3.155,484,4.189,485,6.65]],["title/injectables/CommentsService.html",[171,2.395,403,1.263]],["body/injectables/CommentsService.html",[3,0.266,4,0.266,8,0.266,13,2.089,22,0.705,23,0.023,24,0.473,28,0.298,29,0.512,36,0.922,79,0.017,80,0.017,84,0.235,87,2.447,92,3.953,96,0.415,97,1.889,103,2.743,118,3.212,119,1.057,126,2.089,139,1.702,140,2.967,159,1.222,166,0.931,171,3.515,174,1.282,175,1.204,178,1.284,214,1.501,225,1.049,234,2.07,277,3.515,357,2.447,403,1.854,404,2.089,406,2.447,407,3.807,409,3.212,413,3.531,427,2.447,428,2.254,442,3.212,444,3.515,486,3.355,487,3.895,488,3.944,489,5.176,490,6.136,491,3.944,492,5.176,493,3.944,494,3.944,495,5.176,496,3.944,497,3.944,498,3.944,499,3.944,500,3.944,501,3.944]],["title/components/EditorComponent.html",[0,0.131,51,0.784]],["body/components/EditorComponent.html",[0,0.153,1,0.508,2,0.84,3,0.145,4,0.145,5,0.573,6,0.573,7,0.573,8,0.145,10,0.508,11,1.406,12,1.399,14,0.657,15,1.129,16,0.744,17,0.508,19,0.508,20,1.199,22,0.667,23,0.024,24,0.258,26,0.478,28,0.163,29,0.279,30,0.573,31,0.891,32,0.891,33,0.45,34,1.234,35,0.573,36,0.755,37,0.573,38,0.508,39,1.056,40,0.573,41,0.508,42,1.336,43,0.508,44,0.573,45,0.508,46,0.573,47,0.508,48,0.573,49,0.478,50,0.508,51,1.03,52,0.97,53,0.508,54,0.508,55,0.891,56,0.508,57,0.508,58,0.891,59,0.573,60,0.573,61,0.508,62,0.54,63,0.91,64,0.45,65,0.573,66,0.508,67,0.708,68,0.573,69,0.508,70,0.508,71,0.573,72,0.478,73,0.508,74,0.858,75,0.54,76,0.478,77,0.54,78,0.573,79,0.011,80,0.011,81,0.45,84,0.128,85,0.435,87,2.55,89,3.092,93,4.001,94,2.55,96,0.339,97,1.234,119,1.058,123,1.16,124,1.255,128,0.771,129,2.661,135,0.573,136,1.392,137,0.929,141,0.608,142,1.915,144,1.199,145,1.564,147,2.177,150,2.177,156,1.473,158,1.894,159,0.791,163,1.765,166,0.791,168,2.287,169,2.274,170,2.287,172,2.113,174,0.7,175,0.657,176,2.027,178,1.03,179,1.333,189,1.564,191,3.303,192,3.041,194,2.153,198,1.064,201,1.062,203,1.336,208,1.141,209,1.141,212,2.274,214,0.819,217,1.231,218,0.684,219,0.684,220,0.684,224,1.473,225,1.234,226,1.231,227,1.62,233,1.141,235,1.774,237,1.62,243,1.462,249,1.62,251,1.543,252,0.929,253,1.543,258,0.771,261,0.819,271,3.303,272,1.462,273,1.914,274,1.62,277,1.462,278,3.148,279,1.62,280,2.349,281,3.496,282,2.849,283,3.496,284,1.832,285,1.462,286,1.462,287,2.849,288,1.832,289,3.944,290,1.832,291,1.832,292,1.832,293,1.832,294,1.832,295,1.832,296,2.849,297,2.65,298,1.336,299,1.832,300,1.832,301,1.832,302,1.462,303,1.832,304,1.832,305,1.62,306,1.231,502,3.349,503,1.832,504,3.349,505,2.153,506,2.153,507,2.153,508,2.153,509,2.153,510,2.153,511,2.153,512,2.153,513,2.153,514,2.153,515,2.849]],["title/interfaces/Errors.html",[81,0.737,194,1.428]],["body/interfaces/Errors.html",[3,0.355,4,0.355,8,0.355,23,0.023,28,0.398,79,0.02,80,0.02,81,1.099,82,2.27,84,0.314,85,0.804,96,0.445,97,1.648,194,2.845,386,4.661,516,4.475,517,4.475]],["title/components/FavoriteButtonComponent.html",[0,0.131,53,0.833]],["body/components/FavoriteButtonComponent.html",[0,0.181,1,0.673,2,1.036,3,0.193,4,0.193,5,1.1,6,0.758,7,0.758,8,0.193,10,0.673,11,1.459,12,1.454,14,0.811,15,0.895,16,0.918,17,0.673,19,0.673,22,0.691,23,0.023,24,0.342,26,0.633,28,0.216,29,0.37,30,0.758,31,1.1,32,1.1,33,0.595,34,1.42,35,0.758,36,0.802,37,0.758,38,0.673,39,1.206,40,0.758,41,0.673,42,1.508,43,0.673,44,0.758,45,0.673,46,0.758,47,0.673,48,0.758,49,0.633,50,0.673,51,0.633,52,0.673,53,1.26,54,1.149,55,1.1,56,0.673,57,0.673,58,1.1,59,0.758,60,0.758,61,0.673,62,0.714,63,0.559,64,0.595,65,0.758,66,0.673,67,0.839,68,0.758,69,0.673,70,0.673,71,0.758,72,0.633,73,0.673,74,0.595,75,0.714,76,0.633,77,0.714,78,0.758,79,0.013,80,0.013,84,0.17,85,0.536,96,0.329,116,2.039,117,3.111,119,1.019,121,3.661,123,0.864,124,0.976,133,2.039,134,3.111,135,0.758,136,1.529,137,1.229,141,0.804,142,0.905,146,3.019,156,1.696,158,2.242,159,0.976,166,0.976,169,2.807,170,2.633,172,2.321,174,0.595,175,0.559,178,0.633,179,1.22,189,2.032,198,1.314,202,1.628,203,1.767,214,1.084,218,0.905,219,0.905,220,0.905,224,1.546,225,1.295,231,1.229,234,1.742,236,1.767,244,2.144,252,1.229,253,2.242,258,1.02,261,1.084,316,3.111,399,4.541,503,2.424,518,5.189,519,2.144,520,3.111,521,4.139,522,3.517,523,2.424,524,2.849,525,2.849,526,2.849,527,2.144,528,1.934,529,2.849,530,2.424,531,2.849,532,2.849,533,2.849,534,2.849]],["title/components/FollowButtonComponent.html",[0,0.131,56,0.833]],["body/components/FollowButtonComponent.html",[0,0.176,1,0.64,2,0.999,3,0.183,4,0.183,5,1.061,6,0.721,7,0.721,8,0.183,10,0.64,11,1.45,12,1.445,14,0.782,15,0.87,16,0.886,17,0.64,19,0.64,22,0.696,23,0.024,24,0.325,26,0.602,28,0.205,29,0.352,30,0.721,31,1.061,32,1.061,33,0.566,34,1.387,35,0.721,36,0.783,37,0.721,38,0.64,39,1.022,40,0.721,41,0.64,42,1.478,43,0.64,44,0.721,45,0.64,46,0.721,47,0.64,48,0.721,49,0.602,50,0.64,51,0.602,52,0.64,53,0.64,54,0.64,55,1.061,56,1.231,57,1.371,58,1.061,59,0.721,60,0.721,61,0.64,62,0.679,63,0.532,64,0.566,65,0.721,66,0.64,67,1.102,68,0.721,69,0.64,70,0.64,71,0.721,72,0.602,73,0.64,74,0.566,75,0.679,76,0.602,77,0.679,78,0.721,79,0.013,80,0.013,84,0.162,85,0.517,96,0.319,98,1.337,109,3.391,116,1.966,117,2.999,119,1.001,121,3.557,123,0.833,124,0.941,133,1.966,134,2.999,135,0.721,136,1.505,137,1.169,139,1.169,141,0.765,142,0.861,146,2.933,156,1.656,158,2.178,159,0.941,165,4.435,166,0.941,172,2.286,174,0.566,175,0.532,178,0.602,179,1.185,189,1.984,198,1.267,214,1.031,218,0.861,219,0.861,220,0.861,224,1.502,225,1.258,231,1.169,234,1.693,236,1.681,247,4.022,252,1.169,253,2.178,258,0.97,261,1.031,316,2.999,519,2.039,520,2.999,521,4.022,522,2.305,523,2.305,527,2.039,528,1.84,535,5.109,536,4.022,537,4.022,538,2.71,539,3.078,540,3.986,541,2.71,542,2.71,543,1.84,544,1.681,545,2.71,546,1.84,547,2.305,548,2.71,549,2.71,550,2.71,551,2.71]],["title/components/FooterComponent.html",[0,0.131,19,0.833]],["body/components/FooterComponent.html",[0,0.201,1,0.813,2,1.184,3,0.233,4,0.233,5,0.916,6,0.916,7,0.916,8,0.233,10,0.813,11,1.489,12,1.485,14,0.927,15,0.869,16,1.05,17,0.813,19,1.371,20,1.692,22,0.597,23,0.023,24,0.413,26,0.765,28,0.261,29,0.447,30,0.916,31,1.257,32,1.257,33,0.719,34,1.545,35,0.916,36,0.811,37,0.916,38,0.813,39,1.12,40,0.916,41,0.813,42,1.619,43,0.813,44,0.916,45,0.813,46,0.916,47,0.813,48,0.916,49,0.765,50,0.813,51,0.765,52,0.813,53,0.813,54,0.813,55,1.257,56,0.813,57,0.813,58,1.545,59,0.916,60,0.916,61,0.813,62,0.863,63,0.675,64,0.719,65,0.916,66,0.813,67,0.93,68,0.916,69,0.813,70,0.813,71,0.916,72,0.765,73,0.813,74,0.719,75,0.863,76,0.765,77,0.863,78,0.916,79,0.015,80,0.015,84,0.205,85,0.613,96,0.233,99,3.208,104,2.486,105,4.059,112,3.555,119,0.593,123,0.719,124,0.813,141,0.972,388,4.019,389,4.019,393,2.928,552,2.928,553,4.724,554,4.724,555,6.085,556,4.724,557,3.442,558,3.208,559,2.928,560,4.724,561,4.724,562,4.724,563,4.94,564,4.019,565,4.724,566,4.724,567,4.724,568,4.724,569,3.555]],["title/components/HeaderComponent.html",[0,0.131,17,0.833]],["body/components/HeaderComponent.html",[0,0.198,1,0.795,2,1.167,3,0.227,4,0.227,5,0.896,6,0.896,7,0.896,8,0.227,10,0.795,11,1.486,12,1.482,14,0.913,15,0.856,16,1.034,17,1.358,19,0.795,20,1.666,22,0.668,23,0.023,24,0.404,26,0.748,28,0.255,29,0.437,30,0.896,31,1.238,32,1.238,33,0.703,34,1.531,35,0.896,36,0.801,37,0.896,38,0.795,39,1.178,40,0.896,41,0.795,42,1.606,43,0.795,44,0.896,45,0.795,46,0.896,47,0.795,48,0.896,49,0.748,50,0.795,51,0.748,52,0.795,53,0.795,54,0.795,55,1.238,56,0.795,57,0.795,58,1.531,59,0.896,60,0.896,61,0.795,62,1.514,63,0.66,64,0.703,65,0.896,66,0.795,67,0.919,68,0.896,69,0.795,70,0.795,71,0.896,72,0.748,73,1.099,74,0.703,75,0.844,76,1.278,77,0.844,78,0.896,79,0.015,80,0.015,84,0.201,85,0.604,104,2.457,106,2.63,107,3.308,115,3.501,119,0.58,123,0.703,124,0.795,135,0.896,136,0.844,141,0.95,142,1.07,155,4.816,216,2.533,275,3.569,276,2.887,558,3.16,570,2.864,571,4.653,572,4.536,573,4.653,574,4.653,575,3.366,576,3.366,577,3.366,578,3.366,579,3.366,580,4.653]],["title/components/HomeComponent.html",[0,0.131,61,0.833]],["body/components/HomeComponent.html",[0,0.159,1,0.542,2,0.882,3,0.155,4,0.155,5,0.611,6,0.611,7,0.611,8,0.155,10,0.542,11,1.419,12,1.412,14,0.691,15,0.883,16,0.782,17,0.542,19,0.542,20,1.26,22,0.69,23,0.024,24,0.276,26,0.51,28,0.174,29,0.298,30,0.611,31,0.936,32,0.936,33,0.48,34,1.276,35,0.611,36,0.777,37,0.611,38,0.542,39,0.952,40,0.611,41,0.542,42,1.376,43,1.133,44,0.611,45,0.542,46,0.611,47,0.542,48,0.611,49,0.51,50,0.542,51,0.51,52,0.542,53,0.542,54,0.542,55,0.936,56,0.542,57,0.542,58,0.936,59,0.611,60,0.611,61,1.133,62,1.073,63,0.451,64,0.894,65,0.611,66,0.542,67,0.738,68,0.611,69,0.542,70,0.542,71,0.611,72,0.51,73,0.542,74,0.894,75,0.576,76,1.066,77,0.576,78,0.611,79,0.011,80,0.011,84,0.137,85,0.457,96,0.406,97,1.139,98,1.133,107,2.655,119,1.01,123,1.187,124,1.289,128,0.822,135,0.611,136,1.424,137,0.991,139,0.991,141,0.648,144,1.26,145,1.629,146,2.655,147,2.267,156,1.524,159,0.831,163,1.826,166,0.831,172,2.077,174,0.735,175,0.691,178,0.782,179,1.297,189,1.826,198,1.118,205,1.954,215,1.954,216,1.728,218,0.73,219,0.73,220,0.73,224,1.118,225,0.936,231,0.991,234,0.822,236,1.425,252,0.991,271,3.01,273,2.012,307,1.954,309,1.954,310,2.994,311,2.994,312,2.648,317,2.39,330,2.111,347,1.728,348,1.425,352,1.559,385,3.525,441,4.107,475,1.425,487,2.648,528,1.559,530,1.954,546,3.706,547,1.954,558,2.39,581,1.954,582,4.279,583,3.519,584,4.279,585,3.519,586,4.279,587,5.307,588,4.279,589,3.519,590,1.954,591,3.519,592,2.296,593,3.519,594,4.797,595,2.296,596,2.296,597,2.296,598,3.519,599,2.994,600,3.519,601,2.296,602,2.296,603,1.559,604,2.296,605,1.728,606,1.954,607,1.954,608,2.296,609,2.296,610,2.296,611,2.296,612,3.519,613,2.296,614,2.296,615,1.954,616,2.296,617,3.519,618,3.519,619,2.994,620,3.519,621,2.994,622,3.519,623,3.519,624,2.994,625,2.296,626,2.296]],["title/directives/IfAuthenticatedDirective.html",[33,0.737,76,0.784]],["body/directives/IfAuthenticatedDirective.html",[3,0.239,4,0.239,8,0.239,10,0.836,11,1.006,14,0.945,15,1.007,22,0.605,23,0.023,24,0.425,28,0.268,29,0.459,33,1.006,36,0.724,75,0.887,76,1.07,77,1.589,79,0.015,80,0.015,84,0.211,85,0.625,96,0.397,98,3.199,116,2.375,119,1.118,123,1.143,124,1.292,133,2.375,135,0.942,136,1.626,144,1.724,145,2.083,156,1.867,159,1.137,163,2.236,166,1.137,174,1.006,175,0.945,178,1.07,179,1.207,189,2.339,198,1.53,218,1.125,219,1.125,220,1.125,224,1.739,226,2.753,251,1.631,327,3.623,352,2.403,465,2.663,528,2.403,546,3.27,627,5.615,628,3.011,629,6.145,630,5.473,631,3.539,632,6.339,633,5.473,634,5.874,635,4.815,636,4.815,637,3.539,638,3.539,639,3.539,640,3.539,641,3.539,642,4.815,643,5.473,644,4.815,645,5.874,646,3.539,647,3.539,648,3.539]],["title/injectables/JwtService.html",[403,1.263,649,2.016]],["body/injectables/JwtService.html",[3,0.318,4,0.318,8,0.318,13,2.492,22,0.52,23,0.023,24,0.565,28,0.356,29,0.61,36,0.707,79,0.018,80,0.018,84,0.281,96,0.318,97,1.789,119,1.081,159,1.367,174,0.983,175,0.923,178,1.394,179,1.641,234,1.685,403,2.074,404,2.492,428,2.689,649,3.31,650,4.002,651,6.547,652,6.547,653,5.791,654,4.704,655,4.704,656,5.791,657,4.704,658,3.932,659,5.791,660,4.704]],["title/components/ListErrorsComponent.html",[0,0.131,63,0.692]],["body/components/ListErrorsComponent.html",[0,0.193,1,0.755,2,1.126,3,0.216,4,0.216,5,0.851,6,0.851,7,0.851,8,0.216,10,0.755,11,1.478,12,1.474,14,0.881,15,0.826,16,0.998,17,0.755,19,0.755,20,1.608,22,0.574,23,0.023,24,0.384,28,0.242,29,0.415,30,0.851,31,1.195,32,1.195,33,0.668,34,1.497,35,0.851,36,0.846,37,0.851,38,0.755,39,1.091,40,0.851,41,0.755,42,1.577,43,0.755,44,0.851,45,0.755,46,0.851,47,0.755,48,0.851,49,0.711,50,0.755,51,0.711,52,0.755,53,0.755,54,0.755,55,1.195,56,0.755,57,0.755,58,1.195,59,0.851,60,0.851,61,0.755,62,0.802,63,1.104,64,1.238,65,0.851,66,0.755,67,0.894,68,0.851,69,0.755,70,0.755,71,0.851,72,0.711,73,0.755,74,0.668,75,0.802,76,0.711,77,0.802,78,0.851,79,0.014,80,0.014,84,0.191,85,0.583,96,0.351,97,1.195,106,2.56,116,2.215,119,0.894,123,0.668,124,0.755,126,1.695,129,2.981,133,2.215,141,0.903,147,2.749,174,0.668,175,0.628,178,0.711,179,0.802,194,2.716,217,1.829,261,2.339,273,2.567,327,3.379,352,2.173,517,3.821,661,4.787,662,2.722,663,4.491,664,6.546,665,4.491,666,3.199,667,3.199,668,3.199,669,3.199,670,3.199,671,3.199]],["title/pipes/MarkdownPipe.html",[148,2.395,231,1.522]],["body/pipes/MarkdownPipe.html",[3,0.309,4,0.309,8,0.309,10,1.08,14,1.117,15,1.047,22,0.63,23,0.023,24,0.549,28,0.346,29,0.594,36,0.931,79,0.018,80,0.018,85,0.594,96,0.309,97,1.649,115,4.283,119,0.981,123,0.956,124,1.08,135,1.217,144,1.638,148,3.865,159,1.08,174,0.956,175,0.898,178,1.016,226,2.615,231,2.456,234,1.638,672,4.575,673,3.892,674,4.842,675,4.575,676,5.692,677,4.575,678,4.575,679,5.692,680,6.196,681,5.692,682,4.575,683,5.692,684,4.575,685,3.892,686,3.892,687,3.892,688,4.575,689,4.575,690,4.575,691,4.575]],["title/interfaces/Profile.html",[67,0.608,81,0.737]],["body/interfaces/Profile.html",[3,0.337,4,0.337,8,0.337,23,0.023,28,0.377,67,1.034,79,0.019,80,0.019,81,1.041,82,2.151,84,0.298,85,0.779,96,0.451,97,1.896,98,3.174,468,3.294,692,4.241,693,4.535,694,5.682,695,4.535]],["title/components/ProfileArticlesComponent.html",[0,0.131,66,0.833]],["body/components/ProfileArticlesComponent.html",[0,0.189,1,0.725,2,1.094,3,0.208,4,0.208,5,1.161,6,0.817,7,0.817,8,0.208,10,0.725,11,1.472,12,1.467,14,0.856,15,0.803,16,0.97,17,0.725,19,0.725,22,0.69,23,0.023,24,0.369,26,0.683,28,0.233,29,0.399,30,0.817,31,1.161,32,1.161,33,0.642,34,1.47,35,0.817,36,0.83,37,0.817,38,0.725,39,1.074,40,0.817,41,0.725,42,1.553,43,1.305,44,0.817,45,0.725,46,0.817,47,0.725,48,0.817,49,0.683,50,0.725,51,0.683,52,0.725,53,0.725,54,0.725,55,1.161,56,0.725,57,0.725,58,1.161,59,0.817,60,0.817,61,0.725,62,0.77,63,0.603,64,0.912,65,0.817,66,1.305,67,1.176,68,0.817,69,0.725,70,0.725,71,0.817,72,0.683,73,0.725,74,0.642,75,0.77,76,0.683,77,0.77,78,0.817,79,0.014,80,0.014,84,0.183,85,0.566,86,1.906,96,0.373,119,1.006,123,0.912,124,0.725,135,0.817,144,1.563,145,1.932,156,1.756,159,1.03,163,2.103,166,1.03,167,1.906,168,2.726,174,0.642,175,0.603,176,2.153,178,0.683,179,1.094,198,1.387,218,0.976,219,0.976,220,0.976,224,1.387,225,0.817,251,1.415,252,1.326,258,1.1,314,2.963,330,2.503,348,1.906,385,1.906,539,3.305,543,2.086,544,1.906,605,2.311,696,4.563,697,2.613,698,5.075,699,4.364,700,3.072,701,3.072,702,3.072,703,2.613,704,2.613,705,2.311,706,2.613,707,2.311,708,3.072,709,2.613]],["title/components/ProfileComponent.html",[0,0.131,69,0.833]],["body/components/ProfileComponent.html",[0,0.171,1,0.608,2,0.962,3,0.174,4,0.174,5,0.685,6,0.685,7,0.685,8,0.174,10,0.608,11,1.441,12,1.435,14,0.753,15,0.706,16,0.852,17,0.608,18,3.902,19,0.608,20,1.374,22,0.699,23,0.023,24,0.309,26,0.572,28,0.195,29,0.334,30,0.685,31,1.021,32,1.021,33,0.538,34,1.353,35,0.685,36,0.817,37,0.685,38,0.608,39,1.001,40,0.685,41,0.608,42,1.447,43,0.608,44,0.685,45,0.608,46,0.685,47,0.608,48,0.685,49,0.572,50,0.608,51,0.572,52,0.608,53,0.608,54,0.608,55,1.021,56,1.346,57,0.608,58,1.021,59,0.685,60,0.685,61,0.608,62,0.645,63,0.505,64,0.538,65,0.685,66,0.608,67,1.189,68,0.685,69,1.2,70,0.608,71,0.685,72,0.572,73,1.083,74,0.958,75,0.645,76,0.572,77,0.645,78,0.685,79,0.012,80,0.012,84,0.154,85,0.498,90,2.033,96,0.344,98,1.893,104,2.113,106,2.262,107,2.846,119,0.983,123,0.801,124,0.906,128,0.922,135,0.685,136,1.481,137,1.111,139,1.111,141,0.727,144,1.374,145,1.746,156,1.615,159,0.906,163,1.935,166,0.906,167,1.597,168,2.508,172,2.248,174,0.801,175,0.753,176,1.893,178,0.852,179,1.15,189,1.46,198,1.219,211,2.19,212,1.748,213,2.887,214,0.98,218,0.818,219,0.818,220,0.818,222,1.937,224,1.615,225,1.353,230,2.19,231,1.111,233,1.364,234,1.374,236,1.597,261,0.98,267,3.264,527,1.937,537,3.902,539,3.129,543,1.748,544,1.597,572,3.902,705,1.937,706,2.19,707,2.887,710,2.19,711,3.837,712,5.906,713,3.837,714,3.837,715,2.574,716,3.837,717,2.574,718,2.574,719,2.574,720,2.574,721,2.574,722,2.574,723,2.574,724,2.574,725,2.574,726,2.574,727,3.837,728,5.083]],["title/components/ProfileFavoritesComponent.html",[0,0.131,70,0.833]],["body/components/ProfileFavoritesComponent.html",[0,0.189,1,0.726,2,1.095,3,0.208,4,0.208,5,1.162,6,0.819,7,0.819,8,0.208,10,0.726,11,1.472,12,1.467,14,0.857,15,0.804,16,0.971,17,0.726,19,0.726,22,0.69,23,0.023,24,0.369,26,0.684,28,0.233,29,0.399,30,0.819,31,1.162,32,1.162,33,0.643,34,1.471,35,0.819,36,0.831,37,0.819,38,0.726,39,1.075,40,0.819,41,0.726,42,1.554,43,1.306,44,0.819,45,0.726,46,0.819,47,0.726,48,0.819,49,0.684,50,0.726,51,0.684,52,0.726,53,0.726,54,0.726,55,1.162,56,0.726,57,0.726,58,1.162,59,0.819,60,0.819,61,0.726,62,0.771,63,0.604,64,0.913,65,0.819,66,0.726,67,1.176,68,0.819,69,0.726,70,1.306,71,0.819,72,0.684,73,0.726,74,0.643,75,0.771,76,0.684,77,0.771,78,0.819,79,0.014,80,0.014,84,0.184,85,0.567,90,1.63,96,0.374,119,1.006,123,0.913,124,0.726,135,0.819,144,1.564,145,1.933,156,1.757,159,1.031,163,2.105,166,1.031,167,1.909,168,2.728,174,0.643,175,0.604,176,2.155,178,0.684,179,0.771,198,1.388,218,0.978,219,0.978,220,0.978,224,1.388,225,0.819,251,1.418,252,1.328,258,1.102,330,2.506,348,1.909,385,1.909,539,3.306,543,2.089,544,1.909,605,2.315,696,4.565,703,2.617,704,2.617,705,2.315,707,2.315,709,2.617,729,2.617,730,4.368,731,5.079,732,4.368,733,3.077,734,3.077,735,3.077,736,3.077,737,3.077]],["title/injectables/ProfileService.html",[403,1.263,539,1.869]],["body/injectables/ProfileService.html",[3,0.262,4,0.262,8,0.262,13,2.057,22,0.701,23,0.024,24,0.466,28,0.294,29,0.504,36,0.916,57,1.44,67,1.144,79,0.016,80,0.016,84,0.232,96,0.412,97,1.814,119,1.051,126,2.057,139,1.675,159,1.21,166,0.917,174,1.274,175,1.196,178,1.274,214,1.478,225,1.033,234,2.054,357,2.409,403,1.835,404,2.057,406,2.409,407,3.784,409,3.179,413,3.518,427,2.409,428,2.219,442,3.179,444,3.479,468,3.127,536,4.359,539,2.715,544,2.409,738,3.303,739,3.882,740,5.123,741,3.882,742,5.123,743,3.882,744,5.123,745,3.882,746,3.303,747,3.882,748,3.882,749,3.882,750,5.735,751,3.303,752,3.882,753,3.882]],["title/components/SettingsComponent.html",[0,0.131,72,0.784]],["body/components/SettingsComponent.html",[0,0.165,1,0.573,2,0.92,3,0.164,4,0.164,5,0.646,6,0.646,7,0.646,8,0.164,10,0.573,11,1.43,12,1.424,14,0.72,15,1.193,16,0.816,17,0.573,19,0.573,20,1.315,22,0.66,23,0.023,24,0.291,26,0.539,28,0.184,29,0.315,30,0.646,31,0.977,32,0.977,33,0.507,34,1.313,35,0.646,36,0.742,37,0.646,38,0.573,39,0.976,40,0.646,41,0.573,42,1.411,43,0.573,44,0.646,45,0.573,46,0.646,47,0.573,48,0.646,49,0.539,50,0.573,51,0.539,52,0.573,53,0.573,54,0.573,55,0.977,56,0.573,57,0.573,58,0.977,59,0.646,60,0.646,61,0.573,62,0.609,63,0.968,64,0.507,65,0.646,66,0.573,67,0.763,68,0.646,69,0.573,70,0.573,71,0.646,72,1.097,73,1.367,74,0.925,75,0.609,76,0.539,77,0.609,78,0.646,79,0.012,80,0.012,81,0.507,84,0.145,85,0.476,96,0.299,119,1.052,123,1.108,124,1.165,128,2.074,129,2.615,135,0.646,136,1.452,137,1.047,138,1.648,142,2.036,144,1.315,145,1.685,150,2.346,156,1.569,158,2.04,159,0.867,163,1.879,166,0.867,172,2.123,174,0.507,175,0.476,178,0.984,179,1.398,189,1.685,191,3.527,192,3.297,194,2.258,198,1.167,201,1.197,208,1.286,209,1.286,217,1.387,218,0.771,219,0.771,220,0.771,224,1.167,225,0.977,235,1.945,251,1.118,252,1.047,253,1.692,258,0.869,261,0.924,280,2.531,285,1.648,286,1.648,297,2.822,298,2.278,306,1.387,317,2.493,411,1.648,463,3.007,466,2.531,467,2.747,468,2.184,470,2.493,590,2.065,693,3.007,695,3.007,754,1.826,755,3.123,756,3.352,757,3.787,758,3.671,759,2.427,760,2.427,761,2.427,762,2.427,763,2.427,764,2.427,765,2.427,766,2.065,767,2.065,768,2.065,769,2.065,770,2.065,771,3.671]],["title/interfaces/SettingsForm.html",[81,0.737,756,2.395]],["body/interfaces/SettingsForm.html",[0,0.174,3,0.23,4,0.23,8,0.23,11,0.71,12,0.71,14,0.667,15,1.181,16,0.756,20,1.218,22,0.723,23,0.024,24,0.408,26,0.756,28,0.257,29,0.441,63,0.919,72,0.756,73,0.803,74,0.71,79,0.015,80,0.015,81,0.71,82,1.468,84,0.203,85,0.608,96,0.409,123,0.71,128,2.069,129,2.483,135,0.905,136,1.344,137,1.468,138,2.309,142,1.99,144,1.218,145,1.783,150,2.483,156,1.489,158,1.567,163,1.294,166,0.803,172,2.04,179,1.344,189,1.783,191,3.772,192,3.21,194,2.171,198,1.081,201,1.677,208,1.802,209,1.802,217,1.944,218,1.081,219,1.081,220,1.081,224,1.489,225,1.247,235,2.483,251,1.567,252,1.468,253,2.159,258,1.218,261,1.294,280,2.678,285,2.309,286,2.309,297,1.944,306,1.944,411,2.309,463,3.182,466,3.464,467,3.759,468,2.989,470,2.309,693,4.115,695,4.115,754,2.559,755,2.893,756,3.64,757,2.309,766,2.893,767,2.893,768,2.893,769,2.893,770,2.893]],["title/injectables/TagsService.html",[403,1.263,603,2.395]],["body/injectables/TagsService.html",[3,0.319,4,0.319,8,0.319,13,2.498,22,0.725,23,0.023,24,0.566,28,0.357,29,0.612,36,0.709,79,0.019,80,0.019,84,0.281,96,0.319,119,0.999,126,2.498,139,2.035,159,1.369,166,1.113,174,0.985,175,0.925,178,1.048,214,1.795,225,1.255,234,1.689,357,2.925,403,2.077,404,2.498,406,2.925,407,4.065,409,3.598,413,3.328,427,2.925,428,2.695,442,2.925,444,3.202,487,4.931,603,3.938,772,4.011,773,4.715,774,4.715,775,4.715,776,4.715]],["title/interfaces/User.html",[81,0.737,128,1.263]],["body/interfaces/User.html",[3,0.329,4,0.329,8,0.329,23,0.023,28,0.369,79,0.019,80,0.019,81,1.019,82,2.104,84,0.291,85,0.768,96,0.459,97,1.934,128,2.12,466,3.789,468,3.27,658,4.501,693,4.501,695,4.501,777,4.148]],["title/injectables/UserService.html",[136,0.884,403,1.263]],["body/injectables/UserService.html",[3,0.195,4,0.195,8,0.195,13,1.529,22,0.677,23,0.024,24,0.346,26,0.641,28,0.218,29,0.375,36,0.856,79,0.013,80,0.013,84,0.172,85,0.542,96,0.432,97,1.516,119,1.132,123,1.024,124,1.157,126,1.529,128,2.436,136,1.046,139,1.245,142,1.326,155,3.688,159,0.985,166,0.985,172,2.33,174,1.19,175,1.118,178,1.36,179,1.535,214,1.098,224,1.887,225,1.304,231,1.245,233,1.529,234,1.923,258,1.033,261,1.098,298,2.589,386,4.041,403,1.494,404,1.529,406,1.79,407,3.332,409,2.589,411,3.328,413,3.385,427,1.79,428,1.65,442,2.589,466,2.385,467,2.589,468,1.423,475,2.589,476,2.833,546,3.328,599,3.55,606,4.17,649,3.5,746,2.455,751,2.455,757,3.647,778,2.455,779,5.938,780,4.901,781,5.37,782,5.37,783,4.173,784,4.173,785,2.886,786,4.173,787,2.886,788,5.37,789,2.886,790,2.886,791,4.173,792,2.886,793,4.173,794,2.886,795,4.173,796,2.886,797,4.173,798,4.173,799,4.173,800,2.886,801,4.173,802,2.886,803,4.173,804,2.886,805,2.886,806,2.886,807,2.886,808,2.886,809,4.901,810,2.886,811,4.173,812,2.886,813,2.886,814,4.173,815,2.886,816,2.886,817,2.886]],["title/coverage.html",[818,4.087]],["body/coverage.html",[0,0.261,1,0.771,8,0.221,9,2.78,17,0.771,19,0.771,23,0.023,33,0.683,38,0.771,39,0.601,41,0.771,43,0.771,45,0.771,47,0.771,49,0.726,51,0.726,53,0.771,56,0.771,61,0.771,63,0.641,64,0.683,66,0.771,67,0.563,69,0.771,70,0.771,72,0.726,76,0.726,79,0.015,80,0.015,81,1.374,83,2.78,96,0.221,101,3.523,102,2.78,103,1.731,128,1.17,136,0.819,142,1.038,143,2.78,148,2.219,170,1.612,171,2.219,194,1.323,231,1.41,278,2.219,279,3.429,308,2.78,330,1.612,383,2.78,384,2.78,387,2.78,394,2.78,403,2.215,405,2.78,451,3.429,453,2.219,484,2.78,486,2.78,516,2.78,518,2.78,519,3.429,535,2.78,539,1.731,552,2.78,570,2.78,581,2.78,603,2.219,624,6.205,627,2.78,628,2.78,649,1.868,650,2.78,661,2.78,662,2.78,673,2.78,692,2.78,696,3.429,697,2.78,710,2.78,729,2.78,738,2.78,754,3.429,756,2.219,772,2.78,777,2.78,778,2.78,818,2.78,819,2.78,820,3.267,821,3.267,822,6.348,823,3.429,824,3.267,825,2.459,826,5.679,827,2.78,828,4.557,829,5.679,830,5.679,831,4.557,832,5.679,833,2.78,834,2.78,835,2.78,836,2.78,837,2.78,838,2.78,839,5.679,840,3.267,841,5.679,842,3.267,843,5.679,844,3.267,845,4.557,846,3.267,847,3.267]],["title/dependencies.html",[848,2.51,849,3.19]],["body/dependencies.html",[23,0.023,24,0.588,26,1.089,79,0.019,80,0.019,141,1.383,201,2.417,214,1.865,607,5.051,685,5.051,686,5.051,687,4.168,849,3.687,850,4.899,851,7.147,852,4.899,853,4.899,854,4.899,855,4.899,856,4.899,857,4.899,858,4.899,859,4.899,860,4.899,861,4.899,862,4.899,863,4.899,864,4.899,865,4.899,866,4.899,867,4.899]],["title/miscellaneous/enumerations.html",[868,1.687,869,3.607]],["body/miscellaneous/enumerations.html",[23,0.022,79,0.02,80,0.02,84,0.321,124,1.568,312,4.719,321,5.336,868,3.071,869,4.571,870,5.373,871,6.272,872,5.373,873,6.272,874,6.272]],["title/miscellaneous/functions.html",[868,1.687,875,3.607]],["body/miscellaneous/functions.html",[23,0.021,36,0.81,79,0.02,80,0.02,84,0.322,96,0.364,136,1.717,174,1.125,175,1.057,649,3.801,823,4.054,825,4.727,868,3.08,875,4.584,876,4.584,877,5.388]],["title/index.html",[84,0.176,878,2.22,879,2.22]],["body/index.html",[3,0.21,4,0.21,12,0.649,23,0.021,39,0.809,50,0.733,52,1.038,54,0.733,57,1.038,62,0.778,64,1.16,67,0.535,73,1.311,74,1.358,79,0.014,80,0.014,86,2.728,90,1.645,92,2.728,103,1.645,118,2.728,128,1.112,154,3.741,271,1.645,275,2.728,276,2.728,314,4.476,317,3.467,374,2.642,398,2.642,430,2.642,441,2.337,475,1.927,476,2.109,520,3.842,558,2.109,563,3.741,564,3.741,587,2.642,619,4.986,621,2.642,658,2.109,674,2.642,757,2.109,849,3.309,878,2.337,879,2.337,880,6.085,881,3.105,882,3.105,883,3.105,884,3.105,885,5.105,886,3.105,887,3.105,888,4.397,889,3.105,890,3.105,891,4.397,892,4.397,893,3.105,894,3.105,895,3.105,896,4.397,897,3.105,898,3.105,899,3.105,900,3.105,901,5.105,902,3.741,903,3.105,904,5.105,905,3.105,906,4.397,907,4.397,908,3.105,909,3.105,910,3.105,911,3.105,912,3.105,913,3.105,914,3.105,915,3.105,916,3.105,917,2.642,918,3.105,919,2.642,920,3.105,921,4.397,922,4.397,923,3.105,924,3.105,925,3.105,926,3.105,927,3.105,928,5.105,929,3.105,930,3.105,931,3.105,932,4.397,933,3.105,934,3.105,935,3.105,936,3.105,937,3.105,938,3.105,939,3.105,940,3.105,941,3.105,942,3.105,943,4.344,944,4.397,945,3.105,946,3.105,947,3.105,948,4.397,949,5.105,950,3.105,951,3.105,952,3.105,953,4.397,954,3.105,955,3.105,956,3.105,957,3.105,958,3.105,959,3.105,960,3.105,961,2.642,962,3.105,963,5.552,964,3.105,965,3.105,966,3.105,967,3.105,968,3.105,969,3.105,970,3.105,971,2.337,972,3.105,973,3.105,974,3.105,975,3.105,976,3.105,977,3.105,978,3.105,979,3.105,980,4.397,981,3.105,982,3.105,983,3.105,984,3.105,985,3.105,986,3.105,987,4.397,988,3.105,989,5.105,990,3.105,991,4.397,992,3.105,993,4.397,994,3.105,995,3.105,996,4.397,997,3.105,998,3.105,999,3.105,1000,3.105,1001,3.105,1002,3.105,1003,3.105,1004,5.177,1005,3.105,1006,3.105,1007,3.105,1008,3.105,1009,3.105,1010,3.105,1011,3.105,1012,3.105,1013,3.105,1014,3.105,1015,4.397,1016,3.105,1017,3.105,1018,3.105,1019,3.105,1020,3.105,1021,3.105,1022,3.105,1023,3.105,1024,3.105,1025,3.105,1026,3.105,1027,3.105,1028,4.397]],["title/license.html",[878,2.22,879,2.22,1029,2.22]],["body/license.html",[23,0.018,79,0.018,80,0.018,515,3.839,559,4.801,569,3.396,615,3.839,694,3.839,819,3.839,902,4.801,919,3.839,943,4.801,961,3.839,1029,3.396,1030,6.158,1031,4.513,1032,4.513,1033,4.513,1034,5.644,1035,4.513,1036,4.513,1037,4.513,1038,4.513,1039,4.513,1040,4.513,1041,7.01,1042,4.513,1043,4.513,1044,6.158,1045,4.513,1046,4.513,1047,4.513,1048,4.513,1049,4.513,1050,4.513,1051,4.513,1052,4.513,1053,5.644,1054,4.513,1055,4.513,1056,4.513,1057,4.513,1058,4.513,1059,4.513,1060,5.644,1061,5.644,1062,4.513,1063,4.513,1064,4.513,1065,4.513,1066,4.513,1067,4.513,1068,4.513,1069,4.513,1070,4.513,1071,4.513,1072,4.513,1073,4.513,1074,4.513,1075,4.513,1076,4.513,1077,4.513,1078,4.513,1079,4.513,1080,4.513,1081,4.513,1082,4.513,1083,4.513,1084,4.513,1085,4.513,1086,4.513,1087,4.513,1088,4.513,1089,4.513,1090,4.513,1091,4.513]],["title/modules.html",[1092,4.087]],["body/modules.html",[23,0.021,79,0.021,80,0.021,1092,4.831]],["title/overview.html",[971,3.615]],["body/overview.html",[2,1.384,23,0.02,33,1.153,79,0.02,80,0.02,82,2.383,231,2.383,336,5.421,404,2.925,971,4.155,1093,5.521,1094,5.521,1095,5.521]],["title/properties.html",[85,0.55,848,2.51]],["body/properties.html",[23,0.022,79,0.02,80,0.02,85,0.725,569,4.201,917,4.75,1029,4.201,1096,5.583]],["title/miscellaneous/variables.html",[868,1.687,1097,3.607]],["body/miscellaneous/variables.html",[15,0.784,23,0.024,79,0.017,80,0.017,84,0.254,96,0.427,123,1.32,124,1.492,136,1.069,213,3.208,226,3.429,234,2.148,258,2.148,649,2.437,658,4.291,823,3.208,825,3.208,827,4.632,833,3.627,834,4.632,835,3.627,836,5.103,837,3.627,838,5.103,868,2.437,876,3.627,1004,3.627,1097,3.627,1098,4.263,1099,4.263,1100,4.263,1101,5.998,1102,5.998,1103,4.263,1104,5.444,1105,4.263,1106,4.263,1107,4.263,1108,4.263,1109,4.263,1110,4.263,1111,4.263,1112,4.263,1113,4.263,1114,4.263,1115,4.263,1116,4.263,1117,4.263,1118,4.263,1119,4.263,1120,4.263,1121,4.263,1122,4.263,1123,4.263]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Article.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"interfaces/ArticleListConfig.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"injectables/ArticlesService.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"interfaces/Comment.html":{},"injectables/CommentsService.html":{},"components/EditorComponent.html":{},"interfaces/Errors.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"injectables/JwtService.html":{},"components/ListErrorsComponent.html":{},"pipes/MarkdownPipe.html":{},"interfaces/Profile.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"injectables/ProfileService.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"injectables/TagsService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":624,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["0...n",{"_index":373,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["0.0.0",{"_index":1096,"title":{},"body":{"properties.html":{}}}],["0.14.2",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":822,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":828,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":842,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":831,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":840,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":844,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":839,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":841,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":829,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":843,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":832,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":830,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":845,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":336,"title":{},"body":{"components/ArticleListComponent.html":{},"overview.html":{}}}],["1)!.path",{"_index":473,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthForm.html":{}}}],["1.0.0",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["1.5",{"_index":916,"title":{},"body":{"index.html":{}}}],["11.1.0",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":1093,"title":{},"body":{"overview.html":{}}}],["18.0.0",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":865,"title":{},"body":{"dependencies.html":{}}}],["2023",{"_index":1032,"title":{},"body":{"license.html":{}}}],["25.0.1",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":1094,"title":{},"body":{"overview.html":{}}}],["7.4.0",{"_index":863,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1095,"title":{},"body":{"overview.html":{}}}],["above",{"_index":1059,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":327,"title":{},"body":{"components/ArticleListComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"components/ListErrorsComponent.html":{}}}],["account",{"_index":482,"title":{},"body":{"components/AuthComponent.html":{}}}],["action",{"_index":1085,"title":{},"body":{"license.html":{}}}],["activatedroute",{"_index":168,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{}}}],["actual",{"_index":899,"title":{},"body":{"index.html":{}}}],["actual_component",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{}}}],["add",{"_index":277,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"injectables/CommentsService.html":{},"components/EditorComponent.html":{}}}],["add(slug",{"_index":489,"title":{},"body":{"injectables/CommentsService.html":{}}}],["add(this.article.slug",{"_index":256,"title":{},"body":{"components/ArticleComponent.html":{}}}],["addcomment",{"_index":160,"title":{},"body":{"components/ArticleComponent.html":{}}}],["additionally",{"_index":915,"title":{},"body":{"index.html":{}}}],["addtag",{"_index":289,"title":{},"body":{"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{}}}],["adhere",{"_index":911,"title":{},"body":{"index.html":{}}}],["adheres",{"_index":889,"title":{},"body":{"index.html":{}}}],["advanced",{"_index":886,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":919,"title":{},"body":{"index.html":{},"license.html":{}}}],["angular",{"_index":619,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["angular's",{"_index":431,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["angular/animations",{"_index":850,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":141,"title":{},"body":{"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":427,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CommentsService.html":{},"injectables/ProfileService.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":852,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"injectables/ArticlesService.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"injectables/CommentsService.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"injectables/JwtService.html":{},"components/ListErrorsComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"injectables/ProfileService.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/core/rxjs",{"_index":219,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["angular/forms",{"_index":201,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":685,"title":{},"body":{"pipes/MarkdownPipe.html":{},"dependencies.html":{}}}],["angular/router",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/template",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["angular/template/let",{"_index":608,"title":{},"body":{"components/HomeComponent.html":{}}}],["api",{"_index":891,"title":{},"body":{"index.html":{}}}],["apiinterceptor",{"_index":834,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apireq",{"_index":1103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"index.html":{}}}],["app.component.html",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initializer",{"_index":1113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":827,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":896,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":1107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arising",{"_index":1088,"title":{},"body":{"license.html":{}}}],["array",{"_index":344,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["array(math.ceil(data.articlescount",{"_index":380,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["array.from",{"_index":379,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["article",{"_index":39,"title":{"interfaces/Article.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Article.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"injectables/ArticlesService.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"index.html":{}}}],["article's",{"_index":1016,"title":{},"body":{"index.html":{}}}],["article.author.username",{"_index":243,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleMetaComponent.html":{},"components/EditorComponent.html":{}}}],["article.component.html",{"_index":151,"title":{},"body":{"components/ArticleComponent.html":{}}}],["article.createdat",{"_index":391,"title":{},"body":{"components/ArticleMetaComponent.html":{}}}],["article.description",{"_index":396,"title":{},"body":{"components/ArticlePreviewComponent.html":{}}}],["article.favorited",{"_index":268,"title":{},"body":{"components/ArticleComponent.html":{}}}],["article.favoritescount",{"_index":270,"title":{},"body":{"components/ArticleComponent.html":{},"components/ArticlePreviewComponent.html":{}}}],["article.slug",{"_index":305,"title":{},"body":{"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"components/EditorComponent.html":{}}}],["article.taglist",{"_index":272,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticlePreviewComponent.html":{},"components/EditorComponent.html":{}}}],["article.title",{"_index":266,"title":{},"body":{"components/ArticleComponent.html":{},"components/ArticlePreviewComponent.html":{}}}],["article/article",{"_index":1014,"title":{},"body":{"index.html":{}}}],["article/components/article",{"_index":703,"title":{},"body":{"components/ProfileArticlesComponent.html":{},"components/ProfileFavoritesComponent.html":{}}}],["article/models/article",{"_index":704,"title":{},"body":{"components/ProfileArticlesComponent.html":{},"components/ProfileFavoritesComponent.html":{}}}],["articlecommentcomponent",{"_index":38,"title":{"components/ArticleCommentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["articlecomponent",{"_index":41,"title":{"components/ArticleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["articleform",{"_index":278,"title":{"interfaces/ArticleForm.html":{}},"body":{"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{},"coverage.html":{}}}],["articlelistcomponent",{"_index":43,"title":{"components/ArticleListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["articlelistconfig",{"_index":330,"title":{"interfaces/ArticleListConfig.html":{}},"body":{"components/ArticleListComponent.html":{},"interfaces/ArticleListConfig.html":{},"injectables/ArticlesService.html":{},"components/HomeComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileFavoritesComponent.html":{},"coverage.html":{}}}],["articlemetacomponent",{"_index":45,"title":{"components/ArticleMetaComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["articlepreviewcomponent",{"_index":47,"title":{"components/ArticlePreviewComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["articles",{"_index":314,"title":{},"body":{"components/ArticleListComponent.html":{},"injectables/ArticlesService.html":{},"components/ProfileArticlesComponent.html":{},"index.html":{}}}],["articles'},{'name",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{}}}],["articles...}@if",{"_index":382,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["articles.component.ts",{"_index":697,"title":{},"body":{"components/ProfileArticlesComponent.html":{},"coverage.html":{}}}],["articles.component.ts:16",{"_index":702,"title":{},"body":{"components/ProfileArticlesComponent.html":{}}}],["articles.component.ts:17",{"_index":701,"title":{},"body":{"components/ProfileArticlesComponent.html":{}}}],["articles.component.ts:18",{"_index":699,"title":{},"body":{"components/ProfileArticlesComponent.html":{}}}],["articles.component.ts:25",{"_index":700,"title":{},"body":{"components/ProfileArticlesComponent.html":{}}}],["articlesconfig",{"_index":698,"title":{},"body":{"components/ProfileArticlesComponent.html":{}}}],["articleservice",{"_index":169,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{}}}],["articlesservice",{"_index":170,"title":{"injectables/ArticlesService.html":{}},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"injectables/ArticlesService.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"coverage.html":{}}}],["artifacts",{"_index":964,"title":{},"body":{"index.html":{}}}],["asobservable",{"_index":798,"title":{},"body":{"injectables/UserService.html":{}}}],["associated",{"_index":1042,"title":{},"body":{"license.html":{}}}],["async",{"_index":115,"title":{},"body":{"components/ArticleCommentComponent.html":{},"components/HeaderComponent.html":{},"pipes/MarkdownPipe.html":{}}}],["asyncpipe",{"_index":107,"title":{},"body":{"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["auth",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"index.html":{}}}],["auth.component.html",{"_index":452,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthForm.html":{}}}],["auth/if",{"_index":577,"title":{},"body":{"components/HeaderComponent.html":{}}}],["auth/services/user.service",{"_index":576,"title":{},"body":{"components/HeaderComponent.html":{}}}],["authcomponent",{"_index":49,"title":{"components/AuthComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["authenticate",{"_index":988,"title":{},"body":{"index.html":{}}}],["authenticated",{"_index":530,"title":{},"body":{"components/FavoriteButtonComponent.html":{},"components/HomeComponent.html":{}}}],["authenticated.directive",{"_index":216,"title":{},"body":{"components/ArticleComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["authenticated.directive.ts",{"_index":628,"title":{},"body":{"directives/IfAuthenticatedDirective.html":{},"coverage.html":{}}}],["authenticated.directive.ts:18",{"_index":635,"title":{},"body":{"directives/IfAuthenticatedDirective.html":{}}}],["authenticated.directive.ts:25",{"_index":638,"title":{},"body":{"directives/IfAuthenticatedDirective.html":{}}}],["authenticated.directive.ts:26",{"_index":639,"title":{},"body":{"directives/IfAuthenticatedDirective.html":{}}}],["authenticated.directive.ts:28",{"_index":637,"title":{},"body":{"directives/IfAuthenticatedDirective.html":{}}}],["authenticated.directive.ts:45",{"_index":636,"title":{},"body":{"directives/IfAuthenticatedDirective.html":{}}}],["authentication",{"_index":904,"title":{},"body":{"index.html":{}}}],["authform",{"_index":453,"title":{"interfaces/AuthForm.html":{}},"body":{"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"coverage.html":{}}}],["author",{"_index":86,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticleListConfig.html":{},"interfaces/Comment.html":{},"components/ProfileArticlesComponent.html":{},"index.html":{}}}],["author's",{"_index":1028,"title":{},"body":{"index.html":{}}}],["authorization",{"_index":1122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authors",{"_index":1078,"title":{},"body":{"license.html":{}}}],["authrequired",{"_index":642,"title":{},"body":{"directives/IfAuthenticatedDirective.html":{}}}],["authtype",{"_index":454,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthForm.html":{}}}],["automatically",{"_index":958,"title":{},"body":{"index.html":{}}}],["await",{"_index":688,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["backend",{"_index":900,"title":{},"body":{"index.html":{}}}],["based",{"_index":1011,"title":{},"body":{"index.html":{}}}],["basic",{"_index":1026,"title":{},"body":{"index.html":{}}}],["behaviorsubject",{"_index":804,"title":{},"body":{"injectables/UserService.html":{}}}],["behaviorsubject(null",{"_index":801,"title":{},"body":{"injectables/UserService.html":{}}}],["best",{"_index":913,"title":{},"body":{"index.html":{}}}],["bio",{"_index":693,"title":{},"body":{"interfaces/Profile.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/User.html":{}}}],["blogging",{"_index":974,"title":{},"body":{"index.html":{}}}],["body",{"_index":87,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticleForm.html":{},"interfaces/Comment.html":{},"injectables/CommentsService.html":{},"components/EditorComponent.html":{}}}],["boolean",{"_index":98,"title":{},"body":{"interfaces/Article.html":{},"components/ArticleComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/FollowButtonComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{}}}],["bottom",{"_index":1021,"title":{},"body":{"index.html":{}}}],["breakdown",{"_index":1002,"title":{},"body":{"index.html":{}}}],["browser",{"_index":686,"title":{},"body":{"pipes/MarkdownPipe.html":{},"dependencies.html":{}}}],["build",{"_index":963,"title":{},"body":{"index.html":{}}}],["building",{"_index":962,"title":{},"body":{"index.html":{}}}],["built",{"_index":897,"title":{},"body":{"index.html":{}}}],["button",{"_index":520,"title":{},"body":{"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"index.html":{}}}],["button'},{'name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{}}}],["button.component",{"_index":222,"title":{},"body":{"components/ArticleComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/ProfileComponent.html":{}}}],["button.component.ts",{"_index":519,"title":{},"body":{"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:36",{"_index":525,"title":{},"body":{"components/FavoriteButtonComponent.html":{}}}],["button.component.ts:37",{"_index":526,"title":{},"body":{"components/FavoriteButtonComponent.html":{}}}],["button.component.ts:39",{"_index":523,"title":{},"body":{"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{}}}],["button.component.ts:40",{"_index":522,"title":{},"body":{"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{}}}],["button.component.ts:41",{"_index":542,"title":{},"body":{"components/FollowButtonComponent.html":{}}}],["button.component.ts:42",{"_index":540,"title":{},"body":{"components/FollowButtonComponent.html":{}}}],["button.component.ts:48",{"_index":524,"title":{},"body":{"components/FavoriteButtonComponent.html":{}}}],["button.component.ts:50",{"_index":541,"title":{},"body":{"components/FollowButtonComponent.html":{}}}],["c",{"_index":1031,"title":{},"body":{"license.html":{}}}],["called",{"_index":979,"title":{},"body":{"index.html":{}}}],["canmodify",{"_index":114,"title":{},"body":{"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{}}}],["catcherror",{"_index":211,"title":{},"body":{"components/ArticleComponent.html":{},"components/ProfileComponent.html":{}}}],["catcherror((err",{"_index":232,"title":{},"body":{"components/ArticleComponent.html":{}}}],["catcherror((error",{"_index":721,"title":{},"body":{"components/ProfileComponent.html":{}}}],["change",{"_index":960,"title":{},"body":{"index.html":{}}}],["changedetection",{"_index":388,"title":{},"body":{"components/ArticleMetaComponent.html":{},"components/FooterComponent.html":{}}}],["changedetectionstrategy",{"_index":393,"title":{},"body":{"components/ArticleMetaComponent.html":{},"components/FooterComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":389,"title":{},"body":{"components/ArticleMetaComponent.html":{},"components/FooterComponent.html":{}}}],["changes",{"_index":301,"title":{},"body":{"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{}}}],["charge",{"_index":1038,"title":{},"body":{"license.html":{}}}],["cheerio",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["claim",{"_index":1081,"title":{},"body":{"license.html":{}}}],["class",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"injectables/ArticlesService.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"injectables/CommentsService.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"injectables/JwtService.html":{},"components/ListErrorsComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"injectables/ProfileService.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}}}],["cli",{"_index":940,"title":{},"body":{"index.html":{}}}],["click",{"_index":771,"title":{},"body":{"components/SettingsComponent.html":{}}}],["client",{"_index":1018,"title":{},"body":{"index.html":{}}}],["clone",{"_index":978,"title":{},"body":{"index.html":{}}}],["code",{"_index":566,"title":{},"body":{"components/FooterComponent.html":{}}}],["codebase",{"_index":880,"title":{},"body":{"index.html":{}}}],["combinelatest",{"_index":212,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{},"components/ProfileComponent.html":{}}}],["combinelatest([of(profile",{"_index":723,"title":{},"body":{"components/ProfileComponent.html":{}}}],["comment",{"_index":103,"title":{"interfaces/Comment.html":{}},"body":{"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentsService.html":{},"coverage.html":{},"index.html":{}}}],["comment's",{"_index":1022,"title":{},"body":{"index.html":{}}}],["comment'},{'name",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{}}}],["comment.author.username",{"_index":110,"title":{},"body":{"components/ArticleCommentComponent.html":{}}}],["comment.body",{"_index":108,"title":{},"body":{"components/ArticleCommentComponent.html":{}}}],["comment.component",{"_index":210,"title":{},"body":{"components/ArticleComponent.html":{}}}],["comment.component.ts",{"_index":102,"title":{},"body":{"components/ArticleCommentComponent.html":{},"coverage.html":{}}}],["comment.component.ts:49",{"_index":120,"title":{},"body":{"components/ArticleCommentComponent.html":{}}}],["comment.component.ts:50",{"_index":122,"title":{},"body":{"components/ArticleCommentComponent.html":{}}}],["comment.component.ts:52",{"_index":132,"title":{},"body":{"components/ArticleCommentComponent.html":{}}}],["comment.createdat",{"_index":111,"title":{},"body":{"components/ArticleCommentComponent.html":{}}}],["commentcontrol",{"_index":152,"title":{},"body":{"components/ArticleComponent.html":{}}}],["commentformerrors",{"_index":153,"title":{},"body":{"components/ArticleComponent.html":{}}}],["commentid",{"_index":494,"title":{},"body":{"injectables/CommentsService.html":{}}}],["comments",{"_index":154,"title":{},"body":{"components/ArticleComponent.html":{},"index.html":{}}}],["commentsservice",{"_index":171,"title":{"injectables/CommentsService.html":{}},"body":{"components/ArticleComponent.html":{},"injectables/CommentsService.html":{},"coverage.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"coverage.html":{}}}],["component_template",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"overview.html":{}}}],["components/article",{"_index":205,"title":{},"body":{"components/ArticleComponent.html":{},"components/HomeComponent.html":{}}}],["components/favorite",{"_index":221,"title":{},"body":{"components/ArticleComponent.html":{}}}],["components/follow",{"_index":720,"title":{},"body":{"components/ProfileComponent.html":{}}}],["condition",{"_index":629,"title":{},"body":{"directives/IfAuthenticatedDirective.html":{}}}],["conditions",{"_index":1058,"title":{},"body":{"license.html":{}}}],["conduit",{"_index":558,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["config",{"_index":325,"title":{},"body":{"components/ArticleListComponent.html":{},"injectables/ArticlesService.html":{}}}],["config(config",{"_index":353,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["config.filters[key",{"_index":438,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["config.model",{"_index":348,"title":{},"body":{"components/ArticleListComponent.html":{},"injectables/ArticlesService.html":{},"components/HomeComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileFavoritesComponent.html":{}}}],["config.model.ts",{"_index":384,"title":{},"body":{"interfaces/ArticleListConfig.html":{},"coverage.html":{}}}],["config.type",{"_index":440,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["connection",{"_index":1090,"title":{},"body":{"license.html":{}}}],["const",{"_index":226,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"pipes/MarkdownPipe.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":166,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"injectables/ArticlesService.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"injectables/CommentsService.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"injectables/ProfileService.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}}}],["constructor(articleservice",{"_index":503,"title":{},"body":{"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{}}}],["constructor(articlesservice",{"_index":328,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["constructor(http",{"_index":406,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CommentsService.html":{},"injectables/ProfileService.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":357,"title":{},"body":{"components/ArticleListComponent.html":{},"injectables/ArticlesService.html":{},"injectables/CommentsService.html":{},"injectables/ProfileService.html":{},"injectables/TagsService.html":{}}}],["constructor(profileservice",{"_index":538,"title":{},"body":{"components/FollowButtonComponent.html":{}}}],["constructor(route",{"_index":167,"title":{},"body":{"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{}}}],["constructor(router",{"_index":590,"title":{},"body":{"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["constructor(templateref",{"_index":631,"title":{},"body":{"directives/IfAuthenticatedDirective.html":{}}}],["containing",{"_index":881,"title":{},"body":{"index.html":{}}}],["content",{"_index":678,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["contract",{"_index":1086,"title":{},"body":{"license.html":{}}}],["control",{"_index":291,"title":{},"body":{"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{}}}],["convert",{"_index":429,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["copies",{"_index":1053,"title":{},"body":{"license.html":{}}}],["copy",{"_index":559,"title":{},"body":{"components/FooterComponent.html":{},"license.html":{}}}],["copyright",{"_index":1030,"title":{},"body":{"license.html":{}}}],["core/auth/if",{"_index":215,"title":{},"body":{"components/ArticleComponent.html":{},"components/HomeComponent.html":{}}}],["core/auth/services/user.service",{"_index":137,"title":{},"body":{"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["core/auth/user.model",{"_index":138,"title":{},"body":{"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["core/layout/footer.component",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["core/layout/header.component",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["core/models/errors.model",{"_index":217,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{},"components/ListErrorsComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["core/models/loading",{"_index":350,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["coverage",{"_index":818,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cr*d",{"_index":997,"title":{},"body":{"index.html":{}}}],["create",{"_index":302,"title":{},"body":{"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"injectables/ArticlesService.html":{},"components/EditorComponent.html":{}}}],["create(article",{"_index":410,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["create/edit",{"_index":1012,"title":{},"body":{"index.html":{}}}],["created",{"_index":892,"title":{},"body":{"index.html":{}}}],["createdat",{"_index":88,"title":{},"body":{"interfaces/Article.html":{},"interfaces/Comment.html":{}}}],["credentials",{"_index":788,"title":{},"body":{"injectables/UserService.html":{}}}],["cru",{"_index":994,"title":{},"body":{"index.html":{}}}],["crud",{"_index":885,"title":{},"body":{"index.html":{}}}],["currently",{"_index":924,"title":{},"body":{"index.html":{}}}],["currentpage",{"_index":320,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["currentuser",{"_index":155,"title":{},"body":{"components/ArticleComponent.html":{},"components/HeaderComponent.html":{},"injectables/UserService.html":{}}}],["currentuser.username",{"_index":580,"title":{},"body":{"components/HeaderComponent.html":{}}}],["currentuser?.username",{"_index":242,"title":{},"body":{"components/ArticleComponent.html":{}}}],["currentusersubject",{"_index":780,"title":{},"body":{"injectables/UserService.html":{}}}],["cursor",{"_index":310,"title":{},"body":{"components/ArticleListComponent.html":{},"components/HomeComponent.html":{}}}],["custom",{"_index":981,"title":{},"body":{"index.html":{}}}],["damages",{"_index":1082,"title":{},"body":{"license.html":{}}}],["data.article",{"_index":445,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["data.articles",{"_index":369,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["data.comment",{"_index":500,"title":{},"body":{"injectables/CommentsService.html":{}}}],["data.comments",{"_index":498,"title":{},"body":{"injectables/CommentsService.html":{}}}],["data.profile",{"_index":750,"title":{},"body":{"injectables/ProfileService.html":{}}}],["data.tags",{"_index":776,"title":{},"body":{"injectables/TagsService.html":{}}}],["date",{"_index":112,"title":{},"body":{"components/ArticleCommentComponent.html":{},"components/ArticleMetaComponent.html":{},"components/FooterComponent.html":{}}}],["date.now",{"_index":556,"title":{},"body":{"components/FooterComponent.html":{}}}],["datepipe",{"_index":105,"title":{},"body":{"components/ArticleCommentComponent.html":{},"components/ArticleMetaComponent.html":{},"components/FooterComponent.html":{}}}],["deal",{"_index":1043,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1091,"title":{},"body":{"license.html":{}}}],["default",{"_index":123,"title":{},"body":{"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"components/ListErrorsComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":119,"title":{},"body":{"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"injectables/ArticlesService.html":{},"components/AuthComponent.html":{},"injectables/CommentsService.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"injectables/JwtService.html":{},"components/ListErrorsComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"injectables/ProfileService.html":{},"components/SettingsComponent.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":118,"title":{},"body":{"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"injectables/ArticlesService.html":{},"injectables/CommentsService.html":{},"index.html":{}}}],["delete(\"/profiles",{"_index":753,"title":{},"body":{"injectables/ProfileService.html":{}}}],["delete(comment.id",{"_index":262,"title":{},"body":{"components/ArticleComponent.html":{}}}],["delete(commentid",{"_index":492,"title":{},"body":{"injectables/CommentsService.html":{}}}],["delete(slug",{"_index":414,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["delete(this.article.slug",{"_index":250,"title":{},"body":{"components/ArticleComponent.html":{}}}],["deletearticle",{"_index":161,"title":{},"body":{"components/ArticleComponent.html":{}}}],["deletecomment",{"_index":162,"title":{},"body":{"components/ArticleComponent.html":{}}}],["deletecomment(comment",{"_index":181,"title":{},"body":{"components/ArticleComponent.html":{}}}],["deleting",{"_index":995,"title":{},"body":{"index.html":{}}}],["demo",{"_index":985,"title":{},"body":{"index.html":{}}}],["demonstrate",{"_index":893,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":849,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["deps",{"_index":1115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":89,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{}}}],["destroyref",{"_index":156,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["destroytoken",{"_index":651,"title":{},"body":{"injectables/JwtService.html":{}}}],["dev",{"_index":955,"title":{},"body":{"index.html":{}}}],["directive",{"_index":33,"title":{"directives/IfAuthenticatedDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{}}}],["directory",{"_index":967,"title":{},"body":{"index.html":{}}}],["display",{"_index":999,"title":{},"body":{"index.html":{}}}],["dist",{"_index":966,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":806,"title":{},"body":{"injectables/UserService.html":{}}}],["distribute",{"_index":1050,"title":{},"body":{"license.html":{}}}],["docs",{"_index":926,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":819,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{}}}],["domsanitizer",{"_index":680,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["dynamic",{"_index":853,"title":{},"body":{"dependencies.html":{}}}],["easily",{"_index":374,"title":{},"body":{"components/ArticleListComponent.html":{},"index.html":{}}}],["edit",{"_index":267,"title":{},"body":{"components/ArticleComponent.html":{},"components/ProfileComponent.html":{}}}],["editor",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"index.html":{}}}],["editor.component.html",{"_index":282,"title":{},"body":{"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{}}}],["editor/article",{"_index":1013,"title":{},"body":{"index.html":{}}}],["editorcomponent",{"_index":51,"title":{"components/EditorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["element",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{}}}],["email",{"_index":466,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["empty",{"_index":316,"title":{},"body":{"components/ArticleListComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{}}}],["enumerations",{"_index":869,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":235,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["err.error",{"_index":1118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":261,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"injectables/UserService.html":{}}}],["errorinterceptor",{"_index":836,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["errorlist",{"_index":664,"title":{},"body":{"components/ListErrorsComponent.html":{}}}],["errorlist.errors[key",{"_index":671,"title":{},"body":{"components/ListErrorsComponent.html":{}}}],["errors",{"_index":194,"title":{"interfaces/Errors.html":{}},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"interfaces/Errors.html":{},"components/ListErrorsComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"coverage.html":{}}}],["errors'},{'name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{}}}],["errors(errorlist",{"_index":668,"title":{},"body":{"components/ListErrorsComponent.html":{}}}],["errors.component",{"_index":209,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["errors.component.html",{"_index":663,"title":{},"body":{"components/ListErrorsComponent.html":{}}}],["errors.component.ts",{"_index":662,"title":{},"body":{"components/ListErrorsComponent.html":{},"coverage.html":{}}}],["errors.component.ts:12",{"_index":666,"title":{},"body":{"components/ListErrorsComponent.html":{}}}],["errors.component.ts:14",{"_index":665,"title":{},"body":{"components/ListErrorsComponent.html":{}}}],["esprima",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["etc",{"_index":888,"title":{},"body":{"index.html":{}}}],["event",{"_index":1077,"title":{},"body":{"license.html":{}}}],["eventemitter",{"_index":121,"title":{},"body":{"components/ArticleCommentComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{}}}],["example",{"_index":972,"title":{},"body":{"index.html":{}}}],["examples",{"_index":884,"title":{},"body":{"index.html":{}}}],["exist",{"_index":293,"title":{},"body":{"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{}}}],["explaining",{"_index":927,"title":{},"body":{"index.html":{}}}],["export",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Article.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"interfaces/ArticleListConfig.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"injectables/ArticlesService.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"interfaces/Comment.html":{},"injectables/CommentsService.html":{},"components/EditorComponent.html":{},"interfaces/Errors.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"injectables/JwtService.html":{},"components/ListErrorsComponent.html":{},"pipes/MarkdownPipe.html":{},"interfaces/Profile.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"injectables/ProfileService.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"injectables/TagsService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["express",{"_index":1068,"title":{},"body":{"license.html":{}}}],["false",{"_index":189,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["favorite",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"injectables/ArticlesService.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"index.html":{}}}],["favorite(slug",{"_index":416,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["favoritebuttoncomponent",{"_index":53,"title":{"components/FavoriteButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["favorited",{"_index":90,"title":{},"body":{"interfaces/Article.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleListConfig.html":{},"components/ArticlePreviewComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"index.html":{}}}],["favorites",{"_index":730,"title":{},"body":{"components/ProfileFavoritesComponent.html":{}}}],["favorites'},{'name",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{}}}],["favorites.component.ts",{"_index":729,"title":{},"body":{"components/ProfileFavoritesComponent.html":{},"coverage.html":{}}}],["favorites.component.ts:16",{"_index":735,"title":{},"body":{"components/ProfileFavoritesComponent.html":{}}}],["favorites.component.ts:17",{"_index":734,"title":{},"body":{"components/ProfileFavoritesComponent.html":{}}}],["favorites.component.ts:18",{"_index":732,"title":{},"body":{"components/ProfileFavoritesComponent.html":{}}}],["favorites.component.ts:25",{"_index":733,"title":{},"body":{"components/ProfileFavoritesComponent.html":{}}}],["favoritesconfig",{"_index":731,"title":{},"body":{"components/ProfileFavoritesComponent.html":{}}}],["favoritescount",{"_index":91,"title":{},"body":{"interfaces/Article.html":{}}}],["feed",{"_index":441,"title":{},"body":{"injectables/ArticlesService.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Article.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"interfaces/ArticleListConfig.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"injectables/ArticlesService.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"interfaces/Comment.html":{},"injectables/CommentsService.html":{},"components/EditorComponent.html":{},"interfaces/Errors.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"injectables/JwtService.html":{},"components/ListErrorsComponent.html":{},"pipes/MarkdownPipe.html":{},"interfaces/Profile.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"injectables/ProfileService.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"injectables/TagsService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":961,"title":{},"body":{"index.html":{},"license.html":{}}}],["filter",{"_index":361,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["filters",{"_index":385,"title":{},"body":{"interfaces/ArticleListConfig.html":{},"injectables/ArticlesService.html":{},"components/HomeComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileFavoritesComponent.html":{}}}],["fitness",{"_index":1073,"title":{},"body":{"license.html":{}}}],["flag",{"_index":969,"title":{},"body":{"index.html":{}}}],["fledged",{"_index":895,"title":{},"body":{"index.html":{}}}],["follow",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"injectables/ProfileService.html":{},"components/SettingsComponent.html":{},"index.html":{}}}],["follow(username",{"_index":740,"title":{},"body":{"injectables/ProfileService.html":{}}}],["followbuttoncomponent",{"_index":56,"title":{"components/FollowButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["following",{"_index":694,"title":{},"body":{"interfaces/Profile.html":{},"license.html":{}}}],["footer",{"_index":553,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{}}}],["footer.component.html",{"_index":554,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":19,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["fork",{"_index":918,"title":{},"body":{"index.html":{}}}],["formcontrol",{"_index":191,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["formgroup",{"_index":280,"title":{},"body":{"interfaces/ArticleForm.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["formsmodule",{"_index":149,"title":{},"body":{"components/ArticleComponent.html":{}}}],["free",{"_index":1037,"title":{},"body":{"license.html":{}}}],["fully",{"_index":894,"title":{},"body":{"index.html":{}}}],["function",{"_index":824,"title":{},"body":{"coverage.html":{}}}],["functionality",{"_index":928,"title":{},"body":{"index.html":{}}}],["functions",{"_index":875,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1056,"title":{},"body":{"license.html":{}}}],["general",{"_index":987,"title":{},"body":{"index.html":{}}}],["get(\"/tags",{"_index":775,"title":{},"body":{"injectables/TagsService.html":{}}}],["get(`/articles/${slug",{"_index":443,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["get(`/articles/${slug}/comments",{"_index":497,"title":{},"body":{"injectables/CommentsService.html":{}}}],["get(slug",{"_index":418,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["get(this.route.parent?.snapshot.params[\"username",{"_index":736,"title":{},"body":{"components/ProfileFavoritesComponent.html":{}}}],["get(this.route.snapshot.params[\"username",{"_index":706,"title":{},"body":{"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{}}}],["get(username",{"_index":742,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getall",{"_index":487,"title":{},"body":{"injectables/CommentsService.html":{},"components/HomeComponent.html":{},"injectables/TagsService.html":{}}}],["getall(slug",{"_index":495,"title":{},"body":{"injectables/CommentsService.html":{}}}],["getcurrentuser",{"_index":781,"title":{},"body":{"injectables/UserService.html":{}}}],["getting",{"_index":878,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["gettoken",{"_index":652,"title":{},"body":{"injectables/JwtService.html":{}}}],["global",{"_index":621,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["globally",{"_index":942,"title":{},"body":{"index.html":{}}}],["gone",{"_index":908,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1036,"title":{},"body":{"license.html":{}}}],["great",{"_index":909,"title":{},"body":{"index.html":{}}}],["hasview",{"_index":630,"title":{},"body":{"directives/IfAuthenticatedDirective.html":{}}}],["header",{"_index":571,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{}}}],["header.component.html",{"_index":573,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":17,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["here",{"_index":317,"title":{},"body":{"components/ArticleListComponent.html":{},"components/HomeComponent.html":{},"components/SettingsComponent.html":{},"index.html":{}}}],["hereby",{"_index":1035,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1079,"title":{},"body":{"license.html":{}}}],["home",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"index.html":{}}}],["home.component.css",{"_index":584,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":585,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":61,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["html",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{}}}],["http",{"_index":409,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CommentsService.html":{},"injectables/ProfileService.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}}}],["http://localhost:4200",{"_index":957,"title":{},"body":{"index.html":{}}}],["http://www.jstips.co/en/create",{"_index":371,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["httpclient",{"_index":407,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CommentsService.html":{},"injectables/ProfileService.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}}}],["httpinterceptorfn",{"_index":1101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpparams",{"_index":426,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["https://angular.realworld.io",{"_index":986,"title":{},"body":{"index.html":{}}}],["https://api.realworld.io/api${req.url",{"_index":1105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.e",{"_index":976,"title":{},"body":{"index.html":{}}}],["id",{"_index":485,"title":{},"body":{"interfaces/Comment.html":{}}}],["identifier",{"_index":820,"title":{},"body":{"coverage.html":{}}}],["ifauthenticated",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{}}}],["ifauthenticated(condition",{"_index":648,"title":{},"body":{"directives/IfAuthenticatedDirective.html":{}}}],["ifauthenticateddirective",{"_index":76,"title":{"directives/IfAuthenticatedDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["ignore",{"_index":436,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["image",{"_index":695,"title":{},"body":{"interfaces/Profile.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/User.html":{}}}],["implements",{"_index":144,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"pipes/MarkdownPipe.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["implied",{"_index":1069,"title":{},"body":{"license.html":{}}}],["import",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Article.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"injectables/ArticlesService.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"interfaces/Comment.html":{},"injectables/CommentsService.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"injectables/JwtService.html":{},"components/ListErrorsComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"injectables/ProfileService.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}}}],["import(\"marked",{"_index":689,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["imports",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["in/sign",{"_index":1006,"title":{},"body":{"index.html":{}}}],["included",{"_index":1062,"title":{},"body":{"license.html":{}}}],["including",{"_index":902,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":84,"title":{"index.html":{}},"body":{"interfaces/Article.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"interfaces/ArticleListConfig.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"injectables/ArticlesService.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"interfaces/Comment.html":{},"injectables/CommentsService.html":{},"components/EditorComponent.html":{},"interfaces/Errors.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"injectables/JwtService.html":{},"components/ListErrorsComponent.html":{},"interfaces/Profile.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"injectables/ProfileService.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"injectables/TagsService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Article.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"interfaces/ArticleListConfig.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"injectables/ArticlesService.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"interfaces/Comment.html":{},"injectables/CommentsService.html":{},"components/EditorComponent.html":{},"interfaces/Errors.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"injectables/JwtService.html":{},"components/ListErrorsComponent.html":{},"pipes/MarkdownPipe.html":{},"interfaces/Profile.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"injectables/ProfileService.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"injectables/TagsService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["initauth",{"_index":825,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["initauth(jwtservice",{"_index":877,"title":{},"body":{"miscellaneous/functions.html":{}}}],["inject",{"_index":135,"title":{},"body":{"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"pipes/MarkdownPipe.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["inject(destroyref",{"_index":198,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["inject(domsanitizer",{"_index":681,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["inject(jwtservice).gettoken",{"_index":1119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(tagsservice",{"_index":598,"title":{},"body":{"components/HomeComponent.html":{}}}],["inject(userservice).currentuser",{"_index":574,"title":{},"body":{"components/HeaderComponent.html":{}}}],["inject(userservice).currentuser.pipe",{"_index":125,"title":{},"body":{"components/ArticleCommentComponent.html":{}}}],["injectable",{"_index":403,"title":{"injectables/ArticlesService.html":{},"injectables/CommentsService.html":{},"injectables/JwtService.html":{},"injectables/ProfileService.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}},"body":{"injectables/ArticlesService.html":{},"injectables/CommentsService.html":{},"injectables/JwtService.html":{},"injectables/ProfileService.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":404,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CommentsService.html":{},"injectables/JwtService.html":{},"injectables/ProfileService.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":133,"title":{},"body":{"components/ArticleCommentComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"components/ListErrorsComponent.html":{}}}],["inputs",{"_index":116,"title":{},"body":{"components/ArticleCommentComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"components/ListErrorsComponent.html":{}}}],["install",{"_index":948,"title":{},"body":{"index.html":{}}}],["installed",{"_index":941,"title":{},"body":{"index.html":{}}}],["interactive",{"_index":561,"title":{},"body":{"components/FooterComponent.html":{}}}],["interacts",{"_index":898,"title":{},"body":{"index.html":{}}}],["interface",{"_index":81,"title":{"interfaces/Article.html":{},"interfaces/ArticleForm.html":{},"interfaces/ArticleListConfig.html":{},"interfaces/AuthForm.html":{},"interfaces/Comment.html":{},"interfaces/Errors.html":{},"interfaces/Profile.html":{},"interfaces/SettingsForm.html":{},"interfaces/User.html":{}},"body":{"interfaces/Article.html":{},"interfaces/ArticleForm.html":{},"interfaces/ArticleListConfig.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"interfaces/Comment.html":{},"components/EditorComponent.html":{},"interfaces/Errors.html":{},"interfaces/Profile.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":82,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticleForm.html":{},"interfaces/ArticleListConfig.html":{},"interfaces/AuthForm.html":{},"interfaces/Comment.html":{},"interfaces/Errors.html":{},"interfaces/Profile.html":{},"interfaces/SettingsForm.html":{},"interfaces/User.html":{},"overview.html":{}}}],["interop",{"_index":220,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["isauthenticated",{"_index":546,"title":{},"body":{"components/FollowButtonComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"injectables/UserService.html":{}}}],["isdeleting",{"_index":157,"title":{},"body":{"components/ArticleComponent.html":{}}}],["issubmitting",{"_index":158,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["isuser",{"_index":712,"title":{},"body":{"components/ProfileComponent.html":{}}}],["item",{"_index":265,"title":{},"body":{"components/ArticleComponent.html":{}}}],["jsdom",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":991,"title":{},"body":{"index.html":{}}}],["jwt.service",{"_index":805,"title":{},"body":{"injectables/UserService.html":{}}}],["jwtservice",{"_index":649,"title":{"injectables/JwtService.html":{}},"body":{"injectables/JwtService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["key",{"_index":517,"title":{},"body":{"interfaces/Errors.html":{},"components/ListErrorsComponent.html":{}}}],["kind",{"_index":1067,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":620,"title":{},"body":{"components/HomeComponent.html":{}}}],["layout",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{}}}],["learn",{"_index":920,"title":{},"body":{"index.html":{}}}],["learning",{"_index":562,"title":{},"body":{"components/FooterComponent.html":{}}}],["legend",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{}}}],["lengths",{"_index":910,"title":{},"body":{"index.html":{}}}],["liability",{"_index":1083,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1080,"title":{},"body":{"license.html":{}}}],["license",{"_index":1029,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["licensed",{"_index":567,"title":{},"body":{"components/FooterComponent.html":{}}}],["limit",{"_index":326,"title":{},"body":{"components/ArticleListComponent.html":{},"interfaces/ArticleListConfig.html":{}}}],["limitation",{"_index":1046,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1070,"title":{},"body":{"license.html":{}}}],["line",{"_index":377,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["link",{"_index":309,"title":{},"body":{"components/ArticleListComponent.html":{},"components/HomeComponent.html":{}}}],["list",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"interfaces/ArticleListConfig.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"injectables/ArticlesService.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"index.html":{}}}],["list'},{'name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{}}}],["list.component",{"_index":605,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileFavoritesComponent.html":{}}}],["list.component.ts",{"_index":308,"title":{},"body":{"components/ArticleListComponent.html":{},"coverage.html":{}}}],["list.component.ts:49",{"_index":342,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["list.component.ts:50",{"_index":343,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["list.component.ts:51",{"_index":337,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["list.component.ts:52",{"_index":345,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["list.component.ts:53",{"_index":340,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["list.component.ts:54",{"_index":341,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["list.component.ts:55",{"_index":338,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["list.component.ts:57",{"_index":332,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["list.component.ts:59",{"_index":331,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["list.component.ts:65",{"_index":329,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["list.component.ts:69",{"_index":335,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["list.component.ts:74",{"_index":333,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["listconfig",{"_index":586,"title":{},"body":{"components/HomeComponent.html":{}}}],["listconfig.filters.tag",{"_index":622,"title":{},"body":{"components/HomeComponent.html":{}}}],["listerrorscomponent",{"_index":63,"title":{"components/ListErrorsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"coverage.html":{}}}],["lists",{"_index":1001,"title":{},"body":{"index.html":{}}}],["literal",{"_index":386,"title":{},"body":{"interfaces/ArticleListConfig.html":{},"interfaces/Errors.html":{},"injectables/UserService.html":{}}}],["live",{"_index":984,"title":{},"body":{"index.html":{}}}],["loaded",{"_index":874,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["loading",{"_index":312,"title":{},"body":{"components/ArticleListComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/enumerations.html":{}}}],["loadingstate",{"_index":321,"title":{},"body":{"components/ArticleListComponent.html":{},"miscellaneous/enumerations.html":{}}}],["loadingstate.loaded",{"_index":315,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["loadingstate.loading",{"_index":313,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["loadingstate.not_loaded",{"_index":339,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["localstorage",{"_index":1008,"title":{},"body":{"index.html":{}}}],["located",{"_index":929,"title":{},"body":{"index.html":{}}}],["login",{"_index":475,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/HomeComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["login(credentials",{"_index":786,"title":{},"body":{"injectables/UserService.html":{}}}],["login/signup",{"_index":992,"title":{},"body":{"index.html":{}}}],["logout",{"_index":757,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"injectables/UserService.html":{},"index.html":{}}}],["longdate",{"_index":113,"title":{},"body":{"components/ArticleCommentComponent.html":{},"components/ArticleMetaComponent.html":{}}}],["looks",{"_index":1003,"title":{},"body":{"index.html":{}}}],["make",{"_index":938,"title":{},"body":{"index.html":{}}}],["manage",{"_index":945,"title":{},"body":{"index.html":{}}}],["map",{"_index":126,"title":{},"body":{"components/ArticleCommentComponent.html":{},"injectables/ArticlesService.html":{},"injectables/CommentsService.html":{},"components/ListErrorsComponent.html":{},"injectables/ProfileService.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}}}],["map((data",{"_index":749,"title":{},"body":{"injectables/ProfileService.html":{}}}],["markdown",{"_index":674,"title":{},"body":{"pipes/MarkdownPipe.html":{},"index.html":{}}}],["markdownpipe",{"_index":148,"title":{"pipes/MarkdownPipe.html":{}},"body":{"components/ArticleComponent.html":{},"pipes/MarkdownPipe.html":{},"coverage.html":{}}}],["marked",{"_index":687,"title":{},"body":{"pipes/MarkdownPipe.html":{},"dependencies.html":{}}}],["marked.parse(content",{"_index":691,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["matching",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Article.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"interfaces/ArticleListConfig.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"injectables/ArticlesService.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"interfaces/Comment.html":{},"injectables/CommentsService.html":{},"components/EditorComponent.html":{},"interfaces/Errors.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"injectables/JwtService.html":{},"components/ListErrorsComponent.html":{},"pipes/MarkdownPipe.html":{},"interfaces/Profile.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"injectables/ProfileService.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"injectables/TagsService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["medium.com",{"_index":977,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":1072,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1049,"title":{},"body":{"license.html":{}}}],["meta",{"_index":390,"title":{},"body":{"components/ArticleMetaComponent.html":{}}}],["meta'},{'name",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{}}}],["meta.component",{"_index":206,"title":{},"body":{"components/ArticleComponent.html":{},"components/ArticlePreviewComponent.html":{}}}],["meta.component.ts",{"_index":387,"title":{},"body":{"components/ArticleMetaComponent.html":{},"coverage.html":{}}}],["meta.component.ts:31",{"_index":392,"title":{},"body":{"components/ArticleMetaComponent.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"components/ListErrorsComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{}}}],["methods",{"_index":159,"title":{},"body":{"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticlePreviewComponent.html":{},"injectables/ArticlesService.html":{},"components/AuthComponent.html":{},"injectables/CommentsService.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"injectables/JwtService.html":{},"pipes/MarkdownPipe.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"injectables/ProfileService.html":{},"components/SettingsComponent.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}}}],["minute",{"_index":952,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":868,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":569,"title":{},"body":{"components/FooterComponent.html":{},"license.html":{},"properties.html":{}}}],["models/article",{"_index":347,"title":{},"body":{"components/ArticleListComponent.html":{},"injectables/ArticlesService.html":{},"components/HomeComponent.html":{}}}],["models/article.model",{"_index":202,"title":{},"body":{"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"injectables/ArticlesService.html":{},"components/FavoriteButtonComponent.html":{}}}],["models/comment.model",{"_index":140,"title":{},"body":{"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"injectables/CommentsService.html":{}}}],["models/errors.model",{"_index":464,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthForm.html":{}}}],["models/profile.model",{"_index":544,"title":{},"body":{"components/FollowButtonComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"injectables/ProfileService.html":{}}}],["modify",{"_index":1048,"title":{},"body":{"license.html":{}}}],["modules",{"_index":1092,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":398,"title":{},"body":{"components/ArticlePreviewComponent.html":{},"index.html":{}}}],["multi",{"_index":1116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"injectables/ArticlesService.html":{},"components/AuthComponent.html":{},"injectables/CommentsService.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"injectables/JwtService.html":{},"components/ListErrorsComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"injectables/ProfileService.html":{},"components/SettingsComponent.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["nav",{"_index":625,"title":{},"body":{"components/HomeComponent.html":{}}}],["navigate",{"_index":956,"title":{},"body":{"index.html":{}}}],["nbsp",{"_index":109,"title":{},"body":{"components/ArticleCommentComponent.html":{},"components/FollowButtonComponent.html":{}}}],["nbsp;new",{"_index":578,"title":{},"body":{"components/HeaderComponent.html":{}}}],["nbsp;settings",{"_index":579,"title":{},"body":{"components/HeaderComponent.html":{}}}],["necessary",{"_index":362,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["need",{"_index":483,"title":{},"body":{"components/AuthComponent.html":{}}}],["new",{"_index":142,"title":{},"body":{"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"injectables/ArticlesService.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/HeaderComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["next",{"_index":258,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["next(apireq",{"_index":1106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(req).pipe(catcherror((err",{"_index":1117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(request",{"_index":1123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng",{"_index":953,"title":{},"body":{"index.html":{}}}],["ngclass",{"_index":146,"title":{},"body":{"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/HomeComponent.html":{}}}],["ngforof",{"_index":147,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/EditorComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{}}}],["ngif",{"_index":106,"title":{},"body":{"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/HeaderComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileComponent.html":{}}}],["ngoninit",{"_index":163,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["noninfringement",{"_index":1076,"title":{},"body":{"license.html":{}}}],["nonnullable",{"_index":192,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["not_loaded",{"_index":873,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notice",{"_index":1060,"title":{},"body":{"license.html":{}}}],["null",{"_index":129,"title":{},"body":{"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{},"components/ListErrorsComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["number",{"_index":99,"title":{},"body":{"interfaces/Article.html":{},"components/ArticleListComponent.html":{},"interfaces/ArticleListConfig.html":{},"components/FooterComponent.html":{}}}],["object",{"_index":594,"title":{},"body":{"components/HomeComponent.html":{}}}],["object.keys(config.filters).foreach((key",{"_index":434,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["object.keys(errorlist.errors",{"_index":670,"title":{},"body":{"components/ListErrorsComponent.html":{}}}],["observable",{"_index":413,"title":{},"body":{"injectables/ArticlesService.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"injectables/CommentsService.html":{},"injectables/ProfileService.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}}}],["observable.pipe(takeuntildestroyed(this.destroyref)).subscribe",{"_index":481,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthForm.html":{}}}],["obtaining",{"_index":1040,"title":{},"body":{"license.html":{}}}],["offset",{"_index":360,"title":{},"body":{"components/ArticleListComponent.html":{},"interfaces/ArticleListConfig.html":{}}}],["one",{"_index":376,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["oninit",{"_index":145,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["ontogglefavorite",{"_index":164,"title":{},"body":{"components/ArticleComponent.html":{}}}],["ontogglefavorite(favorited",{"_index":184,"title":{},"body":{"components/ArticleComponent.html":{}}}],["ontogglefollowing",{"_index":713,"title":{},"body":{"components/ProfileComponent.html":{}}}],["ontogglefollowing(profile",{"_index":716,"title":{},"body":{"components/ProfileComponent.html":{}}}],["operations",{"_index":903,"title":{},"body":{"index.html":{}}}],["optional",{"_index":175,"title":{},"body":{"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticlePreviewComponent.html":{},"injectables/ArticlesService.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"injectables/CommentsService.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"injectables/JwtService.html":{},"components/ListErrorsComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"injectables/ProfileService.html":{},"components/SettingsComponent.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["oss",{"_index":565,"title":{},"body":{"components/FooterComponent.html":{}}}],["otherwise",{"_index":615,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["out",{"_index":1089,"title":{},"body":{"license.html":{}}}],["output",{"_index":134,"title":{},"body":{"components/ArticleCommentComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{}}}],["outputs",{"_index":117,"title":{},"body":{"components/ArticleCommentComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{}}}],["over",{"_index":430,"title":{},"body":{"injectables/ArticlesService.html":{},"index.html":{}}}],["overview",{"_index":971,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":848,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"index.html":{}}}],["page'},{'name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{}}}],["pagenumber",{"_index":318,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["pages",{"_index":993,"title":{},"body":{"index.html":{}}}],["paginated",{"_index":1000,"title":{},"body":{"index.html":{}}}],["pagination",{"_index":906,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":174,"title":{},"body":{"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticlePreviewComponent.html":{},"injectables/ArticlesService.html":{},"components/AuthComponent.html":{},"injectables/CommentsService.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"injectables/JwtService.html":{},"components/ListErrorsComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"injectables/ProfileService.html":{},"components/SettingsComponent.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":433,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["params.set(key",{"_index":437,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["partial",{"_index":411,"title":{},"body":{"injectables/ArticlesService.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"injectables/UserService.html":{}}}],["particular",{"_index":1074,"title":{},"body":{"license.html":{}}}],["password",{"_index":467,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"injectables/UserService.html":{}}}],["patterns",{"_index":887,"title":{},"body":{"index.html":{}}}],["payload",{"_index":490,"title":{},"body":{"injectables/CommentsService.html":{}}}],["permission",{"_index":1034,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1054,"title":{},"body":{"license.html":{}}}],["person",{"_index":1039,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1055,"title":{},"body":{"license.html":{}}}],["pill",{"_index":626,"title":{},"body":{"components/HomeComponent.html":{}}}],["pipe",{"_index":231,"title":{"pipes/MarkdownPipe.html":{}},"body":{"components/ArticleComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/HomeComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ProfileComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(distinctuntilchanged",{"_index":799,"title":{},"body":{"injectables/UserService.html":{}}}],["pipe(map((data",{"_index":444,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CommentsService.html":{},"injectables/ProfileService.html":{},"injectables/TagsService.html":{}}}],["pipe(takeuntildestroyed(this.destroyref",{"_index":251,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"components/EditorComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["pipe(tap",{"_index":599,"title":{},"body":{"components/HomeComponent.html":{},"injectables/UserService.html":{}}}],["pipes",{"_index":672,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["pipetransform",{"_index":683,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["place",{"_index":617,"title":{},"body":{"components/HomeComponent.html":{}}}],["pointer",{"_index":311,"title":{},"body":{"components/ArticleListComponent.html":{},"components/HomeComponent.html":{}}}],["popular",{"_index":623,"title":{},"body":{"components/HomeComponent.html":{}}}],["populated",{"_index":1027,"title":{},"body":{"index.html":{}}}],["portions",{"_index":1064,"title":{},"body":{"license.html":{}}}],["post",{"_index":274,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{}}}],["post(\"/articles",{"_index":447,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["post(\"/profiles",{"_index":752,"title":{},"body":{"injectables/ProfileService.html":{}}}],["post(\"/users",{"_index":810,"title":{},"body":{"injectables/UserService.html":{}}}],["post(\"/users/login",{"_index":808,"title":{},"body":{"injectables/UserService.html":{}}}],["post(`/articles/${slug}/comments",{"_index":499,"title":{},"body":{"injectables/CommentsService.html":{}}}],["post(`/articles/${slug}/favorite",{"_index":449,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["posts",{"_index":728,"title":{},"body":{"components/ProfileComponent.html":{}}}],["practices",{"_index":914,"title":{},"body":{"index.html":{}}}],["preview",{"_index":395,"title":{},"body":{"components/ArticlePreviewComponent.html":{}}}],["preview'},{'name",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{}}}],["preview.component",{"_index":349,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["preview.component.ts",{"_index":394,"title":{},"body":{"components/ArticlePreviewComponent.html":{},"coverage.html":{}}}],["preview.component.ts:40",{"_index":400,"title":{},"body":{"components/ArticlePreviewComponent.html":{}}}],["preview.component.ts:42",{"_index":402,"title":{},"body":{"components/ArticlePreviewComponent.html":{}}}],["private",{"_index":224,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"injectables/UserService.html":{}}}],["prod",{"_index":968,"title":{},"body":{"index.html":{}}}],["production",{"_index":970,"title":{},"body":{"index.html":{}}}],["profile",{"_index":67,"title":{"interfaces/Profile.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Article.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"interfaces/Comment.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"interfaces/Profile.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"injectables/ProfileService.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"index.html":{}}}],["profile.bio",{"_index":727,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.html",{"_index":711,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.following",{"_index":247,"title":{},"body":{"components/ArticleComponent.html":{},"components/FollowButtonComponent.html":{}}}],["profile.username",{"_index":537,"title":{},"body":{"components/FollowButtonComponent.html":{},"components/ProfileComponent.html":{}}}],["profile/:username",{"_index":1023,"title":{},"body":{"index.html":{}}}],["profile/:username/favorites",{"_index":1024,"title":{},"body":{"index.html":{}}}],["profile/components/follow",{"_index":223,"title":{},"body":{"components/ArticleComponent.html":{}}}],["profile/models/profile.model",{"_index":100,"title":{},"body":{"interfaces/Article.html":{},"components/ArticleComponent.html":{},"interfaces/Comment.html":{}}}],["profilearticlescomponent",{"_index":66,"title":{"components/ProfileArticlesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["profilecomponent",{"_index":69,"title":{"components/ProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["profilefavoritescomponent",{"_index":70,"title":{"components/ProfileFavoritesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["profileservice",{"_index":539,"title":{"injectables/ProfileService.html":{}},"body":{"components/FollowButtonComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["project",{"_index":563,"title":{},"body":{"components/FooterComponent.html":{},"index.html":{}}}],["promise",{"_index":679,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["properties",{"_index":85,"title":{"properties.html":{}},"body":{"interfaces/Article.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"interfaces/ArticleListConfig.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"interfaces/Comment.html":{},"components/EditorComponent.html":{},"interfaces/Errors.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"components/ListErrorsComponent.html":{},"pipes/MarkdownPipe.html":{},"interfaces/Profile.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["provide",{"_index":1112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":1065,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":428,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CommentsService.html":{},"injectables/JwtService.html":{},"injectables/ProfileService.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}}}],["providehttpclient",{"_index":1110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":1109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":779,"title":{},"body":{"injectables/UserService.html":{}}}],["publish",{"_index":515,"title":{},"body":{"components/EditorComponent.html":{},"license.html":{}}}],["pulled",{"_index":1005,"title":{},"body":{"index.html":{}}}],["purgeauth",{"_index":782,"title":{},"body":{"injectables/UserService.html":{}}}],["purpose",{"_index":1075,"title":{},"body":{"license.html":{}}}],["put(`/articles/${article.slug",{"_index":448,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["query",{"_index":322,"title":{},"body":{"components/ArticleListComponent.html":{},"injectables/ArticlesService.html":{}}}],["query(config",{"_index":420,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["query(this.query",{"_index":367,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["range",{"_index":372,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["reactiveformsmodule",{"_index":150,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["read",{"_index":397,"title":{},"body":{"components/ArticlePreviewComponent.html":{}}}],["readonly",{"_index":225,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"injectables/ArticlesService.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"injectables/CommentsService.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/HomeComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"injectables/ProfileService.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}}}],["real",{"_index":882,"title":{},"body":{"index.html":{}}}],["realworld",{"_index":564,"title":{},"body":{"components/FooterComponent.html":{},"index.html":{}}}],["recommend",{"_index":947,"title":{},"body":{"index.html":{}}}],["recreate",{"_index":921,"title":{},"body":{"index.html":{}}}],["redirect",{"_index":614,"title":{},"body":{"components/HomeComponent.html":{}}}],["register",{"_index":476,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"injectables/UserService.html":{},"index.html":{}}}],["register(credentials",{"_index":791,"title":{},"body":{"injectables/UserService.html":{}}}],["released",{"_index":931,"title":{},"body":{"index.html":{}}}],["reload",{"_index":959,"title":{},"body":{"index.html":{}}}],["removetag",{"_index":502,"title":{},"body":{"components/EditorComponent.html":{}}}],["removetag(tagname",{"_index":507,"title":{},"body":{"components/EditorComponent.html":{}}}],["render",{"_index":1017,"title":{},"body":{"index.html":{}}}],["req",{"_index":1102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.clone",{"_index":1104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":1120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requested",{"_index":613,"title":{},"body":{"components/HomeComponent.html":{}}}],["requests",{"_index":982,"title":{},"body":{"index.html":{}}}],["required",{"_index":996,"title":{},"body":{"index.html":{}}}],["resolve",{"_index":950,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":1045,"title":{},"body":{"license.html":{}}}],["results",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Article.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"interfaces/ArticleListConfig.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"injectables/ArticlesService.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"interfaces/Comment.html":{},"injectables/CommentsService.html":{},"components/EditorComponent.html":{},"interfaces/Errors.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"injectables/JwtService.html":{},"components/ListErrorsComponent.html":{},"pipes/MarkdownPipe.html":{},"interfaces/Profile.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"injectables/ProfileService.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"injectables/TagsService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":290,"title":{},"body":{"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{}}}],["return",{"_index":234,"title":{},"body":{"components/ArticleComponent.html":{},"injectables/ArticlesService.html":{},"injectables/CommentsService.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"pipes/MarkdownPipe.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":178,"title":{},"body":{"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticlePreviewComponent.html":{},"injectables/ArticlesService.html":{},"components/AuthComponent.html":{},"injectables/CommentsService.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"injectables/JwtService.html":{},"components/ListErrorsComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"injectables/ProfileService.html":{},"components/SettingsComponent.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}}}],["rights",{"_index":1047,"title":{},"body":{"license.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArticlesService.html":{},"injectables/CommentsService.html":{},"injectables/JwtService.html":{},"injectables/ProfileService.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{}}}],["route",{"_index":176,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{}}}],["router",{"_index":172,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"injectables/UserService.html":{}}}],["routerlink",{"_index":104,"title":{},"body":{"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ProfileComponent.html":{}}}],["routerlinkactive",{"_index":572,"title":{},"body":{"components/HeaderComponent.html":{},"components/ProfileComponent.html":{}}}],["routeroutlet",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileComponent.html":{}}}],["routing",{"_index":905,"title":{},"body":{"index.html":{}}}],["run",{"_index":949,"title":{},"body":{"index.html":{}}}],["runquery",{"_index":323,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["rx",{"_index":607,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["rxjs",{"_index":214,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"injectables/ArticlesService.html":{},"injectables/CommentsService.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":139,"title":{},"body":{"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"injectables/ArticlesService.html":{},"injectables/CommentsService.html":{},"components/FollowButtonComponent.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}}}],["rxlet",{"_index":582,"title":{},"body":{"components/HomeComponent.html":{}}}],["savetoken",{"_index":653,"title":{},"body":{"injectables/JwtService.html":{}}}],["savetoken(token",{"_index":656,"title":{},"body":{"injectables/JwtService.html":{}}}],["scratch",{"_index":937,"title":{},"body":{"index.html":{}}}],["screencasts",{"_index":935,"title":{},"body":{"index.html":{}}}],["section",{"_index":1020,"title":{},"body":{"index.html":{}}}],["securitycontext",{"_index":684,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["sell",{"_index":1052,"title":{},"body":{"license.html":{}}}],["serve",{"_index":954,"title":{},"body":{"index.html":{}}}],["server",{"_index":901,"title":{},"body":{"index.html":{}}}],["services/articles.service",{"_index":203,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{}}}],["services/comments.service",{"_index":204,"title":{},"body":{"components/ArticleComponent.html":{}}}],["services/profile.service",{"_index":543,"title":{},"body":{"components/FollowButtonComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{}}}],["services/tags.service",{"_index":604,"title":{},"body":{"components/HomeComponent.html":{}}}],["services/user.service",{"_index":465,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"directives/IfAuthenticatedDirective.html":{}}}],["session/cookie",{"_index":1010,"title":{},"body":{"index.html":{}}}],["set",{"_index":352,"title":{},"body":{"components/ArticleListComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"components/ListErrorsComponent.html":{}}}],["setauth",{"_index":783,"title":{},"body":{"injectables/UserService.html":{}}}],["setauth(user",{"_index":793,"title":{},"body":{"injectables/UserService.html":{}}}],["setconfig(config",{"_index":346,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["seterrors(errorlist",{"_index":667,"title":{},"body":{"components/ListErrorsComponent.html":{}}}],["setheaders",{"_index":1121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setifauthenticated(condition",{"_index":640,"title":{},"body":{"directives/IfAuthenticatedDirective.html":{}}}],["setlistto",{"_index":589,"title":{},"body":{"components/HomeComponent.html":{}}}],["setlistto(type",{"_index":593,"title":{},"body":{"components/HomeComponent.html":{}}}],["setpageto",{"_index":324,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["setpageto(pagenumber",{"_index":334,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["settings",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"index.html":{}}}],["settings.component.html",{"_index":755,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["settingscomponent",{"_index":72,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"coverage.html":{}}}],["settingsform",{"_index":756,"title":{"interfaces/SettingsForm.html":{}},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"coverage.html":{}}}],["shall",{"_index":1061,"title":{},"body":{"license.html":{}}}],["share",{"_index":618,"title":{},"body":{"components/HomeComponent.html":{}}}],["shared/components/list",{"_index":208,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["shared/pipes/markdown.pipe",{"_index":207,"title":{},"body":{"components/ArticleComponent.html":{}}}],["sharereplay",{"_index":746,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["sharereplay(1",{"_index":751,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["show",{"_index":1025,"title":{},"body":{"index.html":{}}}],["shown",{"_index":1015,"title":{},"body":{"index.html":{}}}],["side",{"_index":1019,"title":{},"body":{"index.html":{}}}],["sign",{"_index":275,"title":{},"body":{"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/HeaderComponent.html":{},"index.html":{}}}],["single",{"_index":299,"title":{},"body":{"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{}}}],["site",{"_index":975,"title":{},"body":{"index.html":{}}}],["slug",{"_index":92,"title":{},"body":{"interfaces/Article.html":{},"components/ArticleComponent.html":{},"injectables/ArticlesService.html":{},"injectables/CommentsService.html":{},"index.html":{}}}],["social",{"_index":973,"title":{},"body":{"index.html":{}}}],["software",{"_index":1041,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Article.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"interfaces/ArticleListConfig.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"injectables/ArticlesService.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"interfaces/Comment.html":{},"injectables/CommentsService.html":{},"components/EditorComponent.html":{},"interfaces/Errors.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"injectables/JwtService.html":{},"components/ListErrorsComponent.html":{},"pipes/MarkdownPipe.html":{},"interfaces/Profile.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"injectables/ProfileService.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"injectables/TagsService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["spec",{"_index":890,"title":{},"body":{"index.html":{}}}],["src/.../api.interceptor.ts",{"_index":1098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":876,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../error.interceptor.ts",{"_index":1099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../loading",{"_index":870,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../token.interceptor.ts",{"_index":1100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.config.ts",{"_index":823,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/auth/auth.component.ts",{"_index":451,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"coverage.html":{}}}],["src/app/core/auth/auth.component.ts:28",{"_index":459,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/core/auth/auth.component.ts:29",{"_index":462,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/core/auth/auth.component.ts:30",{"_index":460,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/core/auth/auth.component.ts:31",{"_index":461,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/core/auth/auth.component.ts:32",{"_index":458,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/core/auth/auth.component.ts:33",{"_index":455,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/core/auth/auth.component.ts:52",{"_index":456,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/core/auth/auth.component.ts:66",{"_index":457,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/core/auth/if",{"_index":627,"title":{},"body":{"directives/IfAuthenticatedDirective.html":{},"coverage.html":{}}}],["src/app/core/auth/services/jwt.service.ts",{"_index":650,"title":{},"body":{"injectables/JwtService.html":{},"coverage.html":{}}}],["src/app/core/auth/services/jwt.service.ts:13",{"_index":654,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/app/core/auth/services/jwt.service.ts:5",{"_index":655,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/app/core/auth/services/jwt.service.ts:9",{"_index":657,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/app/core/auth/services/user.service.ts",{"_index":778,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/auth/services/user.service.ts:12",{"_index":802,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/auth/services/user.service.ts:13",{"_index":800,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/auth/services/user.service.ts:17",{"_index":784,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/auth/services/user.service.ts:25",{"_index":787,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/auth/services/user.service.ts:34",{"_index":792,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/auth/services/user.service.ts:44",{"_index":789,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/auth/services/user.service.ts:49",{"_index":785,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/auth/services/user.service.ts:59",{"_index":796,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/auth/services/user.service.ts:67",{"_index":794,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/auth/services/user.service.ts:72",{"_index":790,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/auth/user.model.ts",{"_index":777,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/core/interceptors/api.interceptor.ts",{"_index":833,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interceptors/error.interceptor.ts",{"_index":835,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interceptors/token.interceptor.ts",{"_index":837,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/layout/footer.component.ts",{"_index":552,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/core/layout/footer.component.ts:13",{"_index":557,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/core/layout/header.component.ts",{"_index":570,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/core/layout/header.component.ts:20",{"_index":575,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/models/errors.model.ts",{"_index":516,"title":{},"body":{"interfaces/Errors.html":{},"coverage.html":{}}}],["src/app/core/models/loading",{"_index":872,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/features/article/components/article",{"_index":101,"title":{},"body":{"components/ArticleCommentComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"coverage.html":{}}}],["src/app/features/article/components/favorite",{"_index":518,"title":{},"body":{"components/FavoriteButtonComponent.html":{},"coverage.html":{}}}],["src/app/features/article/models/article",{"_index":383,"title":{},"body":{"interfaces/ArticleListConfig.html":{},"coverage.html":{}}}],["src/app/features/article/models/article.model.ts",{"_index":83,"title":{},"body":{"interfaces/Article.html":{},"coverage.html":{}}}],["src/app/features/article/models/comment.model.ts",{"_index":484,"title":{},"body":{"interfaces/Comment.html":{},"coverage.html":{}}}],["src/app/features/article/pages/article/article.component.ts",{"_index":143,"title":{},"body":{"components/ArticleComponent.html":{},"coverage.html":{}}}],["src/app/features/article/pages/article/article.component.ts:102",{"_index":180,"title":{},"body":{"components/ArticleComponent.html":{}}}],["src/app/features/article/pages/article/article.component.ts:113",{"_index":177,"title":{},"body":{"components/ArticleComponent.html":{}}}],["src/app/features/article/pages/article/article.component.ts:133",{"_index":182,"title":{},"body":{"components/ArticleComponent.html":{}}}],["src/app/features/article/pages/article/article.component.ts:46",{"_index":188,"title":{},"body":{"components/ArticleComponent.html":{}}}],["src/app/features/article/pages/article/article.component.ts:47",{"_index":197,"title":{},"body":{"components/ArticleComponent.html":{}}}],["src/app/features/article/pages/article/article.component.ts:48",{"_index":196,"title":{},"body":{"components/ArticleComponent.html":{}}}],["src/app/features/article/pages/article/article.component.ts:49",{"_index":190,"title":{},"body":{"components/ArticleComponent.html":{}}}],["src/app/features/article/pages/article/article.component.ts:51",{"_index":193,"title":{},"body":{"components/ArticleComponent.html":{}}}],["src/app/features/article/pages/article/article.component.ts:52",{"_index":195,"title":{},"body":{"components/ArticleComponent.html":{}}}],["src/app/features/article/pages/article/article.component.ts:54",{"_index":200,"title":{},"body":{"components/ArticleComponent.html":{}}}],["src/app/features/article/pages/article/article.component.ts:55",{"_index":199,"title":{},"body":{"components/ArticleComponent.html":{}}}],["src/app/features/article/pages/article/article.component.ts:56",{"_index":173,"title":{},"body":{"components/ArticleComponent.html":{}}}],["src/app/features/article/pages/article/article.component.ts:66",{"_index":183,"title":{},"body":{"components/ArticleComponent.html":{}}}],["src/app/features/article/pages/article/article.component.ts:88",{"_index":185,"title":{},"body":{"components/ArticleComponent.html":{}}}],["src/app/features/article/pages/article/article.component.ts:98",{"_index":187,"title":{},"body":{"components/ArticleComponent.html":{}}}],["src/app/features/article/pages/editor/editor.component.ts",{"_index":279,"title":{},"body":{"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{},"coverage.html":{}}}],["src/app/features/article/pages/editor/editor.component.ts:30",{"_index":514,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/features/article/pages/editor/editor.component.ts:31",{"_index":510,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/features/article/pages/editor/editor.component.ts:36",{"_index":513,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/features/article/pages/editor/editor.component.ts:38",{"_index":511,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/features/article/pages/editor/editor.component.ts:39",{"_index":512,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/features/article/pages/editor/editor.component.ts:40",{"_index":504,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/features/article/pages/editor/editor.component.ts:49",{"_index":506,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/features/article/pages/editor/editor.component.ts:67",{"_index":505,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/features/article/pages/editor/editor.component.ts:78",{"_index":508,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/features/article/pages/editor/editor.component.ts:82",{"_index":509,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/features/article/pages/home/home.component.ts",{"_index":581,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/features/article/pages/home/home.component.ts:28",{"_index":596,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/article/pages/home/home.component.ts:29",{"_index":597,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/article/pages/home/home.component.ts:33",{"_index":601,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/article/pages/home/home.component.ts:36",{"_index":602,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/article/pages/home/home.component.ts:37",{"_index":591,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/article/pages/home/home.component.ts:44",{"_index":592,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/article/pages/home/home.component.ts:61",{"_index":595,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/article/services/articles.service.ts",{"_index":405,"title":{},"body":{"injectables/ArticlesService.html":{},"coverage.html":{}}}],["src/app/features/article/services/articles.service.ts:12",{"_index":421,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/app/features/article/services/articles.service.ts:29",{"_index":419,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/app/features/article/services/articles.service.ts:35",{"_index":415,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/app/features/article/services/articles.service.ts:39",{"_index":412,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/app/features/article/services/articles.service.ts:45",{"_index":425,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/app/features/article/services/articles.service.ts:53",{"_index":417,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/app/features/article/services/articles.service.ts:59",{"_index":423,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/app/features/article/services/articles.service.ts:9",{"_index":408,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/app/features/article/services/comments.service.ts",{"_index":486,"title":{},"body":{"injectables/CommentsService.html":{},"coverage.html":{}}}],["src/app/features/article/services/comments.service.ts:11",{"_index":496,"title":{},"body":{"injectables/CommentsService.html":{}}}],["src/app/features/article/services/comments.service.ts:17",{"_index":491,"title":{},"body":{"injectables/CommentsService.html":{}}}],["src/app/features/article/services/comments.service.ts:25",{"_index":493,"title":{},"body":{"injectables/CommentsService.html":{}}}],["src/app/features/article/services/comments.service.ts:8",{"_index":488,"title":{},"body":{"injectables/CommentsService.html":{}}}],["src/app/features/article/services/tags.service.ts",{"_index":772,"title":{},"body":{"injectables/TagsService.html":{},"coverage.html":{}}}],["src/app/features/article/services/tags.service.ts:10",{"_index":774,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/app/features/article/services/tags.service.ts:7",{"_index":773,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/app/features/profile/components/follow",{"_index":535,"title":{},"body":{"components/FollowButtonComponent.html":{},"coverage.html":{}}}],["src/app/features/profile/components/profile",{"_index":696,"title":{},"body":{"components/ProfileArticlesComponent.html":{},"components/ProfileFavoritesComponent.html":{},"coverage.html":{}}}],["src/app/features/profile/models/profile.model.ts",{"_index":692,"title":{},"body":{"interfaces/Profile.html":{},"coverage.html":{}}}],["src/app/features/profile/pages/profile/profile.component.ts",{"_index":710,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/features/profile/pages/profile/profile.component.ts:33",{"_index":719,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/pages/profile/profile.component.ts:34",{"_index":718,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/pages/profile/profile.component.ts:35",{"_index":714,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/pages/profile/profile.component.ts:44",{"_index":715,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/pages/profile/profile.component.ts:63",{"_index":717,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/services/profile.service.ts",{"_index":738,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/app/features/profile/services/profile.service.ts:11",{"_index":743,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/features/profile/services/profile.service.ts:18",{"_index":741,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/features/profile/services/profile.service.ts:24",{"_index":745,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/features/profile/services/profile.service.ts:8",{"_index":739,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/features/settings/settings.component.ts",{"_index":754,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"coverage.html":{}}}],["src/app/features/settings/settings.component.ts:30",{"_index":765,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/features/settings/settings.component.ts:31",{"_index":764,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/features/settings/settings.component.ts:41",{"_index":762,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/features/settings/settings.component.ts:42",{"_index":763,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/features/settings/settings.component.ts:43",{"_index":758,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/features/settings/settings.component.ts:50",{"_index":760,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/features/settings/settings.component.ts:56",{"_index":759,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/features/settings/settings.component.ts:60",{"_index":761,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/shared/components/list",{"_index":661,"title":{},"body":{"components/ListErrorsComponent.html":{},"coverage.html":{}}}],["src/app/shared/pipes/markdown.pipe.ts",{"_index":673,"title":{},"body":{"pipes/MarkdownPipe.html":{},"coverage.html":{}}}],["src/app/shared/pipes/markdown.pipe.ts:10",{"_index":677,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["src/app/shared/pipes/markdown.pipe.ts:9",{"_index":682,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["standalone",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"components/ListErrorsComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["started",{"_index":879,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["state.model",{"_index":351,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["state.model.ts",{"_index":871,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statements",{"_index":821,"title":{},"body":{"coverage.html":{}}}],["step",{"_index":932,"title":{},"body":{"index.html":{}}}],["store",{"_index":1007,"title":{},"body":{"index.html":{}}}],["stored",{"_index":965,"title":{},"body":{"index.html":{}}}],["straightforward",{"_index":930,"title":{},"body":{"index.html":{}}}],["string",{"_index":97,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticleForm.html":{},"interfaces/ArticleListConfig.html":{},"injectables/ArticlesService.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"interfaces/Comment.html":{},"injectables/CommentsService.html":{},"components/EditorComponent.html":{},"interfaces/Errors.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"components/ListErrorsComponent.html":{},"pipes/MarkdownPipe.html":{},"interfaces/Profile.html":{},"injectables/ProfileService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["strongly",{"_index":946,"title":{},"body":{"index.html":{}}}],["styleguide",{"_index":912,"title":{},"body":{"index.html":{}}}],["styles",{"_index":307,"title":{},"body":{"components/ArticleListComponent.html":{},"components/HomeComponent.html":{}}}],["styleurls",{"_index":583,"title":{},"body":{"components/HomeComponent.html":{}}}],["subject",{"_index":1057,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1051,"title":{},"body":{"license.html":{}}}],["submitform",{"_index":297,"title":{},"body":{"interfaces/ArticleForm.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["subscribe",{"_index":252,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/HomeComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["subscribe(([article",{"_index":237,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{}}}],["subscribe(([profile",{"_index":724,"title":{},"body":{"components/ProfileComponent.html":{}}}],["subscribe((data",{"_index":368,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["subscribe((isauthenticated",{"_index":641,"title":{},"body":{"directives/IfAuthenticatedDirective.html":{}}}],["substantial",{"_index":1063,"title":{},"body":{"license.html":{}}}],["sure",{"_index":939,"title":{},"body":{"index.html":{}}}],["switched",{"_index":1009,"title":{},"body":{"index.html":{}}}],["switchmap",{"_index":527,"title":{},"body":{"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/ProfileComponent.html":{}}}],["switchmap((authenticated",{"_index":529,"title":{},"body":{"components/FavoriteButtonComponent.html":{}}}],["switchmap((isauthenticated",{"_index":545,"title":{},"body":{"components/FollowButtonComponent.html":{}}}],["switchmap((profile",{"_index":722,"title":{},"body":{"components/ProfileComponent.html":{}}}],["table",{"_index":847,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":846,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":271,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"interfaces/ArticleListConfig.html":{},"components/ArticlePreviewComponent.html":{},"components/EditorComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["tag.trim",{"_index":294,"title":{},"body":{"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{}}}],["tagfield",{"_index":283,"title":{},"body":{"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{}}}],["taglist",{"_index":93,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{}}}],["tagname",{"_index":296,"title":{},"body":{"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{}}}],["tags",{"_index":587,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["tagsloaded",{"_index":588,"title":{},"body":{"components/HomeComponent.html":{}}}],["tagsservice",{"_index":603,"title":{"injectables/TagsService.html":{}},"body":{"components/HomeComponent.html":{},"injectables/TagsService.html":{},"coverage.html":{}}}],["take",{"_index":951,"title":{},"body":{"index.html":{}}}],["takeuntildestroyed",{"_index":218,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["takeuntildestroyed(this.destroyref",{"_index":236,"title":{},"body":{"components/ArticleComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["tap",{"_index":606,"title":{},"body":{"components/HomeComponent.html":{},"injectables/UserService.html":{}}}],["tap((isauthenticated",{"_index":609,"title":{},"body":{"components/HomeComponent.html":{}}}],["teaches",{"_index":936,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{}}}],["templateref",{"_index":632,"title":{},"body":{"directives/IfAuthenticatedDirective.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["thinkster",{"_index":1033,"title":{},"body":{"license.html":{}}}],["this.addtag",{"_index":300,"title":{},"body":{"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{}}}],["this.article",{"_index":238,"title":{},"body":{"components/ArticleComponent.html":{}}}],["this.article.author.following",{"_index":246,"title":{},"body":{"components/ArticleComponent.html":{}}}],["this.article.favorited",{"_index":244,"title":{},"body":{"components/ArticleComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/FavoriteButtonComponent.html":{}}}],["this.article.favoritescount",{"_index":245,"title":{},"body":{"components/ArticleComponent.html":{},"components/ArticlePreviewComponent.html":{}}}],["this.article.slug",{"_index":263,"title":{},"body":{"components/ArticleComponent.html":{}}}],["this.articleform.patchvalue(article",{"_index":288,"title":{},"body":{"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{}}}],["this.articleform.value",{"_index":303,"title":{},"body":{"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{}}}],["this.articlesconfig",{"_index":708,"title":{},"body":{"components/ProfileArticlesComponent.html":{}}}],["this.articleservice",{"_index":249,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{}}}],["this.articleservice.favorite(this.article.slug",{"_index":532,"title":{},"body":{"components/FavoriteButtonComponent.html":{}}}],["this.articleservice.get(slug",{"_index":228,"title":{},"body":{"components/ArticleComponent.html":{}}}],["this.articleservice.get(this.route.snapshot.params[\"slug",{"_index":284,"title":{},"body":{"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{}}}],["this.articleservice.unfavorite(this.article.slug",{"_index":533,"title":{},"body":{"components/FavoriteButtonComponent.html":{}}}],["this.articlesservice",{"_index":366,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["this.authform",{"_index":469,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthForm.html":{}}}],["this.authform.addcontrol",{"_index":477,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthForm.html":{}}}],["this.authform.value",{"_index":479,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthForm.html":{}}}],["this.authtype",{"_index":471,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthForm.html":{}}}],["this.canmodify",{"_index":241,"title":{},"body":{"components/ArticleComponent.html":{}}}],["this.comment.author.username",{"_index":131,"title":{},"body":{"components/ArticleCommentComponent.html":{}}}],["this.commentcontrol.reset",{"_index":260,"title":{},"body":{"components/ArticleComponent.html":{}}}],["this.commentcontrol.value",{"_index":257,"title":{},"body":{"components/ArticleComponent.html":{}}}],["this.commentformerrors",{"_index":254,"title":{},"body":{"components/ArticleComponent.html":{}}}],["this.comments",{"_index":239,"title":{},"body":{"components/ArticleComponent.html":{}}}],["this.comments.filter((item",{"_index":264,"title":{},"body":{"components/ArticleComponent.html":{}}}],["this.comments.unshift(comment",{"_index":259,"title":{},"body":{"components/ArticleComponent.html":{}}}],["this.commentsservice",{"_index":255,"title":{},"body":{"components/ArticleComponent.html":{}}}],["this.commentsservice.getall(slug",{"_index":229,"title":{},"body":{"components/ArticleComponent.html":{}}}],["this.condition",{"_index":643,"title":{},"body":{"directives/IfAuthenticatedDirective.html":{}}}],["this.currentpage",{"_index":355,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["this.currentuser",{"_index":240,"title":{},"body":{"components/ArticleComponent.html":{}}}],["this.currentuser.pipe(map((user",{"_index":803,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentusersubject",{"_index":797,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentusersubject.next(null",{"_index":817,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentusersubject.next(user",{"_index":814,"title":{},"body":{"injectables/UserService.html":{}}}],["this.domsanitizer.sanitize(securitycontext.html",{"_index":690,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["this.errorlist",{"_index":669,"title":{},"body":{"components/ListErrorsComponent.html":{}}}],["this.errors",{"_index":306,"title":{},"body":{"interfaces/ArticleForm.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["this.favoritesconfig",{"_index":737,"title":{},"body":{"components/ProfileFavoritesComponent.html":{}}}],["this.hasview",{"_index":645,"title":{},"body":{"directives/IfAuthenticatedDirective.html":{}}}],["this.http",{"_index":442,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CommentsService.html":{},"injectables/ProfileService.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}}}],["this.http.delete(`/articles/${slug",{"_index":446,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["this.http.delete(`/articles/${slug}/comments/${commentid",{"_index":501,"title":{},"body":{"injectables/CommentsService.html":{}}}],["this.http.delete(`/articles/${slug}/favorite",{"_index":450,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["this.http.get",{"_index":439,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["this.http.get(\"/profiles",{"_index":747,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.http.get(\"/user\").pipe",{"_index":812,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.put(\"/user",{"_index":813,"title":{},"body":{"injectables/UserService.html":{}}}],["this.isauthenticated",{"_index":612,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.isdeleting",{"_index":248,"title":{},"body":{"components/ArticleComponent.html":{}}}],["this.issubmitting",{"_index":253,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["this.isuser",{"_index":725,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.jwtservice.destroytoken",{"_index":816,"title":{},"body":{"injectables/UserService.html":{}}}],["this.jwtservice.savetoken(user.token",{"_index":815,"title":{},"body":{"injectables/UserService.html":{}}}],["this.limit",{"_index":363,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["this.listconfig",{"_index":616,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.loading",{"_index":358,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["this.profile",{"_index":707,"title":{},"body":{"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{}}}],["this.profile.following",{"_index":548,"title":{},"body":{"components/FollowButtonComponent.html":{}}}],["this.profile.username",{"_index":709,"title":{},"body":{"components/ProfileArticlesComponent.html":{},"components/ProfileFavoritesComponent.html":{}}}],["this.profileservice",{"_index":705,"title":{},"body":{"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{}}}],["this.profileservice.follow(this.profile.username",{"_index":549,"title":{},"body":{"components/FollowButtonComponent.html":{}}}],["this.profileservice.unfollow(this.profile.username",{"_index":550,"title":{},"body":{"components/FollowButtonComponent.html":{}}}],["this.purgeauth",{"_index":811,"title":{},"body":{"injectables/UserService.html":{}}}],["this.query",{"_index":354,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["this.query.filters.limit",{"_index":364,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["this.query.filters.offset",{"_index":365,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["this.results",{"_index":359,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["this.route.snapshot.params[\"slug",{"_index":227,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{}}}],["this.route.snapshot.url.at",{"_index":472,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthForm.html":{}}}],["this.router.navigate",{"_index":233,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/ProfileComponent.html":{},"injectables/UserService.html":{}}}],["this.router.navigate([\"/article",{"_index":304,"title":{},"body":{"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{}}}],["this.router.navigate([\"/login",{"_index":547,"title":{},"body":{"components/FollowButtonComponent.html":{},"components/HomeComponent.html":{}}}],["this.router.navigate([\"/profile",{"_index":770,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["this.router.navigate([\"/register",{"_index":531,"title":{},"body":{"components/FavoriteButtonComponent.html":{}}}],["this.runquery",{"_index":356,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["this.setauth(user",{"_index":809,"title":{},"body":{"injectables/UserService.html":{}}}],["this.setlistto(\"all",{"_index":611,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.setlistto(\"feed",{"_index":610,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.settingsform.patchvalue",{"_index":766,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["this.tagfield.value",{"_index":292,"title":{},"body":{"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{}}}],["this.taglist",{"_index":287,"title":{},"body":{"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{}}}],["this.taglist.indexof(tag",{"_index":295,"title":{},"body":{"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{}}}],["this.tagsloaded",{"_index":600,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.title",{"_index":474,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthForm.html":{}}}],["this.toggle.emit(!this.article.favorited",{"_index":534,"title":{},"body":{"components/FavoriteButtonComponent.html":{}}}],["this.toggle.emit(profile",{"_index":551,"title":{},"body":{"components/FollowButtonComponent.html":{}}}],["this.totalpages",{"_index":378,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["this.userservice",{"_index":768,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["this.userservice.currentuser",{"_index":230,"title":{},"body":{"components/ArticleComponent.html":{},"components/ProfileComponent.html":{}}}],["this.userservice.getcurrentuser",{"_index":285,"title":{},"body":{"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["this.userservice.isauthenticated",{"_index":528,"title":{},"body":{"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{}}}],["this.userservice.login",{"_index":478,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthForm.html":{}}}],["this.userservice.logout",{"_index":767,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["this.userservice.register",{"_index":480,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthForm.html":{}}}],["this.viewcontainer.clear",{"_index":647,"title":{},"body":{"directives/IfAuthenticatedDirective.html":{}}}],["this.viewcontainer.createembeddedview(this.templateref",{"_index":646,"title":{},"body":{"directives/IfAuthenticatedDirective.html":{}}}],["throwerror",{"_index":213,"title":{},"body":{"components/ArticleComponent.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["title",{"_index":94,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticleForm.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{}}}],["today",{"_index":555,"title":{},"body":{"components/FooterComponent.html":{}}}],["toggle",{"_index":521,"title":{},"body":{"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{}}}],["togglefavorite",{"_index":399,"title":{},"body":{"components/ArticlePreviewComponent.html":{},"components/FavoriteButtonComponent.html":{}}}],["togglefavorite(favorited",{"_index":401,"title":{},"body":{"components/ArticlePreviewComponent.html":{}}}],["togglefollowing",{"_index":165,"title":{},"body":{"components/ArticleComponent.html":{},"components/FollowButtonComponent.html":{}}}],["togglefollowing(profile",{"_index":186,"title":{},"body":{"components/ArticleComponent.html":{}}}],["token",{"_index":658,"title":{},"body":{"injectables/JwtService.html":{},"interfaces/User.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tokeninterceptor",{"_index":838,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":1087,"title":{},"body":{"license.html":{}}}],["totalpages",{"_index":319,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["track",{"_index":273,"title":{},"body":{"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/EditorComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{}}}],["transform",{"_index":675,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["transform(content",{"_index":676,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{}}}],["true",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"components/ListErrorsComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":435,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["tslib",{"_index":864,"title":{},"body":{"dependencies.html":{}}}],["tutorial",{"_index":933,"title":{},"body":{"index.html":{}}}],["type",{"_index":96,"title":{},"body":{"interfaces/Article.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"interfaces/ArticleListConfig.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"injectables/ArticlesService.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"interfaces/Comment.html":{},"injectables/CommentsService.html":{},"components/EditorComponent.html":{},"interfaces/Errors.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"injectables/JwtService.html":{},"components/ListErrorsComponent.html":{},"pipes/MarkdownPipe.html":{},"interfaces/Profile.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"injectables/ProfileService.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"injectables/TagsService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["unauthrequired",{"_index":644,"title":{},"body":{"directives/IfAuthenticatedDirective.html":{}}}],["under",{"_index":568,"title":{},"body":{"components/FooterComponent.html":{}}}],["unfavorite",{"_index":269,"title":{},"body":{"components/ArticleComponent.html":{},"injectables/ArticlesService.html":{}}}],["unfavorite(slug",{"_index":422,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["unfollow",{"_index":536,"title":{},"body":{"components/FollowButtonComponent.html":{},"injectables/ProfileService.html":{}}}],["unfollow(username",{"_index":744,"title":{},"body":{"injectables/ProfileService.html":{}}}],["untypedformgroup",{"_index":281,"title":{},"body":{"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{}}}],["up",{"_index":276,"title":{},"body":{"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/HeaderComponent.html":{},"index.html":{}}}],["update",{"_index":298,"title":{},"body":{"interfaces/ArticleForm.html":{},"injectables/ArticlesService.html":{},"components/EditorComponent.html":{},"components/SettingsComponent.html":{},"injectables/UserService.html":{}}}],["update(article",{"_index":424,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["update(this.settingsform.value",{"_index":769,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["update(user",{"_index":795,"title":{},"body":{"injectables/UserService.html":{}}}],["updatedat",{"_index":95,"title":{},"body":{"interfaces/Article.html":{}}}],["updating",{"_index":998,"title":{},"body":{"index.html":{}}}],["url",{"_index":1004,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["urlsearchparams",{"_index":432,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["use",{"_index":943,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":370,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["usefactory",{"_index":1114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":128,"title":{"interfaces/User.html":{}},"body":{"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["user.model",{"_index":807,"title":{},"body":{"injectables/UserService.html":{}}}],["user.username",{"_index":286,"title":{},"body":{"interfaces/ArticleForm.html":{},"components/EditorComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["user?.username",{"_index":726,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdata",{"_index":127,"title":{},"body":{"components/ArticleCommentComponent.html":{}}}],["userdata?.username",{"_index":130,"title":{},"body":{"components/ArticleCommentComponent.html":{}}}],["username",{"_index":468,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"interfaces/Profile.html":{},"injectables/ProfileService.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["username).pipe",{"_index":748,"title":{},"body":{"injectables/ProfileService.html":{}}}],["users",{"_index":989,"title":{},"body":{"index.html":{}}}],["userservice",{"_index":136,"title":{"injectables/UserService.html":{}},"body":{"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["uses",{"_index":980,"title":{},"body":{"index.html":{}}}],["using",{"_index":375,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["val",{"_index":381,"title":{},"body":{"components/ArticleListComponent.html":{}}}],["validators",{"_index":463,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["validators.required",{"_index":470,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["value",{"_index":124,"title":{},"body":{"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"components/ListErrorsComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleCommentComponent.html":{},"components/ArticleComponent.html":{},"components/ArticleListComponent.html":{},"components/ArticleMetaComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{}}}],["variable",{"_index":826,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1097,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":917,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":990,"title":{},"body":{"index.html":{}}}],["view",{"_index":983,"title":{},"body":{"index.html":{}}}],["viewcontainer",{"_index":633,"title":{},"body":{"directives/IfAuthenticatedDirective.html":{}}}],["viewcontainerref",{"_index":634,"title":{},"body":{"directives/IfAuthenticatedDirective.html":{}}}],["void",{"_index":179,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/ArticleForm.html":{},"components/ArticleListComponent.html":{},"components/ArticlePreviewComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthForm.html":{},"components/EditorComponent.html":{},"components/FavoriteButtonComponent.html":{},"components/FollowButtonComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthenticatedDirective.html":{},"injectables/JwtService.html":{},"components/ListErrorsComponent.html":{},"components/ProfileArticlesComponent.html":{},"components/ProfileComponent.html":{},"components/ProfileFavoritesComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"injectables/UserService.html":{}}}],["w",{"_index":934,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1071,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1066,"title":{},"body":{"license.html":{}}}],["we're",{"_index":923,"title":{},"body":{"index.html":{}}}],["we've",{"_index":907,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1084,"title":{},"body":{"license.html":{}}}],["window.localstorage.removeitem(\"jwttoken",{"_index":660,"title":{},"body":{"injectables/JwtService.html":{}}}],["window.localstorage[\"jwttoken",{"_index":659,"title":{},"body":{"injectables/JwtService.html":{}}}],["withinterceptors([apiinterceptor",{"_index":1111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":1044,"title":{},"body":{"license.html":{}}}],["working",{"_index":925,"title":{},"body":{"index.html":{}}}],["works",{"_index":922,"title":{},"body":{"index.html":{}}}],["world",{"_index":883,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":944,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":560,"title":{},"body":{"components/FooterComponent.html":{}}}],["zone.js",{"_index":866,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                HeaderComponent\n                            RouterOutlet\n                                FooterComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { HeaderComponent } from \"./core/layout/header.component\";\nimport { RouterOutlet } from \"@angular/router\";\nimport { FooterComponent } from \"./core/layout/footer.component\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  standalone: true,\n  imports: [HeaderComponent, RouterOutlet, FooterComponent],\n})\nexport class AppComponent {}\n\n    \n\n    \n        \n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleCommentComponent', 'selector': 'app-article-comment'},{'name': 'ArticleComponent', 'selector': 'app-article-page'},{'name': 'ArticleListComponent', 'selector': 'app-article-list'},{'name': 'ArticleMetaComponent', 'selector': 'app-article-meta'},{'name': 'ArticlePreviewComponent', 'selector': 'app-article-preview'},{'name': 'AuthComponent', 'selector': 'app-auth-page'},{'name': 'EditorComponent', 'selector': 'app-editor-page'},{'name': 'FavoriteButtonComponent', 'selector': 'app-favorite-button'},{'name': 'FollowButtonComponent', 'selector': 'app-follow-button'},{'name': 'FooterComponent', 'selector': 'app-layout-footer'},{'name': 'HeaderComponent', 'selector': 'app-layout-header'},{'name': 'HomeComponent', 'selector': 'app-home-page'},{'name': 'ListErrorsComponent', 'selector': 'app-list-errors'},{'name': 'ProfileArticlesComponent', 'selector': 'app-profile-articles'},{'name': 'ProfileComponent', 'selector': 'app-profile-page'},{'name': 'ProfileFavoritesComponent', 'selector': 'app-profile-favorites'},{'name': 'SettingsComponent', 'selector': 'app-settings-page'}];\n    var DIRECTIVES = [{'name': 'IfAuthenticatedDirective', 'selector': '[ifAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Article.html":{"url":"interfaces/Article.html","title":"interface - Article","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Article\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/article/models/article.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            author\n                                        \n                                \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            favorited\n                                        \n                                \n                                \n                                        \n                                            favoritesCount\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            tagList\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        author\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        author:         Profile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Profile\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        favorited\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        favorited:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        favoritesCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        favoritesCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tagList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tagList:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Profile } from \"../../profile/models/profile.model\";\n\nexport interface Article {\n  slug: string;\n  title: string;\n  description: string;\n  body: string;\n  tagList: string[];\n  createdAt: string;\n  updatedAt: string;\n  favorited: boolean;\n  favoritesCount: number;\n  author: Profile;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArticleCommentComponent.html":{"url":"components/ArticleCommentComponent.html","title":"component - ArticleCommentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ArticleCommentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/article/components/article-comment.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-article-comment\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                            DatePipe\n                            NgIf\n                            AsyncPipe\n                \n            \n\n\n\n            \n                template\n                @if (comment) {\n  \n    \n      \n        {{ comment.body }}\n      \n    \n    \n      \n        \n      \n      &nbsp;\n      \n        {{ comment.author.username }}\n      \n      \n        {{ comment.createdAt | date: \"longDate\" }}\n      \n      @if (canModify$ | async) {\n        \n          \n        \n      }\n    \n  \n}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                canModify$\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                comment\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        comment\n                    \n                \n                \n                    \n                        Type :         Comment\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/article/components/article-comment.component.ts:49\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        delete\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/article/components/article-comment.component.ts:50\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        canModify$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService).currentUser.pipe(\n    map(\n      (userData: User | null) =>\n        userData?.username === this.comment.author.username,\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/components/article-comment.component.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, inject } from \"@angular/core\";\nimport { UserService } from \"../../../core/auth/services/user.service\";\nimport { User } from \"../../../core/auth/user.model\";\nimport { RouterLink } from \"@angular/router\";\nimport { map } from \"rxjs/operators\";\nimport { Comment } from \"../models/comment.model\";\nimport { AsyncPipe, DatePipe, NgIf } from \"@angular/common\";\n\n@Component({\n  selector: \"app-article-comment\",\n  template: `\n    @if (comment) {\n      \n        \n          \n            {{ comment.body }}\n          \n        \n        \n          \n            \n          \n          &nbsp;\n          \n            {{ comment.author.username }}\n          \n          \n            {{ comment.createdAt | date: \"longDate\" }}\n          \n          @if (canModify$ | async) {\n            \n              \n            \n          }\n        \n      \n    }\n  `,\n  imports: [RouterLink, DatePipe, NgIf, AsyncPipe],\n  standalone: true,\n})\nexport class ArticleCommentComponent {\n  @Input() comment!: Comment;\n  @Output() delete = new EventEmitter();\n\n  canModify$ = inject(UserService).currentUser.pipe(\n    map(\n      (userData: User | null) =>\n        userData?.username === this.comment.author.username,\n    ),\n  );\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (comment) {                    {{ comment.body }}                                                       {{ comment.author.username }}                    {{ comment.createdAt | date: \"longDate\" }}            @if (canModify$ | async) {                                }      }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleCommentComponent', 'selector': 'app-article-comment'},{'name': 'ArticleComponent', 'selector': 'app-article-page'},{'name': 'ArticleListComponent', 'selector': 'app-article-list'},{'name': 'ArticleMetaComponent', 'selector': 'app-article-meta'},{'name': 'ArticlePreviewComponent', 'selector': 'app-article-preview'},{'name': 'AuthComponent', 'selector': 'app-auth-page'},{'name': 'EditorComponent', 'selector': 'app-editor-page'},{'name': 'FavoriteButtonComponent', 'selector': 'app-favorite-button'},{'name': 'FollowButtonComponent', 'selector': 'app-follow-button'},{'name': 'FooterComponent', 'selector': 'app-layout-footer'},{'name': 'HeaderComponent', 'selector': 'app-layout-header'},{'name': 'HomeComponent', 'selector': 'app-home-page'},{'name': 'ListErrorsComponent', 'selector': 'app-list-errors'},{'name': 'ProfileArticlesComponent', 'selector': 'app-profile-articles'},{'name': 'ProfileComponent', 'selector': 'app-profile-page'},{'name': 'ProfileFavoritesComponent', 'selector': 'app-profile-favorites'},{'name': 'SettingsComponent', 'selector': 'app-settings-page'}];\n    var DIRECTIVES = [{'name': 'IfAuthenticatedDirective', 'selector': '[ifAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArticleCommentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArticleComponent.html":{"url":"components/ArticleComponent.html","title":"component - ArticleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ArticleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/article/pages/article/article.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-article-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ArticleMetaComponent\n                            RouterLink\n                            NgClass\n                                FollowButtonComponent\n                                FavoriteButtonComponent\n                            NgForOf\n                            MarkdownPipe\n                            AsyncPipe\n                                ListErrorsComponent\n                            FormsModule\n                                ArticleCommentComponent\n                            ReactiveFormsModule\n                                IfAuthenticatedDirective\n                            NgIf\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./article.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                article\n                            \n                            \n                                canModify\n                            \n                            \n                                commentControl\n                            \n                            \n                                commentFormErrors\n                            \n                            \n                                comments\n                            \n                            \n                                currentUser\n                            \n                            \n                                destroyRef\n                            \n                            \n                                isDeleting\n                            \n                            \n                                isSubmitting\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addComment\n                            \n                            \n                                deleteArticle\n                            \n                            \n                                deleteComment\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onToggleFavorite\n                            \n                            \n                                toggleFollowing\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, articleService: ArticlesService, commentsService: CommentsService, router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/article/pages/article/article.component.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        articleService\n                                                  \n                                                        \n                                                                        ArticlesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commentsService\n                                                  \n                                                        \n                                                                        CommentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addComment\n                        \n                    \n                \n            \n            \n                \naddComment()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/pages/article/article.component.ts:113\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteArticle\n                        \n                    \n                \n            \n            \n                \ndeleteArticle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/pages/article/article.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteComment\n                        \n                    \n                \n            \n            \n                \ndeleteComment(comment: Comment)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/pages/article/article.component.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                comment\n                                            \n                                                            Comment\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/pages/article/article.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onToggleFavorite\n                        \n                    \n                \n            \n            \n                \nonToggleFavorite(favorited: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/pages/article/article.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                favorited\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleFollowing\n                        \n                    \n                \n            \n            \n                \ntoggleFollowing(profile: Profile)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/pages/article/article.component.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                profile\n                                            \n                                                            Profile\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        article\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Article\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/pages/article/article.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canModify\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/pages/article/article.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commentControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(\"\", { nonNullable: true })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/pages/article/article.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commentFormErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Errors | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/pages/article/article.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Comment[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/pages/article/article.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/pages/article/article.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/pages/article/article.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDeleting\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/pages/article/article.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubmitting\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/pages/article/article.component.ts:54\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, DestroyRef, inject, OnInit } from \"@angular/core\";\nimport { FormControl, FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { ActivatedRoute, Router, RouterLink } from \"@angular/router\";\nimport { User } from \"../../../../core/auth/user.model\";\nimport { Article } from \"../../models/article.model\";\nimport { ArticlesService } from \"../../services/articles.service\";\nimport { CommentsService } from \"../../services/comments.service\";\nimport { UserService } from \"../../../../core/auth/services/user.service\";\nimport { ArticleMetaComponent } from \"../../components/article-meta.component\";\nimport { AsyncPipe, NgClass, NgForOf, NgIf } from \"@angular/common\";\nimport { MarkdownPipe } from \"../../../../shared/pipes/markdown.pipe\";\nimport { ListErrorsComponent } from \"../../../../shared/components/list-errors.component\";\nimport { ArticleCommentComponent } from \"../../components/article-comment.component\";\nimport { catchError } from \"rxjs/operators\";\nimport { combineLatest, throwError } from \"rxjs\";\nimport { Comment } from \"../../models/comment.model\";\nimport { IfAuthenticatedDirective } from \"../../../../core/auth/if-authenticated.directive\";\nimport { Errors } from \"../../../../core/models/errors.model\";\nimport { Profile } from \"../../../profile/models/profile.model\";\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\nimport { FavoriteButtonComponent } from \"../../components/favorite-button.component\";\nimport { FollowButtonComponent } from \"../../../profile/components/follow-button.component\";\n\n@Component({\n  selector: \"app-article-page\",\n  templateUrl: \"./article.component.html\",\n  imports: [\n    ArticleMetaComponent,\n    RouterLink,\n    NgClass,\n    FollowButtonComponent,\n    FavoriteButtonComponent,\n    NgForOf,\n    MarkdownPipe,\n    AsyncPipe,\n    ListErrorsComponent,\n    FormsModule,\n    ArticleCommentComponent,\n    ReactiveFormsModule,\n    IfAuthenticatedDirective,\n    NgIf,\n  ],\n  standalone: true,\n})\nexport default class ArticleComponent implements OnInit {\n  article!: Article;\n  currentUser!: User | null;\n  comments: Comment[] = [];\n  canModify: boolean = false;\n\n  commentControl = new FormControl(\"\", { nonNullable: true });\n  commentFormErrors: Errors | null = null;\n\n  isSubmitting = false;\n  isDeleting = false;\n  destroyRef = inject(DestroyRef);\n\n  constructor(\n    private readonly route: ActivatedRoute,\n    private readonly articleService: ArticlesService,\n    private readonly commentsService: CommentsService,\n    private readonly router: Router,\n    private readonly userService: UserService,\n  ) {}\n\n  ngOnInit(): void {\n    const slug = this.route.snapshot.params[\"slug\"];\n    combineLatest([\n      this.articleService.get(slug),\n      this.commentsService.getAll(slug),\n      this.userService.currentUser,\n    ])\n      .pipe(\n        catchError((err) => {\n          void this.router.navigate([\"/\"]);\n          return throwError(() => err);\n        }),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe(([article, comments, currentUser]) => {\n        this.article = article;\n        this.comments = comments;\n        this.currentUser = currentUser;\n        this.canModify = currentUser?.username === article.author.username;\n      });\n  }\n\n  onToggleFavorite(favorited: boolean): void {\n    this.article.favorited = favorited;\n\n    if (favorited) {\n      this.article.favoritesCount++;\n    } else {\n      this.article.favoritesCount--;\n    }\n  }\n\n  toggleFollowing(profile: Profile): void {\n    this.article.author.following = profile.following;\n  }\n\n  deleteArticle(): void {\n    this.isDeleting = true;\n\n    this.articleService\n      .delete(this.article.slug)\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => {\n        void this.router.navigate([\"/\"]);\n      });\n  }\n\n  addComment() {\n    this.isSubmitting = true;\n    this.commentFormErrors = null;\n\n    this.commentsService\n      .add(this.article.slug, this.commentControl.value)\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: (comment) => {\n          this.comments.unshift(comment);\n          this.commentControl.reset(\"\");\n          this.isSubmitting = false;\n        },\n        error: (errors) => {\n          this.isSubmitting = false;\n          this.commentFormErrors = errors;\n        },\n      });\n  }\n\n  deleteComment(comment: Comment): void {\n    this.commentsService\n      .delete(comment.id, this.article.slug)\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => {\n        this.comments = this.comments.filter((item) => item !== comment);\n      });\n  }\n}\n\n    \n\n    \n        @if (article) {\n  \n    \n      \n        {{ article.title }}\n\n        \n          @if (canModify) {\n            \n              \n                 Edit Article\n              \n\n              \n                 Delete Article\n              \n            \n          } @else {\n            \n              \n              \n\n              \n                {{ article.favorited ? \"Unfavorite\" : \"Favorite\" }} Article\n                ({{ article.favoritesCount }})\n              \n            \n          }\n        \n      \n    \n\n    \n      \n        \n          \n\n          \n            @for (tag of article.tagList; track tag) {\n              \n                {{ tag }}\n              \n            }\n          \n        \n      \n\n      \n\n      \n        \n          @if (canModify) {\n            \n              \n                 Edit Article\n              \n\n              \n                 Delete Article\n              \n            \n          } @else {\n            \n              \n\n              \n                {{ article.favorited ? \"Unfavorite\" : \"Favorite\" }} Article\n                ({{ article.favoritesCount }})\n              \n            \n          }\n        \n      \n\n      \n        \n          \n            \n            \n              \n                \n                  \n                \n                \n                  \n                  \n                    Post Comment\n                  \n                \n              \n            \n          \n\n          \n            Sign in or\n            sign up to add comments on this\n            article.\n          \n\n          @for (comment of comments; track comment) {\n            \n          }\n        \n      \n    \n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (article) {                    {{ article.title }}                  @if (canModify) {                                           Edit Article                                             Delete Article                                    } @else {                                                                      {{ article.favorited ? \"Unfavorite\" : \"Favorite\" }} Article                ({{ article.favoritesCount }})                                    }                                                                    @for (tag of article.tagList; track tag) {                              {{ tag }}                          }                                                      @if (canModify) {                                           Edit Article                                             Delete Article                                    } @else {                                                        {{ article.favorited ? \"Unfavorite\" : \"Favorite\" }} Article                ({{ article.favoritesCount }})                                    }                                                                                                                                                                                                      Post Comment                                                                                            Sign in or            sign up to add comments on this            article.                    @for (comment of comments; track comment) {                      }                    }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleCommentComponent', 'selector': 'app-article-comment'},{'name': 'ArticleComponent', 'selector': 'app-article-page'},{'name': 'ArticleListComponent', 'selector': 'app-article-list'},{'name': 'ArticleMetaComponent', 'selector': 'app-article-meta'},{'name': 'ArticlePreviewComponent', 'selector': 'app-article-preview'},{'name': 'AuthComponent', 'selector': 'app-auth-page'},{'name': 'EditorComponent', 'selector': 'app-editor-page'},{'name': 'FavoriteButtonComponent', 'selector': 'app-favorite-button'},{'name': 'FollowButtonComponent', 'selector': 'app-follow-button'},{'name': 'FooterComponent', 'selector': 'app-layout-footer'},{'name': 'HeaderComponent', 'selector': 'app-layout-header'},{'name': 'HomeComponent', 'selector': 'app-home-page'},{'name': 'ListErrorsComponent', 'selector': 'app-list-errors'},{'name': 'ProfileArticlesComponent', 'selector': 'app-profile-articles'},{'name': 'ProfileComponent', 'selector': 'app-profile-page'},{'name': 'ProfileFavoritesComponent', 'selector': 'app-profile-favorites'},{'name': 'SettingsComponent', 'selector': 'app-settings-page'}];\n    var DIRECTIVES = [{'name': 'IfAuthenticatedDirective', 'selector': '[ifAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArticleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ArticleForm.html":{"url":"interfaces/ArticleForm.html","title":"interface - ArticleForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ArticleForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/article/pages/editor/editor.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NgForOf } from \"@angular/common\";\nimport { Component, DestroyRef, inject, OnInit } from \"@angular/core\";\nimport {\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  UntypedFormGroup,\n} from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { combineLatest } from \"rxjs\";\nimport { Errors } from \"../../../../core/models/errors.model\";\nimport { ArticlesService } from \"../../services/articles.service\";\nimport { UserService } from \"../../../../core/auth/services/user.service\";\nimport { ListErrorsComponent } from \"../../../../shared/components/list-errors.component\";\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\n\ninterface ArticleForm {\n  title: FormControl;\n  description: FormControl;\n  body: FormControl;\n}\n\n@Component({\n  selector: \"app-editor-page\",\n  templateUrl: \"./editor.component.html\",\n  imports: [ListErrorsComponent, ReactiveFormsModule, NgForOf],\n  standalone: true,\n})\nexport default class EditorComponent implements OnInit {\n  tagList: string[] = [];\n  articleForm: UntypedFormGroup = new FormGroup({\n    title: new FormControl(\"\", { nonNullable: true }),\n    description: new FormControl(\"\", { nonNullable: true }),\n    body: new FormControl(\"\", { nonNullable: true }),\n  });\n  tagField = new FormControl(\"\", { nonNullable: true });\n\n  errors: Errors | null = null;\n  isSubmitting = false;\n  destroyRef = inject(DestroyRef);\n\n  constructor(\n    private readonly articleService: ArticlesService,\n    private readonly route: ActivatedRoute,\n    private readonly router: Router,\n    private readonly userService: UserService,\n  ) {}\n\n  ngOnInit() {\n    if (this.route.snapshot.params[\"slug\"]) {\n      combineLatest([\n        this.articleService.get(this.route.snapshot.params[\"slug\"]),\n        this.userService.getCurrentUser(),\n      ])\n        .pipe(takeUntilDestroyed(this.destroyRef))\n        .subscribe(([article, { user }]) => {\n          if (user.username === article.author.username) {\n            this.tagList = article.tagList;\n            this.articleForm.patchValue(article);\n          } else {\n            void this.router.navigate([\"/\"]);\n          }\n        });\n    }\n  }\n\n  addTag() {\n    // retrieve tag control\n    const tag = this.tagField.value;\n    // only add tag if it does not exist yet\n    if (tag != null && tag.trim() !== \"\" && this.tagList.indexOf(tag)  tag !== tagName);\n  }\n\n  submitForm(): void {\n    this.isSubmitting = true;\n\n    // update any single tag\n    this.addTag();\n\n    // post the changes\n    this.articleService\n      .create({\n        ...this.articleForm.value,\n        tagList: this.tagList,\n      })\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: (article) => this.router.navigate([\"/article/\", article.slug]),\n        error: (err) => {\n          this.errors = err;\n          this.isSubmitting = false;\n        },\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArticleListComponent.html":{"url":"components/ArticleListComponent.html","title":"component - ArticleListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ArticleListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/article/components/article-list.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-article-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ArticlePreviewComponent\n                            NgForOf\n                            NgClass\n                            NgIf\n                \n            \n\n\n            \n                styles\n                \n    .page-link {\n      cursor: pointer;\n    }\n  \n            \n\n            \n                template\n                @if (loading === LoadingState.LOADING) {\n  Loading articles...\n}\n\n@if (loading === LoadingState.LOADED) {\n  @for (article of results; track article.slug) {\n    \n  } @empty {\n    No articles are here... yet.\n  }\n\n  \n    \n      @for (pageNumber of totalPages; track pageNumber) {\n        \n          \n            {{ pageNumber }}\n          \n        \n      }\n    \n  \n}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage\n                            \n                            \n                                destroyRef\n                            \n                            \n                                loading\n                            \n                            \n                                LoadingState\n                            \n                            \n                                query\n                            \n                            \n                                results\n                            \n                            \n                                totalPages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                runQuery\n                            \n                            \n                                setPageTo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                limit\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    config\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(articlesService: ArticlesService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/article/components/article-list.component.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        articlesService\n                                                  \n                                                        \n                                                                        ArticlesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ArticleListConfig\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/article/components/article-list.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        limit\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/article/components/article-list.component.ts:57\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        runQuery\n                        \n                    \n                \n            \n            \n                \nrunQuery()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/components/article-list.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPageTo\n                        \n                    \n                \n            \n            \n                \nsetPageTo(pageNumber: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/components/article-list.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pageNumber\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/components/article-list.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/components/article-list.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : LoadingState.NOT_LOADED\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/components/article-list.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LoadingState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : LoadingState\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/components/article-list.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ArticleListConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/components/article-list.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        results\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Article[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/components/article-list.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/components/article-list.component.ts:52\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n\n\n                \n                    \n                        setconfig(config: ArticleListConfig)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/article/components/article-list.component.ts:59\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            config\n                                                    \n                                                            \n                                                                            ArticleListConfig\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, DestroyRef, inject, Input } from \"@angular/core\";\nimport { ArticlesService } from \"../services/articles.service\";\nimport { ArticleListConfig } from \"../models/article-list-config.model\";\nimport { Article } from \"../models/article.model\";\nimport { ArticlePreviewComponent } from \"./article-preview.component\";\nimport { NgClass, NgForOf, NgIf } from \"@angular/common\";\nimport { LoadingState } from \"../../../core/models/loading-state.model\";\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\n\n@Component({\n  selector: \"app-article-list\",\n  template: `\n    @if (loading === LoadingState.LOADING) {\n      Loading articles...\n    }\n\n    @if (loading === LoadingState.LOADED) {\n      @for (article of results; track article.slug) {\n        \n      } @empty {\n        No articles are here... yet.\n      }\n\n      \n        \n          @for (pageNumber of totalPages; track pageNumber) {\n            \n              \n                {{ pageNumber }}\n              \n            \n          }\n        \n      \n    }\n  `,\n  imports: [ArticlePreviewComponent, NgForOf, NgClass, NgIf],\n  styles: `\n    .page-link {\n      cursor: pointer;\n    }\n  `,\n  standalone: true,\n})\nexport class ArticleListComponent {\n  query!: ArticleListConfig;\n  results: Article[] = [];\n  currentPage = 1;\n  totalPages: Array = [];\n  loading = LoadingState.NOT_LOADED;\n  LoadingState = LoadingState;\n  destroyRef = inject(DestroyRef);\n\n  @Input() limit!: number;\n  @Input()\n  set config(config: ArticleListConfig) {\n    if (config) {\n      this.query = config;\n      this.currentPage = 1;\n      this.runQuery();\n    }\n  }\n\n  constructor(private articlesService: ArticlesService) {}\n\n  setPageTo(pageNumber: number) {\n    this.currentPage = pageNumber;\n    this.runQuery();\n  }\n\n  runQuery() {\n    this.loading = LoadingState.LOADING;\n    this.results = [];\n\n    // Create limit and offset filter (if necessary)\n    if (this.limit) {\n      this.query.filters.limit = this.limit;\n      this.query.filters.offset = this.limit * (this.currentPage - 1);\n    }\n\n    this.articlesService\n      .query(this.query)\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe((data) => {\n        this.loading = LoadingState.LOADED;\n        this.results = data.articles;\n\n        // Used from http://www.jstips.co/en/create-range-0...n-easily-using-one-line/\n        this.totalPages = Array.from(\n          new Array(Math.ceil(data.articlesCount / this.limit)),\n          (val, index) => index + 1,\n        );\n      });\n  }\n}\n\n    \n\n\n    \n            \n    .page-link {\n      cursor: pointer;\n    }\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (loading === LoadingState.LOADING) {  Loading articles...}@if (loading === LoadingState.LOADED) {  @for (article of results; track article.slug) {      } @empty {    No articles are here... yet.  }            @for (pageNumber of totalPages; track pageNumber) {                              {{ pageNumber }}                        }      }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleCommentComponent', 'selector': 'app-article-comment'},{'name': 'ArticleComponent', 'selector': 'app-article-page'},{'name': 'ArticleListComponent', 'selector': 'app-article-list'},{'name': 'ArticleMetaComponent', 'selector': 'app-article-meta'},{'name': 'ArticlePreviewComponent', 'selector': 'app-article-preview'},{'name': 'AuthComponent', 'selector': 'app-auth-page'},{'name': 'EditorComponent', 'selector': 'app-editor-page'},{'name': 'FavoriteButtonComponent', 'selector': 'app-favorite-button'},{'name': 'FollowButtonComponent', 'selector': 'app-follow-button'},{'name': 'FooterComponent', 'selector': 'app-layout-footer'},{'name': 'HeaderComponent', 'selector': 'app-layout-header'},{'name': 'HomeComponent', 'selector': 'app-home-page'},{'name': 'ListErrorsComponent', 'selector': 'app-list-errors'},{'name': 'ProfileArticlesComponent', 'selector': 'app-profile-articles'},{'name': 'ProfileComponent', 'selector': 'app-profile-page'},{'name': 'ProfileFavoritesComponent', 'selector': 'app-profile-favorites'},{'name': 'SettingsComponent', 'selector': 'app-settings-page'}];\n    var DIRECTIVES = [{'name': 'IfAuthenticatedDirective', 'selector': '[ifAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArticleListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ArticleListConfig.html":{"url":"interfaces/ArticleListConfig.html","title":"interface - ArticleListConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ArticleListConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/article/models/article-list-config.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            filters\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filters:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ArticleListConfig {\n  type: string;\n\n  filters: {\n    tag?: string;\n    author?: string;\n    favorited?: string;\n    limit?: number;\n    offset?: number;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArticleMetaComponent.html":{"url":"components/ArticleMetaComponent.html","title":"component - ArticleMetaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ArticleMetaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/article/components/article-meta.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-article-meta\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                            DatePipe\n                \n            \n\n\n\n            \n                template\n                \n  \n    \n  \n\n  \n    \n      {{ article.author.username }}\n    \n    \n      {{ article.createdAt | date: \"longDate\" }}\n    \n  \n\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                article\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        article\n                    \n                \n                \n                    \n                        Type :         Article\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/article/components/article-meta.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\nimport { Article } from \"../models/article.model\";\nimport { RouterLink } from \"@angular/router\";\nimport { DatePipe } from \"@angular/common\";\n\n@Component({\n  selector: \"app-article-meta\",\n  template: `\n    \n      \n        \n      \n\n      \n        \n          {{ article.author.username }}\n        \n        \n          {{ article.createdAt | date: \"longDate\" }}\n        \n      \n\n      \n    \n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [RouterLink, DatePipe],\n  standalone: true,\n})\nexport class ArticleMetaComponent {\n  @Input() article!: Article;\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ article.author.username }}              {{ article.createdAt | date: \"longDate\" }}        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleCommentComponent', 'selector': 'app-article-comment'},{'name': 'ArticleComponent', 'selector': 'app-article-page'},{'name': 'ArticleListComponent', 'selector': 'app-article-list'},{'name': 'ArticleMetaComponent', 'selector': 'app-article-meta'},{'name': 'ArticlePreviewComponent', 'selector': 'app-article-preview'},{'name': 'AuthComponent', 'selector': 'app-auth-page'},{'name': 'EditorComponent', 'selector': 'app-editor-page'},{'name': 'FavoriteButtonComponent', 'selector': 'app-favorite-button'},{'name': 'FollowButtonComponent', 'selector': 'app-follow-button'},{'name': 'FooterComponent', 'selector': 'app-layout-footer'},{'name': 'HeaderComponent', 'selector': 'app-layout-header'},{'name': 'HomeComponent', 'selector': 'app-home-page'},{'name': 'ListErrorsComponent', 'selector': 'app-list-errors'},{'name': 'ProfileArticlesComponent', 'selector': 'app-profile-articles'},{'name': 'ProfileComponent', 'selector': 'app-profile-page'},{'name': 'ProfileFavoritesComponent', 'selector': 'app-profile-favorites'},{'name': 'SettingsComponent', 'selector': 'app-settings-page'}];\n    var DIRECTIVES = [{'name': 'IfAuthenticatedDirective', 'selector': '[ifAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArticleMetaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArticlePreviewComponent.html":{"url":"components/ArticlePreviewComponent.html","title":"component - ArticlePreviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ArticlePreviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/article/components/article-preview.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-article-preview\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ArticleMetaComponent\n                                FavoriteButtonComponent\n                            RouterLink\n                            NgForOf\n                \n            \n\n\n\n            \n                template\n                \n  \n    \n      {{ article.favoritesCount }}\n    \n  \n\n  \n    {{ article.title }}\n    {{ article.description }}\n    Read more...\n    \n      @for (tag of article.tagList; track tag) {\n        \n          {{ tag }}\n        \n      }\n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleFavorite\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                article\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        article\n                    \n                \n                \n                    \n                        Type :         Article\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/article/components/article-preview.component.ts:40\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleFavorite\n                        \n                    \n                \n            \n            \n                \ntoggleFavorite(favorited: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/components/article-preview.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                favorited\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from \"@angular/core\";\nimport { Article } from \"../models/article.model\";\nimport { ArticleMetaComponent } from \"./article-meta.component\";\nimport { RouterLink } from \"@angular/router\";\nimport { NgForOf } from \"@angular/common\";\nimport { FavoriteButtonComponent } from \"./favorite-button.component\";\n\n@Component({\n  selector: \"app-article-preview\",\n  template: `\n    \n      \n        \n          {{ article.favoritesCount }}\n        \n      \n\n      \n        {{ article.title }}\n        {{ article.description }}\n        Read more...\n        \n          @for (tag of article.tagList; track tag) {\n            \n              {{ tag }}\n            \n          }\n        \n      \n    \n  `,\n  imports: [ArticleMetaComponent, FavoriteButtonComponent, RouterLink, NgForOf],\n  standalone: true,\n})\nexport class ArticlePreviewComponent {\n  @Input() article!: Article;\n\n  toggleFavorite(favorited: boolean): void {\n    this.article.favorited = favorited;\n\n    if (favorited) {\n      this.article.favoritesCount++;\n    } else {\n      this.article.favoritesCount--;\n    }\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ article.favoritesCount }}            {{ article.title }}    {{ article.description }}    Read more...          @for (tag of article.tagList; track tag) {                  {{ tag }}              }      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleCommentComponent', 'selector': 'app-article-comment'},{'name': 'ArticleComponent', 'selector': 'app-article-page'},{'name': 'ArticleListComponent', 'selector': 'app-article-list'},{'name': 'ArticleMetaComponent', 'selector': 'app-article-meta'},{'name': 'ArticlePreviewComponent', 'selector': 'app-article-preview'},{'name': 'AuthComponent', 'selector': 'app-auth-page'},{'name': 'EditorComponent', 'selector': 'app-editor-page'},{'name': 'FavoriteButtonComponent', 'selector': 'app-favorite-button'},{'name': 'FollowButtonComponent', 'selector': 'app-follow-button'},{'name': 'FooterComponent', 'selector': 'app-layout-footer'},{'name': 'HeaderComponent', 'selector': 'app-layout-header'},{'name': 'HomeComponent', 'selector': 'app-home-page'},{'name': 'ListErrorsComponent', 'selector': 'app-list-errors'},{'name': 'ProfileArticlesComponent', 'selector': 'app-profile-articles'},{'name': 'ProfileComponent', 'selector': 'app-profile-page'},{'name': 'ProfileFavoritesComponent', 'selector': 'app-profile-favorites'},{'name': 'SettingsComponent', 'selector': 'app-settings-page'}];\n    var DIRECTIVES = [{'name': 'IfAuthenticatedDirective', 'selector': '[ifAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArticlePreviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ArticlesService.html":{"url":"injectables/ArticlesService.html","title":"injectable - ArticlesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ArticlesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/article/services/articles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                favorite\n                            \n                            \n                                get\n                            \n                            \n                                query\n                            \n                            \n                                unfavorite\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/article/services/articles.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(article: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/services/articles.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                article\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/services/articles.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        favorite\n                        \n                    \n                \n            \n            \n                \nfavorite(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/services/articles.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/services/articles.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        query\n                        \n                    \n                \n            \n            \n                \nquery(config: ArticleListConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/services/articles.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                            ArticleListConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unfavorite\n                        \n                    \n                \n            \n            \n                \nunfavorite(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/services/articles.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(article: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/services/articles.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                article\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { ArticleListConfig } from \"../models/article-list-config.model\";\nimport { Article } from \"../models/article.model\";\n\n@Injectable({ providedIn: \"root\" })\nexport class ArticlesService {\n  constructor(private readonly http: HttpClient) {}\n\n  query(\n    config: ArticleListConfig,\n  ): Observable {\n    // Convert any filters over to Angular's URLSearchParams\n    let params = new HttpParams();\n\n    Object.keys(config.filters).forEach((key) => {\n      // @ts-ignore\n      params = params.set(key, config.filters[key]);\n    });\n\n    return this.http.get(\n      \"/articles\" + (config.type === \"feed\" ? \"/feed\" : \"\"),\n      { params },\n    );\n  }\n\n  get(slug: string): Observable {\n    return this.http\n      .get(`/articles/${slug}`)\n      .pipe(map((data) => data.article));\n  }\n\n  delete(slug: string): Observable {\n    return this.http.delete(`/articles/${slug}`);\n  }\n\n  create(article: Partial): Observable {\n    return this.http\n      .post(\"/articles/\", { article: article })\n      .pipe(map((data) => data.article));\n  }\n\n  update(article: Partial): Observable {\n    return this.http\n      .put(`/articles/${article.slug}`, {\n        article: article,\n      })\n      .pipe(map((data) => data.article));\n  }\n\n  favorite(slug: string): Observable {\n    return this.http\n      .post(`/articles/${slug}/favorite`, {})\n      .pipe(map((data) => data.article));\n  }\n\n  unfavorite(slug: string): Observable {\n    return this.http.delete(`/articles/${slug}/favorite`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/auth/auth.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                            NgIf\n                                ListErrorsComponent\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authForm\n                            \n                            \n                                authType\n                            \n                            \n                                destroyRef\n                            \n                            \n                                errors\n                            \n                            \n                                isSubmitting\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/auth/auth.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/auth/auth.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/auth/auth.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/auth/auth.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/core/auth/auth.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/auth/auth.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Errors\n\n                    \n                \n                \n                    \n                        Default value : { errors: {} }\n                    \n                \n                    \n                        \n                                Defined in src/app/core/auth/auth.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubmitting\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/core/auth/auth.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/core/auth/auth.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, DestroyRef, inject, OnInit } from \"@angular/core\";\nimport {\n  Validators,\n  FormGroup,\n  FormControl,\n  ReactiveFormsModule,\n} from \"@angular/forms\";\nimport { ActivatedRoute, Router, RouterLink } from \"@angular/router\";\nimport { NgIf } from \"@angular/common\";\nimport { ListErrorsComponent } from \"../../shared/components/list-errors.component\";\nimport { Errors } from \"../models/errors.model\";\nimport { UserService } from \"./services/user.service\";\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\n\ninterface AuthForm {\n  email: FormControl;\n  password: FormControl;\n  username?: FormControl;\n}\n\n@Component({\n  selector: \"app-auth-page\",\n  templateUrl: \"./auth.component.html\",\n  imports: [RouterLink, NgIf, ListErrorsComponent, ReactiveFormsModule],\n  standalone: true,\n})\nexport default class AuthComponent implements OnInit {\n  authType = \"\";\n  title = \"\";\n  errors: Errors = { errors: {} };\n  isSubmitting = false;\n  authForm: FormGroup;\n  destroyRef = inject(DestroyRef);\n\n  constructor(\n    private readonly route: ActivatedRoute,\n    private readonly router: Router,\n    private readonly userService: UserService,\n  ) {\n    this.authForm = new FormGroup({\n      email: new FormControl(\"\", {\n        validators: [Validators.required],\n        nonNullable: true,\n      }),\n      password: new FormControl(\"\", {\n        validators: [Validators.required],\n        nonNullable: true,\n      }),\n    });\n  }\n\n  ngOnInit(): void {\n    this.authType = this.route.snapshot.url.at(-1)!.path;\n    this.title = this.authType === \"login\" ? \"Sign in\" : \"Sign up\";\n    if (this.authType === \"register\") {\n      this.authForm.addControl(\n        \"username\",\n        new FormControl(\"\", {\n          validators: [Validators.required],\n          nonNullable: true,\n        }),\n      );\n    }\n  }\n\n  submitForm(): void {\n    this.isSubmitting = true;\n    this.errors = { errors: {} };\n\n    let observable =\n      this.authType === \"login\"\n        ? this.userService.login(\n            this.authForm.value as { email: string; password: string },\n          )\n        : this.userService.register(\n            this.authForm.value as {\n              email: string;\n              password: string;\n              username: string;\n            },\n          );\n\n    observable.pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\n      next: () => void this.router.navigate([\"/\"]),\n      error: (err) => {\n        this.errors = err;\n        this.isSubmitting = false;\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ title }}\n        \n          @if (authType === \"register\") {\n            Have an account?\n          }\n\n          @if (authType === \"login\") {\n            Need an account?\n          }\n        \n        \n        \n          \n            \n              @if (authType === \"register\") {\n                \n              }\n            \n            \n              \n            \n            \n              \n            \n            \n              {{ title }}\n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ title }}                  @if (authType === \"register\") {            Have an account?          }          @if (authType === \"login\") {            Need an account?          }                                                            @if (authType === \"register\") {                              }                                                                                                                  {{ title }}                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleCommentComponent', 'selector': 'app-article-comment'},{'name': 'ArticleComponent', 'selector': 'app-article-page'},{'name': 'ArticleListComponent', 'selector': 'app-article-list'},{'name': 'ArticleMetaComponent', 'selector': 'app-article-meta'},{'name': 'ArticlePreviewComponent', 'selector': 'app-article-preview'},{'name': 'AuthComponent', 'selector': 'app-auth-page'},{'name': 'EditorComponent', 'selector': 'app-editor-page'},{'name': 'FavoriteButtonComponent', 'selector': 'app-favorite-button'},{'name': 'FollowButtonComponent', 'selector': 'app-follow-button'},{'name': 'FooterComponent', 'selector': 'app-layout-footer'},{'name': 'HeaderComponent', 'selector': 'app-layout-header'},{'name': 'HomeComponent', 'selector': 'app-home-page'},{'name': 'ListErrorsComponent', 'selector': 'app-list-errors'},{'name': 'ProfileArticlesComponent', 'selector': 'app-profile-articles'},{'name': 'ProfileComponent', 'selector': 'app-profile-page'},{'name': 'ProfileFavoritesComponent', 'selector': 'app-profile-favorites'},{'name': 'SettingsComponent', 'selector': 'app-settings-page'}];\n    var DIRECTIVES = [{'name': 'IfAuthenticatedDirective', 'selector': '[ifAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthForm.html":{"url":"interfaces/AuthForm.html","title":"interface - AuthForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/auth/auth.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, DestroyRef, inject, OnInit } from \"@angular/core\";\nimport {\n  Validators,\n  FormGroup,\n  FormControl,\n  ReactiveFormsModule,\n} from \"@angular/forms\";\nimport { ActivatedRoute, Router, RouterLink } from \"@angular/router\";\nimport { NgIf } from \"@angular/common\";\nimport { ListErrorsComponent } from \"../../shared/components/list-errors.component\";\nimport { Errors } from \"../models/errors.model\";\nimport { UserService } from \"./services/user.service\";\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\n\ninterface AuthForm {\n  email: FormControl;\n  password: FormControl;\n  username?: FormControl;\n}\n\n@Component({\n  selector: \"app-auth-page\",\n  templateUrl: \"./auth.component.html\",\n  imports: [RouterLink, NgIf, ListErrorsComponent, ReactiveFormsModule],\n  standalone: true,\n})\nexport default class AuthComponent implements OnInit {\n  authType = \"\";\n  title = \"\";\n  errors: Errors = { errors: {} };\n  isSubmitting = false;\n  authForm: FormGroup;\n  destroyRef = inject(DestroyRef);\n\n  constructor(\n    private readonly route: ActivatedRoute,\n    private readonly router: Router,\n    private readonly userService: UserService,\n  ) {\n    this.authForm = new FormGroup({\n      email: new FormControl(\"\", {\n        validators: [Validators.required],\n        nonNullable: true,\n      }),\n      password: new FormControl(\"\", {\n        validators: [Validators.required],\n        nonNullable: true,\n      }),\n    });\n  }\n\n  ngOnInit(): void {\n    this.authType = this.route.snapshot.url.at(-1)!.path;\n    this.title = this.authType === \"login\" ? \"Sign in\" : \"Sign up\";\n    if (this.authType === \"register\") {\n      this.authForm.addControl(\n        \"username\",\n        new FormControl(\"\", {\n          validators: [Validators.required],\n          nonNullable: true,\n        }),\n      );\n    }\n  }\n\n  submitForm(): void {\n    this.isSubmitting = true;\n    this.errors = { errors: {} };\n\n    let observable =\n      this.authType === \"login\"\n        ? this.userService.login(\n            this.authForm.value as { email: string; password: string },\n          )\n        : this.userService.register(\n            this.authForm.value as {\n              email: string;\n              password: string;\n              username: string;\n            },\n          );\n\n    observable.pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\n      next: () => void this.router.navigate([\"/\"]),\n      error: (err) => {\n        this.errors = err;\n        this.isSubmitting = false;\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Comment.html":{"url":"interfaces/Comment.html","title":"interface - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/article/models/comment.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            author\n                                        \n                                \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        author\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        author:         Profile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Profile\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Profile } from \"../../profile/models/profile.model\";\n\nexport interface Comment {\n  id: string;\n  body: string;\n  createdAt: string;\n  author: Profile;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommentsService.html":{"url":"injectables/CommentsService.html","title":"injectable - CommentsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/article/services/comments.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/article/services/comments.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(slug: string, payload: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/services/comments.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(commentId: string, slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/services/comments.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                commentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/services/comments.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Comment } from \"../models/comment.model\";\n\n@Injectable({ providedIn: \"root\" })\nexport class CommentsService {\n  constructor(private readonly http: HttpClient) {}\n\n  getAll(slug: string): Observable {\n    return this.http\n      .get(`/articles/${slug}/comments`)\n      .pipe(map((data) => data.comments));\n  }\n\n  add(slug: string, payload: string): Observable {\n    return this.http\n      .post(`/articles/${slug}/comments`, {\n        comment: { body: payload },\n      })\n      .pipe(map((data) => data.comment));\n  }\n\n  delete(commentId: string, slug: string): Observable {\n    return this.http.delete(`/articles/${slug}/comments/${commentId}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditorComponent.html":{"url":"components/EditorComponent.html","title":"component - EditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/article/pages/editor/editor.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editor-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ListErrorsComponent\n                            ReactiveFormsModule\n                            NgForOf\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                articleForm\n                            \n                            \n                                destroyRef\n                            \n                            \n                                errors\n                            \n                            \n                                isSubmitting\n                            \n                            \n                                tagField\n                            \n                            \n                                tagList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTag\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeTag\n                            \n                            \n                                submitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(articleService: ArticlesService, route: ActivatedRoute, router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/article/pages/editor/editor.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        articleService\n                                                  \n                                                        \n                                                                        ArticlesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTag\n                        \n                    \n                \n            \n            \n                \naddTag()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/pages/editor/editor.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/pages/editor/editor.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTag\n                        \n                    \n                \n            \n            \n                \nremoveTag(tagName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/pages/editor/editor.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tagName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/pages/editor/editor.component.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        articleForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UntypedFormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    title: new FormControl(\"\", { nonNullable: true }),\n    description: new FormControl(\"\", { nonNullable: true }),\n    body: new FormControl(\"\", { nonNullable: true }),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/pages/editor/editor.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/pages/editor/editor.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Errors | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/pages/editor/editor.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubmitting\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/pages/editor/editor.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tagField\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(\"\", { nonNullable: true })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/pages/editor/editor.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tagList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/pages/editor/editor.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { NgForOf } from \"@angular/common\";\nimport { Component, DestroyRef, inject, OnInit } from \"@angular/core\";\nimport {\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  UntypedFormGroup,\n} from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { combineLatest } from \"rxjs\";\nimport { Errors } from \"../../../../core/models/errors.model\";\nimport { ArticlesService } from \"../../services/articles.service\";\nimport { UserService } from \"../../../../core/auth/services/user.service\";\nimport { ListErrorsComponent } from \"../../../../shared/components/list-errors.component\";\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\n\ninterface ArticleForm {\n  title: FormControl;\n  description: FormControl;\n  body: FormControl;\n}\n\n@Component({\n  selector: \"app-editor-page\",\n  templateUrl: \"./editor.component.html\",\n  imports: [ListErrorsComponent, ReactiveFormsModule, NgForOf],\n  standalone: true,\n})\nexport default class EditorComponent implements OnInit {\n  tagList: string[] = [];\n  articleForm: UntypedFormGroup = new FormGroup({\n    title: new FormControl(\"\", { nonNullable: true }),\n    description: new FormControl(\"\", { nonNullable: true }),\n    body: new FormControl(\"\", { nonNullable: true }),\n  });\n  tagField = new FormControl(\"\", { nonNullable: true });\n\n  errors: Errors | null = null;\n  isSubmitting = false;\n  destroyRef = inject(DestroyRef);\n\n  constructor(\n    private readonly articleService: ArticlesService,\n    private readonly route: ActivatedRoute,\n    private readonly router: Router,\n    private readonly userService: UserService,\n  ) {}\n\n  ngOnInit() {\n    if (this.route.snapshot.params[\"slug\"]) {\n      combineLatest([\n        this.articleService.get(this.route.snapshot.params[\"slug\"]),\n        this.userService.getCurrentUser(),\n      ])\n        .pipe(takeUntilDestroyed(this.destroyRef))\n        .subscribe(([article, { user }]) => {\n          if (user.username === article.author.username) {\n            this.tagList = article.tagList;\n            this.articleForm.patchValue(article);\n          } else {\n            void this.router.navigate([\"/\"]);\n          }\n        });\n    }\n  }\n\n  addTag() {\n    // retrieve tag control\n    const tag = this.tagField.value;\n    // only add tag if it does not exist yet\n    if (tag != null && tag.trim() !== \"\" && this.tagList.indexOf(tag)  tag !== tagName);\n  }\n\n  submitForm(): void {\n    this.isSubmitting = true;\n\n    // update any single tag\n    this.addTag();\n\n    // post the changes\n    this.articleService\n      .create({\n        ...this.articleForm.value,\n        tagList: this.tagList,\n      })\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: (article) => this.router.navigate([\"/article/\", article.slug]),\n        error: (err) => {\n          this.errors = err;\n          this.isSubmitting = false;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n\n        \n          \n            \n              \n            \n\n            \n              \n            \n\n            \n              \n              \n            \n\n            \n              \n              \n                @for (tag of tagList; track tag) {\n                  \n                    \n                    {{ tag }}\n                  \n                }\n              \n            \n\n            \n              Publish Article\n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                              @for (tag of tagList; track tag) {                                                          {{ tag }}                                  }                                                    Publish Article                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleCommentComponent', 'selector': 'app-article-comment'},{'name': 'ArticleComponent', 'selector': 'app-article-page'},{'name': 'ArticleListComponent', 'selector': 'app-article-list'},{'name': 'ArticleMetaComponent', 'selector': 'app-article-meta'},{'name': 'ArticlePreviewComponent', 'selector': 'app-article-preview'},{'name': 'AuthComponent', 'selector': 'app-auth-page'},{'name': 'EditorComponent', 'selector': 'app-editor-page'},{'name': 'FavoriteButtonComponent', 'selector': 'app-favorite-button'},{'name': 'FollowButtonComponent', 'selector': 'app-follow-button'},{'name': 'FooterComponent', 'selector': 'app-layout-footer'},{'name': 'HeaderComponent', 'selector': 'app-layout-header'},{'name': 'HomeComponent', 'selector': 'app-home-page'},{'name': 'ListErrorsComponent', 'selector': 'app-list-errors'},{'name': 'ProfileArticlesComponent', 'selector': 'app-profile-articles'},{'name': 'ProfileComponent', 'selector': 'app-profile-page'},{'name': 'ProfileFavoritesComponent', 'selector': 'app-profile-favorites'},{'name': 'SettingsComponent', 'selector': 'app-settings-page'}];\n    var DIRECTIVES = [{'name': 'IfAuthenticatedDirective', 'selector': '[ifAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'EditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Errors.html":{"url":"interfaces/Errors.html","title":"interface - Errors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Errors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/errors.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            errors\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Errors {\n  errors: { [key: string]: string };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FavoriteButtonComponent.html":{"url":"components/FavoriteButtonComponent.html","title":"component - FavoriteButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FavoriteButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/article/components/favorite-button.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-favorite-button\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgClass\n                \n            \n\n\n\n            \n                template\n                \n   \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destroyRef\n                            \n                            \n                                isSubmitting\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleFavorite\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                article\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(articleService: ArticlesService, router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/article/components/favorite-button.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        articleService\n                                                  \n                                                        \n                                                                        ArticlesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        article\n                    \n                \n                \n                    \n                        Type :         Article\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/article/components/favorite-button.component.ts:39\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/article/components/favorite-button.component.ts:40\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleFavorite\n                        \n                    \n                \n            \n            \n                \ntoggleFavorite()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/components/favorite-button.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/components/favorite-button.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubmitting\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/components/favorite-button.component.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  DestroyRef,\n  EventEmitter,\n  inject,\n  Input,\n  Output,\n} from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { EMPTY, switchMap } from \"rxjs\";\nimport { NgClass } from \"@angular/common\";\nimport { ArticlesService } from \"../services/articles.service\";\nimport { UserService } from \"../../../core/auth/services/user.service\";\nimport { Article } from \"../models/article.model\";\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\n\n@Component({\n  selector: \"app-favorite-button\",\n  template: `\n    \n       \n    \n  `,\n  imports: [NgClass],\n  standalone: true,\n})\nexport class FavoriteButtonComponent {\n  destroyRef = inject(DestroyRef);\n  isSubmitting = false;\n\n  @Input() article!: Article;\n  @Output() toggle = new EventEmitter();\n\n  constructor(\n    private readonly articleService: ArticlesService,\n    private readonly router: Router,\n    private readonly userService: UserService,\n  ) {}\n\n  toggleFavorite(): void {\n    this.isSubmitting = true;\n\n    this.userService.isAuthenticated\n      .pipe(\n        switchMap((authenticated) => {\n          if (!authenticated) {\n            void this.router.navigate([\"/register\"]);\n            return EMPTY;\n          }\n\n          if (!this.article.favorited) {\n            return this.articleService.favorite(this.article.slug);\n          } else {\n            return this.articleService.unfavorite(this.article.slug);\n          }\n        }),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe({\n        next: () => {\n          this.isSubmitting = false;\n          this.toggle.emit(!this.article.favorited);\n        },\n        error: () => (this.isSubmitting = false),\n      });\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleCommentComponent', 'selector': 'app-article-comment'},{'name': 'ArticleComponent', 'selector': 'app-article-page'},{'name': 'ArticleListComponent', 'selector': 'app-article-list'},{'name': 'ArticleMetaComponent', 'selector': 'app-article-meta'},{'name': 'ArticlePreviewComponent', 'selector': 'app-article-preview'},{'name': 'AuthComponent', 'selector': 'app-auth-page'},{'name': 'EditorComponent', 'selector': 'app-editor-page'},{'name': 'FavoriteButtonComponent', 'selector': 'app-favorite-button'},{'name': 'FollowButtonComponent', 'selector': 'app-follow-button'},{'name': 'FooterComponent', 'selector': 'app-layout-footer'},{'name': 'HeaderComponent', 'selector': 'app-layout-header'},{'name': 'HomeComponent', 'selector': 'app-home-page'},{'name': 'ListErrorsComponent', 'selector': 'app-list-errors'},{'name': 'ProfileArticlesComponent', 'selector': 'app-profile-articles'},{'name': 'ProfileComponent', 'selector': 'app-profile-page'},{'name': 'ProfileFavoritesComponent', 'selector': 'app-profile-favorites'},{'name': 'SettingsComponent', 'selector': 'app-settings-page'}];\n    var DIRECTIVES = [{'name': 'IfAuthenticatedDirective', 'selector': '[ifAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'FavoriteButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FollowButtonComponent.html":{"url":"components/FollowButtonComponent.html","title":"component - FollowButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FollowButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/profile/components/follow-button.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-follow-button\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgClass\n                \n            \n\n\n\n            \n                template\n                \n  \n  &nbsp;\n  {{ profile.following ? \"Unfollow\" : \"Follow\" }} {{ profile.username }}\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destroyRef\n                            \n                            \n                                isSubmitting\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleFollowing\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                profile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(profileService: ProfileService, router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/components/follow-button.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        profile\n                    \n                \n                \n                    \n                        Type :         Profile\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/profile/components/follow-button.component.ts:39\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/profile/components/follow-button.component.ts:40\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleFollowing\n                        \n                    \n                \n            \n            \n                \ntoggleFollowing()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/components/follow-button.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/components/follow-button.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubmitting\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/components/follow-button.component.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  DestroyRef,\n  EventEmitter,\n  inject,\n  Input,\n  Output,\n} from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { switchMap } from \"rxjs/operators\";\nimport { EMPTY } from \"rxjs\";\nimport { ProfileService } from \"../services/profile.service\";\nimport { UserService } from \"../../../core/auth/services/user.service\";\nimport { Profile } from \"../models/profile.model\";\nimport { NgClass } from \"@angular/common\";\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\n\n@Component({\n  selector: \"app-follow-button\",\n  template: `\n    \n      \n      &nbsp;\n      {{ profile.following ? \"Unfollow\" : \"Follow\" }} {{ profile.username }}\n    \n  `,\n  imports: [NgClass],\n  standalone: true,\n})\nexport class FollowButtonComponent {\n  @Input() profile!: Profile;\n  @Output() toggle = new EventEmitter();\n  isSubmitting = false;\n  destroyRef = inject(DestroyRef);\n\n  constructor(\n    private readonly profileService: ProfileService,\n    private readonly router: Router,\n    private readonly userService: UserService,\n  ) {}\n\n  toggleFollowing(): void {\n    this.isSubmitting = true;\n\n    this.userService.isAuthenticated\n      .pipe(\n        switchMap((isAuthenticated: boolean) => {\n          if (!isAuthenticated) {\n            void this.router.navigate([\"/login\"]);\n            return EMPTY;\n          }\n\n          if (!this.profile.following) {\n            return this.profileService.follow(this.profile.username);\n          } else {\n            return this.profileService.unfollow(this.profile.username);\n          }\n        }),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe({\n        next: (profile) => {\n          this.isSubmitting = false;\n          this.toggle.emit(profile);\n        },\n        error: () => (this.isSubmitting = false),\n      });\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{ profile.following ? \"Unfollow\" : \"Follow\" }} {{ profile.username }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleCommentComponent', 'selector': 'app-article-comment'},{'name': 'ArticleComponent', 'selector': 'app-article-page'},{'name': 'ArticleListComponent', 'selector': 'app-article-list'},{'name': 'ArticleMetaComponent', 'selector': 'app-article-meta'},{'name': 'ArticlePreviewComponent', 'selector': 'app-article-preview'},{'name': 'AuthComponent', 'selector': 'app-auth-page'},{'name': 'EditorComponent', 'selector': 'app-editor-page'},{'name': 'FavoriteButtonComponent', 'selector': 'app-favorite-button'},{'name': 'FollowButtonComponent', 'selector': 'app-follow-button'},{'name': 'FooterComponent', 'selector': 'app-layout-footer'},{'name': 'HeaderComponent', 'selector': 'app-layout-header'},{'name': 'HomeComponent', 'selector': 'app-home-page'},{'name': 'ListErrorsComponent', 'selector': 'app-list-errors'},{'name': 'ProfileArticlesComponent', 'selector': 'app-profile-articles'},{'name': 'ProfileComponent', 'selector': 'app-profile-page'},{'name': 'ProfileFavoritesComponent', 'selector': 'app-profile-favorites'},{'name': 'SettingsComponent', 'selector': 'app-settings-page'}];\n    var DIRECTIVES = [{'name': 'IfAuthenticatedDirective', 'selector': '[ifAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'FollowButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/layout/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout-footer\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            DatePipe\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                today\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        today\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Date.now()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/layout/footer.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from \"@angular/core\";\nimport { DatePipe } from \"@angular/common\";\nimport { RouterLink } from \"@angular/router\";\n\n@Component({\n  selector: \"app-layout-footer\",\n  templateUrl: \"./footer.component.html\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [DatePipe, RouterLink],\n  standalone: true,\n})\nexport class FooterComponent {\n  today: number = Date.now();\n}\n\n    \n\n    \n        \n  \n    conduit\n    \n      &copy; {{ today | date: \"yyyy\" }}. An interactive learning project from\n      RealWorld OSS Project. Code licensed under MIT.\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      conduit          © {{ today | date: \"yyyy\" }}. An interactive learning project from      RealWorld OSS Project. Code licensed under MIT.      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleCommentComponent', 'selector': 'app-article-comment'},{'name': 'ArticleComponent', 'selector': 'app-article-page'},{'name': 'ArticleListComponent', 'selector': 'app-article-list'},{'name': 'ArticleMetaComponent', 'selector': 'app-article-meta'},{'name': 'ArticlePreviewComponent', 'selector': 'app-article-preview'},{'name': 'AuthComponent', 'selector': 'app-auth-page'},{'name': 'EditorComponent', 'selector': 'app-editor-page'},{'name': 'FavoriteButtonComponent', 'selector': 'app-favorite-button'},{'name': 'FollowButtonComponent', 'selector': 'app-follow-button'},{'name': 'FooterComponent', 'selector': 'app-layout-footer'},{'name': 'HeaderComponent', 'selector': 'app-layout-header'},{'name': 'HomeComponent', 'selector': 'app-home-page'},{'name': 'ListErrorsComponent', 'selector': 'app-list-errors'},{'name': 'ProfileArticlesComponent', 'selector': 'app-profile-articles'},{'name': 'ProfileComponent', 'selector': 'app-profile-page'},{'name': 'ProfileFavoritesComponent', 'selector': 'app-profile-favorites'},{'name': 'SettingsComponent', 'selector': 'app-settings-page'}];\n    var DIRECTIVES = [{'name': 'IfAuthenticatedDirective', 'selector': '[ifAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/layout/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLinkActive\n                            RouterLink\n                            AsyncPipe\n                            NgIf\n                                IfAuthenticatedDirective\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService).currentUser\n                    \n                \n                    \n                        \n                                Defined in src/app/core/layout/header.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from \"@angular/core\";\nimport { UserService } from \"../auth/services/user.service\";\nimport { RouterLink, RouterLinkActive } from \"@angular/router\";\nimport { AsyncPipe, NgIf } from \"@angular/common\";\nimport { IfAuthenticatedDirective } from \"../auth/if-authenticated.directive\";\n\n@Component({\n  selector: \"app-layout-header\",\n  templateUrl: \"./header.component.html\",\n  imports: [\n    RouterLinkActive,\n    RouterLink,\n    AsyncPipe,\n    NgIf,\n    IfAuthenticatedDirective,\n  ],\n  standalone: true,\n})\nexport class HeaderComponent {\n  currentUser$ = inject(UserService).currentUser;\n}\n\n    \n\n    \n        \n  \n    conduit\n\n    \n    \n      \n         Home \n      \n\n      \n        \n          Sign in\n        \n      \n\n      \n        \n          Sign up\n        \n      \n    \n\n    \n    \n      \n        \n          Home\n        \n      \n\n      \n        \n          &nbsp;New Article\n        \n      \n\n      \n        \n          &nbsp;Settings\n        \n      \n\n      @if (currentUser$ | async; as currentUser) {\n        \n          \n            \n            {{ currentUser.username }}\n          \n        \n      }\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      conduit                       Home                               Sign in                                      Sign up                                                  Home                                       New Article                                       Settings                    @if (currentUser$ | async; as currentUser) {                                          {{ currentUser.username }}                        }      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleCommentComponent', 'selector': 'app-article-comment'},{'name': 'ArticleComponent', 'selector': 'app-article-page'},{'name': 'ArticleListComponent', 'selector': 'app-article-list'},{'name': 'ArticleMetaComponent', 'selector': 'app-article-meta'},{'name': 'ArticlePreviewComponent', 'selector': 'app-article-preview'},{'name': 'AuthComponent', 'selector': 'app-auth-page'},{'name': 'EditorComponent', 'selector': 'app-editor-page'},{'name': 'FavoriteButtonComponent', 'selector': 'app-favorite-button'},{'name': 'FollowButtonComponent', 'selector': 'app-follow-button'},{'name': 'FooterComponent', 'selector': 'app-layout-footer'},{'name': 'HeaderComponent', 'selector': 'app-layout-header'},{'name': 'HomeComponent', 'selector': 'app-home-page'},{'name': 'ListErrorsComponent', 'selector': 'app-list-errors'},{'name': 'ProfileArticlesComponent', 'selector': 'app-profile-articles'},{'name': 'ProfileComponent', 'selector': 'app-profile-page'},{'name': 'ProfileFavoritesComponent', 'selector': 'app-profile-favorites'},{'name': 'SettingsComponent', 'selector': 'app-settings-page'}];\n    var DIRECTIVES = [{'name': 'IfAuthenticatedDirective', 'selector': '[ifAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/article/pages/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgClass\n                                ArticleListComponent\n                            AsyncPipe\n                            RxLet\n                            NgForOf\n                                IfAuthenticatedDirective\n                \n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destroyRef\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                listConfig\n                            \n                            \n                                tags$\n                            \n                            \n                                tagsLoaded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setListTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/article/pages/home/home.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/pages/home/home.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setListTo\n                        \n                    \n                \n            \n            \n                \nsetListTo(type: string, filters: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/pages/home/home.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"\"\n                                            \n\n                                        \n                                        \n                                                filters\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/pages/home/home.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/pages/home/home.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ArticleListConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    type: \"all\",\n    filters: {},\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/pages/home/home.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TagsService)\n    .getAll()\n    .pipe(tap(() => (this.tagsLoaded = true)))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/pages/home/home.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tagsLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/pages/home/home.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, DestroyRef, inject, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { TagsService } from \"../../services/tags.service\";\nimport { ArticleListConfig } from \"../../models/article-list-config.model\";\nimport { AsyncPipe, NgClass, NgForOf } from \"@angular/common\";\nimport { ArticleListComponent } from \"../../components/article-list.component\";\nimport { tap } from \"rxjs/operators\";\nimport { UserService } from \"../../../../core/auth/services/user.service\";\nimport { RxLet } from \"@rx-angular/template/let\";\nimport { IfAuthenticatedDirective } from \"../../../../core/auth/if-authenticated.directive\";\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\n\n@Component({\n  selector: \"app-home-page\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.css\"],\n  imports: [\n    NgClass,\n    ArticleListComponent,\n    AsyncPipe,\n    RxLet,\n    NgForOf,\n    IfAuthenticatedDirective,\n  ],\n  standalone: true,\n})\nexport default class HomeComponent implements OnInit {\n  isAuthenticated = false;\n  listConfig: ArticleListConfig = {\n    type: \"all\",\n    filters: {},\n  };\n  tags$ = inject(TagsService)\n    .getAll()\n    .pipe(tap(() => (this.tagsLoaded = true)));\n  tagsLoaded = false;\n  destroyRef = inject(DestroyRef);\n\n  constructor(\n    private readonly router: Router,\n    private readonly userService: UserService,\n  ) {}\n\n  ngOnInit(): void {\n    this.userService.isAuthenticated\n      .pipe(\n        tap((isAuthenticated) => {\n          if (isAuthenticated) {\n            this.setListTo(\"feed\");\n          } else {\n            this.setListTo(\"all\");\n          }\n        }),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe(\n        (isAuthenticated: boolean) => (this.isAuthenticated = isAuthenticated),\n      );\n  }\n\n  setListTo(type: string = \"\", filters: Object = {}): void {\n    // If feed is requested but user is not authenticated, redirect to login\n    if (type === \"feed\" && !this.isAuthenticated) {\n      void this.router.navigate([\"/login\"]);\n      return;\n    }\n\n    // Otherwise, set the list object\n    this.listConfig = { type: type, filters: filters };\n  }\n}\n\n    \n\n    \n        \n  \n    \n      conduit\n      A place to share your Angular knowledge.\n    \n  \n\n  \n    \n      \n        \n          \n            \n              \n                Your Feed\n              \n            \n            \n              \n                Global Feed\n              \n            \n            \n              \n                 {{ listConfig.filters.tag }}\n              \n            \n          \n        \n\n        \n      \n\n      \n        \n          Popular Tags\n\n          \n            @for (tag of tags; track tag) {\n              \n                {{ tag }}\n              \n            }\n          \n\n          Loading tags...\n\n           0\">\n            No tags are here... yet.\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./home.component.css\n                \n                .nav-link {\n  cursor: pointer;\n}\n\n.tag-pill {\n  cursor: pointer;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            conduit      A place to share your Angular knowledge.                                                                              Your Feed                                                                    Global Feed                                                                     {{ listConfig.filters.tag }}                                                                                  Popular Tags                      @for (tag of tags; track tag) {                              {{ tag }}                          }                    Loading tags...           0\">            No tags are here... yet.                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleCommentComponent', 'selector': 'app-article-comment'},{'name': 'ArticleComponent', 'selector': 'app-article-page'},{'name': 'ArticleListComponent', 'selector': 'app-article-list'},{'name': 'ArticleMetaComponent', 'selector': 'app-article-meta'},{'name': 'ArticlePreviewComponent', 'selector': 'app-article-preview'},{'name': 'AuthComponent', 'selector': 'app-auth-page'},{'name': 'EditorComponent', 'selector': 'app-editor-page'},{'name': 'FavoriteButtonComponent', 'selector': 'app-favorite-button'},{'name': 'FollowButtonComponent', 'selector': 'app-follow-button'},{'name': 'FooterComponent', 'selector': 'app-layout-footer'},{'name': 'HeaderComponent', 'selector': 'app-layout-header'},{'name': 'HomeComponent', 'selector': 'app-home-page'},{'name': 'ListErrorsComponent', 'selector': 'app-list-errors'},{'name': 'ProfileArticlesComponent', 'selector': 'app-profile-articles'},{'name': 'ProfileComponent', 'selector': 'app-profile-page'},{'name': 'ProfileFavoritesComponent', 'selector': 'app-profile-favorites'},{'name': 'SettingsComponent', 'selector': 'app-settings-page'}];\n    var DIRECTIVES = [{'name': 'IfAuthenticatedDirective', 'selector': '[ifAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/IfAuthenticatedDirective.html":{"url":"directives/IfAuthenticatedDirective.html","title":"directive - IfAuthenticatedDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  IfAuthenticatedDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/auth/if-authenticated.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ifAuthenticated]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                condition\n                            \n                            \n                                destroyRef\n                            \n                            \n                                hasView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ifAuthenticated\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ifAuthenticated\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(templateRef: TemplateRef, userService: UserService, viewContainer: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/auth/if-authenticated.directive.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        templateRef\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewContainer\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ifAuthenticated\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/auth/if-authenticated.directive.ts:45\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/auth/if-authenticated.directive.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        condition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/core/auth/if-authenticated.directive.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/auth/if-authenticated.directive.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasView\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/core/auth/if-authenticated.directive.ts:26\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        ifAuthenticated\n                    \n                \n\n\n                \n                    \n                        setifAuthenticated(condition: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/auth/if-authenticated.directive.ts:45\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            condition\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n  DestroyRef,\n  Directive,\n  inject,\n  Input,\n  OnInit,\n  TemplateRef,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { UserService } from \"./services/user.service\";\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\n\n@Directive({\n  selector: \"[ifAuthenticated]\",\n  standalone: true,\n})\nexport class IfAuthenticatedDirective implements OnInit {\n  destroyRef = inject(DestroyRef);\n  constructor(\n    private templateRef: TemplateRef,\n    private userService: UserService,\n    private viewContainer: ViewContainerRef,\n  ) {}\n\n  condition: boolean = false;\n  hasView = false;\n\n  ngOnInit() {\n    this.userService.isAuthenticated\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe((isAuthenticated: boolean) => {\n        const authRequired = isAuthenticated && this.condition;\n        const unauthRequired = !isAuthenticated && !this.condition;\n\n        if ((authRequired || unauthRequired) && !this.hasView) {\n          this.viewContainer.createEmbeddedView(this.templateRef);\n          this.hasView = true;\n        } else if (this.hasView) {\n          this.viewContainer.clear();\n          this.hasView = false;\n        }\n      });\n  }\n\n  @Input() set ifAuthenticated(condition: boolean) {\n    this.condition = condition;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtService.html":{"url":"injectables/JwtService.html","title":"injectable - JwtService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/auth/services/jwt.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroyToken\n                            \n                            \n                                getToken\n                            \n                            \n                                saveToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroyToken\n                        \n                    \n                \n            \n            \n                \ndestroyToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/auth/services/jwt.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/auth/services/jwt.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveToken\n                        \n                    \n                \n            \n            \n                \nsaveToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/auth/services/jwt.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\n\n@Injectable({ providedIn: \"root\" })\nexport class JwtService {\n  getToken(): string {\n    return window.localStorage[\"jwtToken\"];\n  }\n\n  saveToken(token: string): void {\n    window.localStorage[\"jwtToken\"] = token;\n  }\n\n  destroyToken(): void {\n    window.localStorage.removeItem(\"jwtToken\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListErrorsComponent.html":{"url":"components/ListErrorsComponent.html","title":"component - ListErrorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ListErrorsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/list-errors.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-list-errors\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgIf\n                            NgForOf\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./list-errors.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorList\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                errors\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    errors\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        errors\n                    \n                \n                \n                    \n                        Type :         Errors | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/list-errors.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/list-errors.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        errors\n                    \n                \n\n\n                \n                    \n                        seterrors(errorList: Errors | null)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/list-errors.component.ts:14\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            errorList\n                                                    \n                                                            \n                                                                            Errors | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input } from \"@angular/core\";\nimport { Errors } from \"../../core/models/errors.model\";\nimport { NgForOf, NgIf } from \"@angular/common\";\n\n@Component({\n  selector: \"app-list-errors\",\n  templateUrl: \"./list-errors.component.html\",\n  imports: [NgIf, NgForOf],\n  standalone: true,\n})\nexport class ListErrorsComponent {\n  errorList: string[] = [];\n\n  @Input() set errors(errorList: Errors | null) {\n    this.errorList = errorList\n      ? Object.keys(errorList.errors || {}).map(\n          (key) => `${key} ${errorList.errors[key]}`,\n        )\n      : [];\n  }\n}\n\n    \n\n    \n        @if (errorList) {\n  \n    @for (error of errorList; track error) {\n      {{ error }}\n    }\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (errorList) {      @for (error of errorList; track error) {      {{ error }}    }  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleCommentComponent', 'selector': 'app-article-comment'},{'name': 'ArticleComponent', 'selector': 'app-article-page'},{'name': 'ArticleListComponent', 'selector': 'app-article-list'},{'name': 'ArticleMetaComponent', 'selector': 'app-article-meta'},{'name': 'ArticlePreviewComponent', 'selector': 'app-article-preview'},{'name': 'AuthComponent', 'selector': 'app-auth-page'},{'name': 'EditorComponent', 'selector': 'app-editor-page'},{'name': 'FavoriteButtonComponent', 'selector': 'app-favorite-button'},{'name': 'FollowButtonComponent', 'selector': 'app-follow-button'},{'name': 'FooterComponent', 'selector': 'app-layout-footer'},{'name': 'HeaderComponent', 'selector': 'app-layout-header'},{'name': 'HomeComponent', 'selector': 'app-home-page'},{'name': 'ListErrorsComponent', 'selector': 'app-list-errors'},{'name': 'ProfileArticlesComponent', 'selector': 'app-profile-articles'},{'name': 'ProfileComponent', 'selector': 'app-profile-page'},{'name': 'ProfileFavoritesComponent', 'selector': 'app-profile-favorites'},{'name': 'SettingsComponent', 'selector': 'app-settings-page'}];\n    var DIRECTIVES = [{'name': 'IfAuthenticatedDirective', 'selector': '[ifAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListErrorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/MarkdownPipe.html":{"url":"pipes/MarkdownPipe.html","title":"pipe - MarkdownPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  MarkdownPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/markdown.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        markdown\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(content: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pipes/markdown.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        domSanitizer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DomSanitizer)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/pipes/markdown.pipe.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Pipe, PipeTransform, SecurityContext } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\n@Pipe({\n  name: \"markdown\",\n  standalone: true,\n})\nexport class MarkdownPipe implements PipeTransform {\n  domSanitizer = inject(DomSanitizer);\n  async transform(content: string): Promise {\n    const { marked } = await import(\"marked\");\n    return (\n      this.domSanitizer.sanitize(SecurityContext.HTML, marked.parse(content)) ||\n      \"\"\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Profile.html":{"url":"interfaces/Profile.html","title":"interface - Profile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Profile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/models/profile.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bio\n                                        \n                                \n                                \n                                        \n                                            following\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        following\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        following:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Profile {\n  username: string;\n  bio: string;\n  image: string;\n  following: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileArticlesComponent.html":{"url":"components/ProfileArticlesComponent.html","title":"component - ProfileArticlesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileArticlesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/profile/components/profile-articles.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile-articles\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ArticleListComponent\n                \n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                articlesConfig\n                            \n                            \n                                destroyRef\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, profileService: ProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/components/profile-articles.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/components/profile-articles.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        articlesConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ArticleListConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/components/profile-articles.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/components/profile-articles.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Profile\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/components/profile-articles.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, DestroyRef, inject, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { ArticleListComponent } from \"../../article/components/article-list.component\";\nimport { ProfileService } from \"../services/profile.service\";\nimport { Profile } from \"../models/profile.model\";\nimport { ArticleListConfig } from \"../../article/models/article-list-config.model\";\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\n\n@Component({\n  selector: \"app-profile-articles\",\n  template: ``,\n  imports: [ArticleListComponent],\n  standalone: true,\n})\nexport default class ProfileArticlesComponent implements OnInit {\n  profile!: Profile;\n  articlesConfig!: ArticleListConfig;\n  destroyRef = inject(DestroyRef);\n\n  constructor(\n    private route: ActivatedRoute,\n    private readonly profileService: ProfileService,\n  ) {}\n\n  ngOnInit(): void {\n    this.profileService\n      .get(this.route.snapshot.params[\"username\"])\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: (profile: Profile) => {\n          this.profile = profile;\n          this.articlesConfig = {\n            type: \"all\",\n            filters: {\n              author: this.profile.username,\n            },\n          };\n        },\n      });\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleCommentComponent', 'selector': 'app-article-comment'},{'name': 'ArticleComponent', 'selector': 'app-article-page'},{'name': 'ArticleListComponent', 'selector': 'app-article-list'},{'name': 'ArticleMetaComponent', 'selector': 'app-article-meta'},{'name': 'ArticlePreviewComponent', 'selector': 'app-article-preview'},{'name': 'AuthComponent', 'selector': 'app-auth-page'},{'name': 'EditorComponent', 'selector': 'app-editor-page'},{'name': 'FavoriteButtonComponent', 'selector': 'app-favorite-button'},{'name': 'FollowButtonComponent', 'selector': 'app-follow-button'},{'name': 'FooterComponent', 'selector': 'app-layout-footer'},{'name': 'HeaderComponent', 'selector': 'app-layout-header'},{'name': 'HomeComponent', 'selector': 'app-home-page'},{'name': 'ListErrorsComponent', 'selector': 'app-list-errors'},{'name': 'ProfileArticlesComponent', 'selector': 'app-profile-articles'},{'name': 'ProfileComponent', 'selector': 'app-profile-page'},{'name': 'ProfileFavoritesComponent', 'selector': 'app-profile-favorites'},{'name': 'SettingsComponent', 'selector': 'app-settings-page'}];\n    var DIRECTIVES = [{'name': 'IfAuthenticatedDirective', 'selector': '[ifAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileArticlesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/profile/pages/profile/profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                FollowButtonComponent\n                            NgIf\n                            RouterLink\n                            AsyncPipe\n                            RouterLinkActive\n                            RouterOutlet\n                                FollowButtonComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destroyRef\n                            \n                            \n                                isUser\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onToggleFollowing\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, userService: UserService, profileService: ProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/pages/profile/profile.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/pages/profile/profile.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onToggleFollowing\n                        \n                    \n                \n            \n            \n                \nonToggleFollowing(profile: Profile)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/pages/profile/profile.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                profile\n                                            \n                                                            Profile\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/pages/profile/profile.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/pages/profile/profile.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Profile\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/pages/profile/profile.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, DestroyRef, inject, OnInit } from \"@angular/core\";\nimport {\n  ActivatedRoute,\n  Router,\n  RouterLink,\n  RouterLinkActive,\n  RouterOutlet,\n} from \"@angular/router\";\nimport { catchError, switchMap } from \"rxjs/operators\";\nimport { combineLatest, of, throwError } from \"rxjs\";\nimport { UserService } from \"../../../../core/auth/services/user.service\";\nimport { Profile } from \"../../models/profile.model\";\nimport { ProfileService } from \"../../services/profile.service\";\nimport { AsyncPipe, NgIf } from \"@angular/common\";\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\nimport { FollowButtonComponent } from \"../../components/follow-button.component\";\n\n@Component({\n  selector: \"app-profile-page\",\n  templateUrl: \"./profile.component.html\",\n  imports: [\n    FollowButtonComponent,\n    NgIf,\n    RouterLink,\n    AsyncPipe,\n    RouterLinkActive,\n    RouterOutlet,\n    FollowButtonComponent,\n  ],\n  standalone: true,\n})\nexport class ProfileComponent implements OnInit {\n  profile!: Profile;\n  isUser: boolean = false;\n  destroyRef = inject(DestroyRef);\n\n  constructor(\n    private readonly route: ActivatedRoute,\n    private readonly router: Router,\n    private readonly userService: UserService,\n    private readonly profileService: ProfileService,\n  ) {}\n\n  ngOnInit() {\n    this.profileService\n      .get(this.route.snapshot.params[\"username\"])\n      .pipe(\n        catchError((error) => {\n          void this.router.navigate([\"/\"]);\n          return throwError(() => error);\n        }),\n        switchMap((profile) => {\n          return combineLatest([of(profile), this.userService.currentUser]);\n        }),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe(([profile, user]) => {\n        this.profile = profile;\n        this.isUser = profile.username === user?.username;\n      });\n  }\n\n  onToggleFollowing(profile: Profile) {\n    this.profile = profile;\n  }\n}\n\n    \n\n    \n        @if (profile) {\n  \n    \n      \n        \n          \n            \n            {{ profile.username }}\n            {{ profile.bio }}\n            @if (!isUser) {\n              \n            }\n            @if (isUser) {\n              \n                 Edit Profile Settings\n              \n            }\n          \n        \n      \n    \n\n    \n      \n        \n          \n            \n              \n                \n                  My Posts\n                \n              \n              \n                \n                  Favorited Posts\n                \n              \n            \n          \n\n          \n        \n      \n    \n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (profile) {                                                      {{ profile.username }}            {{ profile.bio }}            @if (!isUser) {                          }            @if (isUser) {                               Edit Profile Settings                          }                                                                                                                    My Posts                                                                              Favorited Posts                                                                                  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleCommentComponent', 'selector': 'app-article-comment'},{'name': 'ArticleComponent', 'selector': 'app-article-page'},{'name': 'ArticleListComponent', 'selector': 'app-article-list'},{'name': 'ArticleMetaComponent', 'selector': 'app-article-meta'},{'name': 'ArticlePreviewComponent', 'selector': 'app-article-preview'},{'name': 'AuthComponent', 'selector': 'app-auth-page'},{'name': 'EditorComponent', 'selector': 'app-editor-page'},{'name': 'FavoriteButtonComponent', 'selector': 'app-favorite-button'},{'name': 'FollowButtonComponent', 'selector': 'app-follow-button'},{'name': 'FooterComponent', 'selector': 'app-layout-footer'},{'name': 'HeaderComponent', 'selector': 'app-layout-header'},{'name': 'HomeComponent', 'selector': 'app-home-page'},{'name': 'ListErrorsComponent', 'selector': 'app-list-errors'},{'name': 'ProfileArticlesComponent', 'selector': 'app-profile-articles'},{'name': 'ProfileComponent', 'selector': 'app-profile-page'},{'name': 'ProfileFavoritesComponent', 'selector': 'app-profile-favorites'},{'name': 'SettingsComponent', 'selector': 'app-settings-page'}];\n    var DIRECTIVES = [{'name': 'IfAuthenticatedDirective', 'selector': '[ifAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileFavoritesComponent.html":{"url":"components/ProfileFavoritesComponent.html","title":"component - ProfileFavoritesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileFavoritesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/profile/components/profile-favorites.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile-favorites\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ArticleListComponent\n                \n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destroyRef\n                            \n                            \n                                favoritesConfig\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, profileService: ProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/components/profile-favorites.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/components/profile-favorites.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/components/profile-favorites.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        favoritesConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ArticleListConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/components/profile-favorites.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Profile\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/components/profile-favorites.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, DestroyRef, inject, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { ArticleListComponent } from \"../../article/components/article-list.component\";\nimport { ProfileService } from \"../services/profile.service\";\nimport { Profile } from \"../models/profile.model\";\nimport { ArticleListConfig } from \"../../article/models/article-list-config.model\";\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\n\n@Component({\n  selector: \"app-profile-favorites\",\n  template: ``,\n  imports: [ArticleListComponent],\n  standalone: true,\n})\nexport default class ProfileFavoritesComponent implements OnInit {\n  profile!: Profile;\n  favoritesConfig!: ArticleListConfig;\n  destroyRef = inject(DestroyRef);\n\n  constructor(\n    private route: ActivatedRoute,\n    private readonly profileService: ProfileService,\n  ) {}\n\n  ngOnInit() {\n    this.profileService\n      .get(this.route.parent?.snapshot.params[\"username\"])\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: (profile: Profile) => {\n          this.profile = profile;\n          this.favoritesConfig = {\n            type: \"all\",\n            filters: {\n              favorited: this.profile.username,\n            },\n          };\n        },\n      });\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleCommentComponent', 'selector': 'app-article-comment'},{'name': 'ArticleComponent', 'selector': 'app-article-page'},{'name': 'ArticleListComponent', 'selector': 'app-article-list'},{'name': 'ArticleMetaComponent', 'selector': 'app-article-meta'},{'name': 'ArticlePreviewComponent', 'selector': 'app-article-preview'},{'name': 'AuthComponent', 'selector': 'app-auth-page'},{'name': 'EditorComponent', 'selector': 'app-editor-page'},{'name': 'FavoriteButtonComponent', 'selector': 'app-favorite-button'},{'name': 'FollowButtonComponent', 'selector': 'app-follow-button'},{'name': 'FooterComponent', 'selector': 'app-layout-footer'},{'name': 'HeaderComponent', 'selector': 'app-layout-header'},{'name': 'HomeComponent', 'selector': 'app-home-page'},{'name': 'ListErrorsComponent', 'selector': 'app-list-errors'},{'name': 'ProfileArticlesComponent', 'selector': 'app-profile-articles'},{'name': 'ProfileComponent', 'selector': 'app-profile-page'},{'name': 'ProfileFavoritesComponent', 'selector': 'app-profile-favorites'},{'name': 'SettingsComponent', 'selector': 'app-settings-page'}];\n    var DIRECTIVES = [{'name': 'IfAuthenticatedDirective', 'selector': '[ifAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileFavoritesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/services/profile.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                follow\n                            \n                            \n                                get\n                            \n                            \n                                unfollow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/services/profile.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        follow\n                        \n                    \n                \n            \n            \n                \nfollow(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/services/profile.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/services/profile.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unfollow\n                        \n                    \n                \n            \n            \n                \nunfollow(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/services/profile.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { map, shareReplay } from \"rxjs/operators\";\nimport { Profile } from \"../models/profile.model\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({ providedIn: \"root\" })\nexport class ProfileService {\n  constructor(private readonly http: HttpClient) {}\n\n  get(username: string): Observable {\n    return this.http.get(\"/profiles/\" + username).pipe(\n      map((data: { profile: Profile }) => data.profile),\n      shareReplay(1),\n    );\n  }\n\n  follow(username: string): Observable {\n    return this.http\n      .post(\"/profiles/\" + username + \"/follow\", {})\n      .pipe(map((data: { profile: Profile }) => data.profile));\n  }\n\n  unfollow(username: string): Observable {\n    return this.http\n      .delete(\"/profiles/\" + username + \"/follow\")\n      .pipe(map((data: { profile: Profile }) => data.profile));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/settings.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ListErrorsComponent\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destroyRef\n                            \n                            \n                                errors\n                            \n                            \n                                isSubmitting\n                            \n                            \n                                settingsForm\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/settings/settings.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/settings.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/settings.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/settings.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/settings.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Errors | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/settings.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubmitting\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/settings.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        settingsForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    image: new FormControl(\"\", { nonNullable: true }),\n    username: new FormControl(\"\", { nonNullable: true }),\n    bio: new FormControl(\"\", { nonNullable: true }),\n    email: new FormControl(\"\", { nonNullable: true }),\n    password: new FormControl(\"\", {\n      validators: [Validators.required],\n      nonNullable: true,\n    }),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/settings.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/settings.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, DestroyRef, inject, OnInit } from \"@angular/core\";\nimport {\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { User } from \"../../core/auth/user.model\";\nimport { UserService } from \"../../core/auth/services/user.service\";\nimport { ListErrorsComponent } from \"../../shared/components/list-errors.component\";\nimport { Errors } from \"../../core/models/errors.model\";\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\n\ninterface SettingsForm {\n  image: FormControl;\n  username: FormControl;\n  bio: FormControl;\n  email: FormControl;\n  password: FormControl;\n}\n\n@Component({\n  selector: \"app-settings-page\",\n  templateUrl: \"./settings.component.html\",\n  imports: [ListErrorsComponent, ReactiveFormsModule],\n  standalone: true,\n})\nexport default class SettingsComponent implements OnInit {\n  user!: User;\n  settingsForm = new FormGroup({\n    image: new FormControl(\"\", { nonNullable: true }),\n    username: new FormControl(\"\", { nonNullable: true }),\n    bio: new FormControl(\"\", { nonNullable: true }),\n    email: new FormControl(\"\", { nonNullable: true }),\n    password: new FormControl(\"\", {\n      validators: [Validators.required],\n      nonNullable: true,\n    }),\n  });\n  errors: Errors | null = null;\n  isSubmitting = false;\n  destroyRef = inject(DestroyRef);\n\n  constructor(\n    private readonly router: Router,\n    private readonly userService: UserService,\n  ) {}\n\n  ngOnInit(): void {\n    this.settingsForm.patchValue(\n      this.userService.getCurrentUser() as Partial,\n    );\n  }\n\n  logout(): void {\n    this.userService.logout();\n  }\n\n  submitForm() {\n    this.isSubmitting = true;\n\n    this.userService\n      .update(this.settingsForm.value)\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: ({ user }) =>\n          void this.router.navigate([\"/profile/\", user.username]),\n        error: (err) => {\n          this.errors = err;\n          this.isSubmitting = false;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Your Settings\n\n        \n\n        \n          \n            \n              \n            \n\n            \n              \n            \n\n            \n              \n              \n            \n\n            \n              \n            \n\n            \n              \n            \n\n            \n              Update Settings\n            \n          \n        \n\n        \n        \n\n        \n          Or click here to logout.\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Your Settings                                                                                                                                                                                                                                                                Update Settings                                                                Or click here to logout.                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleCommentComponent', 'selector': 'app-article-comment'},{'name': 'ArticleComponent', 'selector': 'app-article-page'},{'name': 'ArticleListComponent', 'selector': 'app-article-list'},{'name': 'ArticleMetaComponent', 'selector': 'app-article-meta'},{'name': 'ArticlePreviewComponent', 'selector': 'app-article-preview'},{'name': 'AuthComponent', 'selector': 'app-auth-page'},{'name': 'EditorComponent', 'selector': 'app-editor-page'},{'name': 'FavoriteButtonComponent', 'selector': 'app-favorite-button'},{'name': 'FollowButtonComponent', 'selector': 'app-follow-button'},{'name': 'FooterComponent', 'selector': 'app-layout-footer'},{'name': 'HeaderComponent', 'selector': 'app-layout-header'},{'name': 'HomeComponent', 'selector': 'app-home-page'},{'name': 'ListErrorsComponent', 'selector': 'app-list-errors'},{'name': 'ProfileArticlesComponent', 'selector': 'app-profile-articles'},{'name': 'ProfileComponent', 'selector': 'app-profile-page'},{'name': 'ProfileFavoritesComponent', 'selector': 'app-profile-favorites'},{'name': 'SettingsComponent', 'selector': 'app-settings-page'}];\n    var DIRECTIVES = [{'name': 'IfAuthenticatedDirective', 'selector': '[ifAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SettingsForm.html":{"url":"interfaces/SettingsForm.html","title":"interface - SettingsForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SettingsForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/settings/settings.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bio\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bio:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, DestroyRef, inject, OnInit } from \"@angular/core\";\nimport {\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { User } from \"../../core/auth/user.model\";\nimport { UserService } from \"../../core/auth/services/user.service\";\nimport { ListErrorsComponent } from \"../../shared/components/list-errors.component\";\nimport { Errors } from \"../../core/models/errors.model\";\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\n\ninterface SettingsForm {\n  image: FormControl;\n  username: FormControl;\n  bio: FormControl;\n  email: FormControl;\n  password: FormControl;\n}\n\n@Component({\n  selector: \"app-settings-page\",\n  templateUrl: \"./settings.component.html\",\n  imports: [ListErrorsComponent, ReactiveFormsModule],\n  standalone: true,\n})\nexport default class SettingsComponent implements OnInit {\n  user!: User;\n  settingsForm = new FormGroup({\n    image: new FormControl(\"\", { nonNullable: true }),\n    username: new FormControl(\"\", { nonNullable: true }),\n    bio: new FormControl(\"\", { nonNullable: true }),\n    email: new FormControl(\"\", { nonNullable: true }),\n    password: new FormControl(\"\", {\n      validators: [Validators.required],\n      nonNullable: true,\n    }),\n  });\n  errors: Errors | null = null;\n  isSubmitting = false;\n  destroyRef = inject(DestroyRef);\n\n  constructor(\n    private readonly router: Router,\n    private readonly userService: UserService,\n  ) {}\n\n  ngOnInit(): void {\n    this.settingsForm.patchValue(\n      this.userService.getCurrentUser() as Partial,\n    );\n  }\n\n  logout(): void {\n    this.userService.logout();\n  }\n\n  submitForm() {\n    this.isSubmitting = true;\n\n    this.userService\n      .update(this.settingsForm.value)\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: ({ user }) =>\n          void this.router.navigate([\"/profile/\", user.username]),\n        error: (err) => {\n          this.errors = err;\n          this.isSubmitting = false;\n        },\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TagsService.html":{"url":"injectables/TagsService.html","title":"injectable - TagsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TagsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/article/services/tags.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/article/services/tags.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/services/tags.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({ providedIn: \"root\" })\nexport class TagsService {\n  constructor(private readonly http: HttpClient) {}\n\n  getAll(): Observable {\n    return this.http\n      .get(\"/tags\")\n      .pipe(map((data) => data.tags));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/auth/user.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bio\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  email: string;\n  token: string;\n  username: string;\n  bio: string;\n  image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/auth/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentUser\n                            \n                            \n                                    Private\n                                currentUserSubject\n                            \n                            \n                                    Public\n                                isAuthenticated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentUser\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                purgeAuth\n                            \n                            \n                                register\n                            \n                            \n                                setAuth\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, jwtService: JwtService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/auth/services/user.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                        JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/auth/services/user.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(credentials: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/auth/services/user.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/auth/services/user.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        purgeAuth\n                        \n                    \n                \n            \n            \n                \npurgeAuth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/auth/services/user.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(credentials: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/auth/services/user.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAuth\n                        \n                    \n                \n            \n            \n                \nsetAuth(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/auth/services/user.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(user: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/auth/services/user.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.currentUserSubject\n    .asObservable()\n    .pipe(distinctUntilChanged())\n                    \n                \n                    \n                        \n                                Defined in src/app/core/auth/services/user.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUserSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/auth/services/user.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.currentUser.pipe(map((user) => !!user))\n                    \n                \n                    \n                        \n                                Defined in src/app/core/auth/services/user.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Observable, BehaviorSubject } from \"rxjs\";\n\nimport { JwtService } from \"./jwt.service\";\nimport { map, distinctUntilChanged, tap, shareReplay } from \"rxjs/operators\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { User } from \"../user.model\";\nimport { Router } from \"@angular/router\";\n\n@Injectable({ providedIn: \"root\" })\nexport class UserService {\n  private currentUserSubject = new BehaviorSubject(null);\n  public currentUser = this.currentUserSubject\n    .asObservable()\n    .pipe(distinctUntilChanged());\n\n  public isAuthenticated = this.currentUser.pipe(map((user) => !!user));\n\n  constructor(\n    private readonly http: HttpClient,\n    private readonly jwtService: JwtService,\n    private readonly router: Router,\n  ) {}\n\n  login(credentials: {\n    email: string;\n    password: string;\n  }): Observable {\n    return this.http\n      .post(\"/users/login\", { user: credentials })\n      .pipe(tap(({ user }) => this.setAuth(user)));\n  }\n\n  register(credentials: {\n    username: string;\n    email: string;\n    password: string;\n  }): Observable {\n    return this.http\n      .post(\"/users\", { user: credentials })\n      .pipe(tap(({ user }) => this.setAuth(user)));\n  }\n\n  logout(): void {\n    this.purgeAuth();\n    void this.router.navigate([\"/\"]);\n  }\n\n  getCurrentUser(): Observable {\n    return this.http.get(\"/user\").pipe(\n      tap({\n        next: ({ user }) => this.setAuth(user),\n        error: () => this.purgeAuth(),\n      }),\n      shareReplay(1),\n    );\n  }\n\n  update(user: Partial): Observable {\n    return this.http.put(\"/user\", { user }).pipe(\n      tap(({ user }) => {\n        this.currentUserSubject.next(user);\n      }),\n    );\n  }\n\n  setAuth(user: User): void {\n    this.jwtService.saveToken(user.token);\n    this.currentUserSubject.next(user);\n  }\n\n  purgeAuth(): void {\n    this.jwtService.destroyToken();\n    this.currentUserSubject.next(null);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            function\n            initAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/auth/auth.component.ts\n            \n            interface\n            AuthForm\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/auth/if-authenticated.directive.ts\n            \n            directive\n            IfAuthenticatedDirective\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/auth/services/jwt.service.ts\n            \n            injectable\n            JwtService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/auth/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/core/auth/user.model.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/app/core/interceptors/api.interceptor.ts\n            \n            variable\n            apiInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/interceptors/error.interceptor.ts\n            \n            variable\n            errorInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/interceptors/token.interceptor.ts\n            \n            variable\n            tokenInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/layout/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/layout/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/models/errors.model.ts\n            \n            interface\n            Errors\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/features/article/components/article-comment.component.ts\n            \n            component\n            ArticleCommentComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/features/article/components/article-list.component.ts\n            \n            component\n            ArticleListComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/features/article/components/article-meta.component.ts\n            \n            component\n            ArticleMetaComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/features/article/components/article-preview.component.ts\n            \n            component\n            ArticlePreviewComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/features/article/components/favorite-button.component.ts\n            \n            component\n            FavoriteButtonComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/features/article/models/article-list-config.model.ts\n            \n            interface\n            ArticleListConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/features/article/models/article.model.ts\n            \n            interface\n            Article\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/features/article/models/comment.model.ts\n            \n            interface\n            Comment\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/features/article/pages/article/article.component.ts\n            \n            component\n            ArticleComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/features/article/pages/editor/editor.component.ts\n            \n            component\n            EditorComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/features/article/pages/editor/editor.component.ts\n            \n            interface\n            ArticleForm\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/features/article/pages/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/features/article/services/articles.service.ts\n            \n            injectable\n            ArticlesService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/features/article/services/comments.service.ts\n            \n            injectable\n            CommentsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/features/article/services/tags.service.ts\n            \n            injectable\n            TagsService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/features/profile/components/follow-button.component.ts\n            \n            component\n            FollowButtonComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/features/profile/components/profile-articles.component.ts\n            \n            component\n            ProfileArticlesComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/features/profile/components/profile-favorites.component.ts\n            \n            component\n            ProfileFavoritesComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/features/profile/models/profile.model.ts\n            \n            interface\n            Profile\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/features/profile/pages/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/features/profile/services/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/features/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/features/settings/settings.component.ts\n            \n            interface\n            SettingsForm\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/components/list-errors.component.ts\n            \n            component\n            ListErrorsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/markdown.pipe.ts\n            \n            pipe\n            MarkdownPipe\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 18.0.0\n        \n            @angular/common : 18.0.0\n        \n            @angular/compiler : 18.0.0\n        \n            @angular/core : 18.0.0\n        \n            @angular/forms : 18.0.0\n        \n            @angular/platform-browser : 18.0.0\n        \n            @angular/platform-browser-dynamic : 18.0.0\n        \n            @angular/router : 18.0.0\n        \n            @rx-angular/cdk : 18.0.0\n        \n            @rx-angular/template : 18.0.0\n        \n            cheerio : ^1.0.0\n        \n            esprima : ^4.0.1\n        \n            jsdom : ^25.0.1\n        \n            marked : ^11.1.0\n        \n            rxjs : ^7.4.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoadingState   (src/.../loading-state.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/models/loading-state.model.ts\n    \n        \n            \n                \n                    \n                        \n                        LoadingState\n                    \n                \n                        \n                            \n                                 NOT_LOADED\n                            \n                        \n                        \n                            \n                                Value : NOT_LOADED\n                            \n                        \n                        \n                            \n                                 LOADING\n                            \n                        \n                        \n                            \n                                Value : LOADING\n                            \n                        \n                        \n                            \n                                 LOADED\n                            \n                        \n                        \n                            \n                                Value : LOADED\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            initAuth   (src/.../app.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initAuth\n                        \n                    \n                \n            \n            \n                \ninitAuth(jwtService: JwtService, userService: UserService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                jwtService\n                                            \n                                                            JwtService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userService\n                                            \n                                                            UserService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\nAngular codebase containing real world examples (CRUD, auth, advanced patterns, etc) that adheres to the RealWorld spec and API.\n\nRealWorld\nThis codebase was created to demonstrate a fully fledged application built with Angular that interacts with an actual backend server including CRUD operations, authentication, routing, pagination, and more. We've gone to great lengths to adhere to the Angular Styleguide & best practices.\nAdditionally, there is an Angular 1.5 version of this codebase that you can fork and/or learn how to recreate.\nHow it works\nWe're currently working on some docs for the codebase (explaining where functionality is located, how it works, etc) but the codebase should be straightforward to follow as is. We've also released a step-by-step tutorial w/ screencasts that teaches you how to recreate the codebase from scratch.\nGetting started\nMake sure you have the Angular CLI installed globally. We use Yarn to manage the dependencies, so we strongly recommend you to use it. you can install it from Here, then run yarn install to resolve all dependencies (might take a minute).\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nBuilding the project\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nFunctionality overview\nThe example application is a social blogging site (i.e. a Medium.com clone) called \"Conduit\". It uses a custom API for all requests, including authentication. You can view a live demo over at https://angular.realworld.io\nGeneral functionality:\n\nAuthenticate users via JWT (login/signup pages + logout button on settings page)\nCRU* users (sign up & settings page - no deleting required)\nCRUD Articles\nCR*D Comments on articles (no updating required)\nGET and display paginated lists of articles\nFavorite articles\nFollow other users\n\nThe general page breakdown looks like this:\n\nHome page (URL: /#/ )\nList of tags\nList of articles pulled from either Feed, Global, or by Tag\nPagination for list of articles\n\n\nSign in/Sign up pages (URL: /#/login, /#/register )\nUses JWT (store the token in localStorage)\nAuthentication can be easily switched to session/cookie based\n\n\nSettings page (URL: /#/settings )\nEditor page to create/edit articles (URL: /#/editor, /#/editor/article-slug-here )\nArticle page (URL: /#/article/article-slug-here )\nDelete article button (only shown to article's author)\nRender markdown from server client side\nComments section at bottom of page\nDelete comment button (only shown to comment's author)\n\n\nProfile page (URL: /#/profile/:username, /#/profile/:username/favorites )\nShow basic user info\nList of articles populated from author's created articles or author's favorited articles\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2023 Thinkster\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    18 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n        \n            License : MIT\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apiInterceptor   (src/.../api.interceptor.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            errorInterceptor   (src/.../error.interceptor.ts)\n                        \n                        \n                            tokenInterceptor   (src/.../token.interceptor.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/interceptors/api.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apiInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n  const apiReq = req.clone({ url: `https://api.realworld.io/api${req.url}` });\n  return next(apiReq);\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideRouter(routes),\n    provideHttpClient(\n      withInterceptors([apiInterceptor, tokenInterceptor, errorInterceptor]),\n    ),\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initAuth,\n      deps: [JwtService, UserService],\n      multi: true,\n    },\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/interceptors/error.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        errorInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n  return next(req).pipe(catchError((err) => throwError(() => err.error)));\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/interceptors/token.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tokenInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n  const token = inject(JwtService).getToken();\n\n  const request = req.clone({\n    setHeaders: {\n      ...(token ? { Authorization: `Token ${token}` } : {}),\n    },\n  });\n  return next(request);\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
